{
  "58147586": {
    "code": "#include <bits/stdc++.h>\n//#pragma GCC optimize (\"Ofast\")\n\nusing namespace std;\nusing ll = long long;\n\nconst int MIN_L = 3;\nconst int MAX_L = 10;\nconst int MAX_C = 62;\nconst int MOD = 998244353;\n\nint char_to_int(char c){\n\tif(c >= 'a' && c <= 'z') return c - 'a';\n\tif(c >= 'A' && c <= 'Z') return 26 + c - 'A';\n\treturn 52 + c - '0';\n}\n\nstruct node{\n\tbool is_end;\n\n\tnode *children[MAX_C];\n\n\tbool find(string &s, int index){\n\t\tif(index == s.size()) return is_end;\n\t\tint char_index = char_to_int(s[index]);\n\t\tif(children[char_index] == nullptr) return false;\n\t\treturn children[char_index]->find(s, index + 1);\n\t}\n\n\tvoid insert(string &s, int index){\n\t\tif(index == s.size()){\n\t\t\tis_end = true;\n\t\t\treturn;\n\t\t}\n\t\tint char_index = char_to_int(s[index]);\n\t\tif(children[char_index] == nullptr) children[char_index] = new node();\n\t\tchildren[char_index]->insert(s, index + 1);\n\t}\n};\n\nint n;\nvector<string> words[MAX_L + 1];\nnode trie;\nint cnt[MAX_L + 1][MAX_C][MAX_C];\nll triplet[MAX_L + 1][MAX_C][MAX_C][MAX_C];\nint fact[5] = {1, 1, 2, 6, 24};\n\nint cmp(string &s, int l){\n\tfor(int i = 0; i < l; ++i){\n\t\tint a = char_to_int(s[i]);\n\t\tint b = char_to_int(s[l - i - 1]);\n\t\tif(a < b) return -1;\n\t\tif(a > b) return 1;\n\t}\n\treturn 0;\n}\n\nbool is_palindrome(string &s, int l){\n\tfor(int i = 0; i < l; ++i)\n\t\tif(s[i] != s[l - i - 1])\n\t\t\treturn false;\n\treturn true;\n}\n\nll get_triplets(int l, int a, int b, int c, int d){\n\tll r1 = triplet[l][a][b][c] * triplet[l][a][b][d];\n\tll r2 = triplet[l][a][c][d] * triplet[l][b][c][d];\n\tif(r1 >= MOD) r1 %= MOD;\n\tif(r2 >= MOD) r2 %= MOD;\n\n\tint k = 1, tmp = 1;\n\tif(a == b) ++tmp;\n\tif(b == c) ++tmp;\n\telse{\n\t\tk *= fact[tmp];\n\t\ttmp = 1;\n\t}\n\tif(c == d) ++tmp;\n\tk *= fact[tmp];\n\tk = fact[4] / k;\n\n\tll r = r1 * r2;\n\tif(r >= MOD) r %= MOD;\n\tr *= k;\n\tif(r >= MOD) r %= MOD;\n\treturn r;\n}\n\nint main(){\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\n\tcin >> n;\n\tfor(int i = 0; i < n; ++i){\n\t\tstring tmp;\n\t\tcin >> tmp;\n\t\twords[tmp.length()].push_back(tmp);\n\t}\n\n\tll ans = 0LL;\n\tfor(int l = MIN_L; l <= MAX_L; ++l) {\n\t\tfor(int i = 0; i < words[l].size(); ++i){\n\t\t\tint a = char_to_int(words[l][i][0]), b = char_to_int(words[l][i][l - 1]);\n\t\t\tint c = cmp(words[l][i], l);\n\t\t\tif(c == 1) reverse(words[l][i].begin(), words[l][i].end());\n\t\t\tif(trie.find(words[l][i], 0)) continue;\n\t\t\tcnt[l][a][b]++;\n\t\t\tif(c != 0) cnt[l][b][a]++;\n\t\t\ttrie.insert(words[l][i], 0);\n\t\t}\n\n\t\tfor(int i = 0; i < MAX_C; ++i)\n\t\t\tfor(int j = i; j < MAX_C; ++j)\n\t\t\t\tfor(int k = j; k < MAX_C; ++k)\n\t\t\t\t\tfor(int c = 0; c < MAX_C; ++c){\n\t\t\t\t\t\ttriplet[l][i][j][k] += (ll)cnt[l][c][i] * cnt[l][c][j] * cnt[l][c][k];\n\t\t\t\t\t\tif(triplet[l][i][j][k] >= MOD) triplet[l][i][j][k] %= MOD;\n\t\t\t\t\t}\n\n\t\tfor(int a = 0; a < MAX_C; ++a)\n\t\t\tfor(int b = a; b < MAX_C; ++b)\n\t\t\t\tfor(int c = b; c < MAX_C; ++c)\n\t\t\t\t\tfor(int d = c; d < MAX_C; ++d){\n\t\t\t\t\t\tans += get_triplets(l, a, b, c, d);\n\t\t\t\t\t\tif(ans >= MOD) ans %= MOD;\t\n\t\t\t\t\t}\n\t}\n\n\tcout << ans << \"\\n\";\n\n\treturn 0;\n}\n",
    "ext": "cpp"
  },
  "58146476": {
    "code": "\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define F0R(i, n) for (int i = 0; i < (n); i++)\n#define FOR(i, a, b) for (int i = (a); i < (b); i++)\n\ntemplate<class T> void uniquify(vector<T> &v) {\n  sort(v.begin(), v.end());\n  v.erase(unique(v.begin(), v.end()), v.end());\n}\n\nconst int B = 62, L = 11, M = 998244353;\nint A, code[CHAR_MAX];\n\ninline int madd(int a, int b) {\n  if ((a += b) >= M) a -= M;\n  return a;\n}\n\ninline int mmul(int a, int b) {\n  return 1LL * a * b % M;\n}\n\nint n, edge[B][B], corner[B][B][B], half[B][B][B][B], ans;\nvector<string> words[L];\n\nint main() {\n  ios::sync_with_stdio(0); cin.tie(0);\n\n  memset(code, -1, sizeof code);\n\n  cin >> n;\n  F0R(i, n) {\n    string w, z;\n    cin >> w;\n    for (char c : w) {\n      if (code[c] == -1) {\n        code[c] = A++;\n      }\n    }\n    z = w;\n    reverse(z.begin(), z.end());\n    if (w > z) {\n      swap(w, z);\n    }\n    words[w.length()].push_back(w);\n  }\n\n  assert(A <= B);\n\n  FOR(l, 3, L) if (words[l].size()) {\n    uniquify(words[l]);\n    F0R(a, A) F0R(b, A) {\n      edge[a][b] = 0;\n    }\n    F0R(a, A) FOR(b, a, A) FOR(c, b, A) {\n      corner[a][b][c] = 0;\n    }\n    F0R(a, A) FOR(b, a, A) F0R(c, A) FOR(d, c, A) {\n      half[a][b][c][d] = 0;\n    }\n    for (string &w : words[l]) {\n      string z = w;\n      bool pal = true;\n      F0R(i, l / 2) {\n        if (w[i] != w[l - 1 - i]) {\n          pal = false;\n          break;\n        }\n      }\n      char a = code[w[0]], b = code[w[l - 1]];\n      edge[a][b]++;\n      if (!pal) {\n        edge[b][a]++;\n      }\n    }\n    F0R(a, A) FOR(b, a, A) FOR(c, b, A) F0R(d, A) {\n      corner[a][b][c] = madd(corner[a][b][c], mmul(edge[a][d], mmul(edge[b][d], edge[c][d])));\n    }\n    F0R(a, A) FOR(b, a, A) F0R(c, A) FOR(d, c, A) {\n      int p1 = min(a, c), p3 = max(b, c), p2 = a + b + c - p1 - p3;\n      int q1 = min(a, d), q3 = max(b, d), q2 = a + b + d - q1 - q3;\n      half[a][b][c][d] = madd(half[a][b][c][d], mmul(corner[p1][p2][p3], corner[q1][q2][q3]));\n    }\n    F0R(a, A) FOR(b, a, A) F0R(c, A) FOR(d, c, A) {\n      int amt = mmul(half[a][b][c][d], half[c][d][a][b]);\n      if (a != b) {\n        amt = madd(amt, amt);\n      }\n      if (c != d) {\n        amt = madd(amt, amt);\n      }\n      ans = madd(ans, amt);\n    }\n  }\n\n  printf(\"%d\\n\", ans);\n}\n",
    "ext": "cpp"
  },
  "58140884": {
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n\ntypedef pair<int, int> ii;\n\nmap<string, bool> mymap;\n\nconst int mod = 998244353;\n\nint add(int x, int y) {\n    if(1ll * x + 1ll * y >= mod)\n        return (1ll * x + 1ll * y) % mod;\n    else\n        return 1ll * x + 1ll * y;\n}\n\nint mul(int x, int y) {\n    if(1ll * x * 1ll * y >= mod)\n        return (1ll * x * 1ll * y) % mod;\n    else\n        return 1ll * x * 1ll * y;\n}\n\nint cnt[15][65][65], dp[15][65][65][65];\nint name[125];\n\nint n;\n\nint main() {\n    cin.tie(0), ios::sync_with_stdio(0);\n    cin >> n;\n    int lmao = 0;\n    for(int i = (int)('a'); i <= (int)('z'); ++i)\n        name[i] = lmao++;\n    for(int i = (int)('A'); i <= (int)('Z'); ++i)\n        name[i] = lmao++;\n    for(int i = (int)('0'); i <= (int)('9'); ++i)\n        name[i] = lmao++;\n    lmao--;\n    for(int i = 1; i <= n; ++i) {\n        string s;\n        cin >> s;\n        string t = s;\n        if(mymap.count(s)) continue;\n        reverse(s.begin(), s.end());\n        mymap[s] = 1;\n        int m = s.length();\n        cnt[m][name[(int)(s[0])]][name[(int)(s[m - 1])]]++;\n        if(s != t)\n            cnt[m][name[(int)(s[m - 1])]][name[(int)(s[0])]]++;\n    }\n    int sum = 0;\n    for(int len = 3; len <= 10; ++len) {\n        for(int i = 0; i <= lmao; ++i) {\n            for(int j = i; j <= lmao; ++j) {\n                for(int k = j; k <= lmao; ++k) {\n                    int x = 0;\n                    for(int l = 0; l <= lmao; ++l)\n                        x = add(x, mul(mul(cnt[len][l][i], cnt[len][l][j]), cnt[len][l][k]));\n                        dp[len][i][j][k] = x;\n                        dp[len][i][k][j] = x;\n                        dp[len][j][i][k] = x;\n                        dp[len][j][k][i] = x;\n                        dp[len][k][i][j] = x;\n                        dp[len][k][j][i] = x;\n                }\n            }\n        }\n        for(int i = 0; i <= lmao; ++i) {\n            for(int j = i; j <= lmao; ++j) {\n                for(int k = 0; k <= lmao; ++k) {\n                    for(int l = k; l <= lmao; ++l) {\n                        int x = mul(mul(mul(dp[len][i][j][k], dp[len][i][j][l]), dp[len][i][l][k]), dp[len][j][l][k]);\n                        if(i != j)\n                            x = mul(x, 2);\n                        if(k != l)\n                            x = mul(x, 2);\n                        sum = add(sum, x);\n                    }\n                }\n            }\n        }\n    }\n    cout << sum;\n}\n",
    "ext": "cpp"
  },
  "58102670": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nconst unsigned long long mod=998244353,r=1e19;\nint i,i0,n,m;\nunsigned long long dp[62][62][62],mp[62][62],ans;\nstruct node\n{\n    int s,t;\n    bool f;\n};\nvector<node>v[11];\nint cal(char c)\n{\n    if('a'<=c&&c<='z')return c-'a';\n    if('A'<=c&&c<='Z')return c-'A'+26;\n    if('0'<=c&&c<='9')return c-'0'+52;\n}\nunordered_map<string,bool>dic;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        char t[11];\n        node p;\n        scanf(\"%s\",t);\n        int len=strlen(t);\n        if(dic.count(t))continue;\n        reverse(t,t+len);\n        if(dic.count(t))continue;\n        dic[t]=1;\n        p.f=1;\n        for(i0=0;i0*2<len;i0++)if(t[i0]!=t[len-i0-1])p.f=0;\n        p.s=cal(t[0]),p.t=cal(t[len-1]);\n        v[len].push_back(p);\n    }\n    int d=62;\n    for(i=3;i<=10;i++)\n    {\n        memset(mp,0,sizeof(mp));\n        for(node x:v[i])\n        {\n            mp[x.s][x.t]++;\n            if(!x.f)mp[x.t][x.s]++;\n        }\n        memset(dp,0,sizeof(dp));\n        for(int i1=0;i1<d;i1++)\n        {\n            for(int i2=0;i2<d;i2++)\n            {\n                for(int i3=0;i3<d;i3++)\n                {\n                    for(int i4=0;i4<d;i4++)\n                    {\n                        dp[i1][i2][i3]+=mp[i1][i4]*mp[i2][i4]*mp[i3][i4];\n                    }\n                    dp[i1][i2][i3]%=mod;\n                }\n            }\n        }\n        for(int i1=0;i1<d;i1++)\n        {\n            for(int i2=0;i2<d;i2++)\n            {\n                for(int i3=0;i3<d;i3++)\n                {\n                    unsigned long long t=0;\n                    for(int i4=0;i4<d;i4++)\n                    {\n                        t+=dp[i1][i2][i4]*dp[i1][i3][i4]%mod*dp[i2][i3][i4];\n                        if(t>r)t%=mod;\n                    }\n                    t%=mod;\n                    ans+=dp[i1][i2][i3]*t;\n                    ans%=mod;\n                }\n            }\n        }\n    }\n    printf(\"%llu\\n\",ans);\n    return 0;\n}\n\n",
    "ext": "cpp"
  },
  "58077239": {
    "code": "#pragma GCC optimize (\"O3\")\n#include<cstdio>\n#include<string>\n#include<algorithm>\n#include<iostream>\n#include<vector>\n#define mod 998244353\nusing namespace std;\nint calc(char c)\n{\n    if (c>='a' && c<='z')\n        return c-'a';\n    if (c>='A' && c<='Z')\n        return 26+c-'A';\n    return 52+c-'0';\n}\nvector<string>v;\nint nr[11][62][62],temp[62][62],w[62][62][62],w2[62][62][62][62];\nint get(int a,int b,int c,int d)\n{\n    if (a>b)\n        swap(a,b);\n    if (a>c)\n        swap(a,c);\n    if (a>d)\n        swap(a,d);\n    if (b>c)\n        swap(b,c);\n    if (b>d)\n        swap(b,d);\n    if (c>d)\n        swap(c,d);\n    return w2[a][b][c][d];\n}\nint main()\n{\n    //freopen(\"cubeword.in\",\"r\",stdin);\n    //freopen(\"cubeword.out\",\"w\",stdout);\n    int n;\n    scanf(\"%d\\n\",&n);\n    int i;\n    string s,s2;\n    for(i=1;i<=n;i++)\n        {\n        cin>>s;\n        s2=s;\n        reverse(s2.begin(),s2.end());\n        s=min(s,s2);\n        v.push_back(s);\n        }\n    sort(v.begin(),v.end());\n    v.erase(unique(v.begin(),v.end()),v.end());\n    for(auto it:v)\n        {\n        nr[it.size()][calc(it.front())][calc(it.back())]++;\n        s2=it;\n        reverse(s2.begin(),s2.end());\n        if (s2!=it)\n            nr[it.size()][calc(it.back())][calc(it.front())]++;\n        }\n    int i1,a,b,c,d,j;\n    int rasp=0,aux;\n    for(i1=3;i1<=10;i1++)\n        {\n        for(i=0;i<62;i++)\n            for(j=0;j<62;j++)\n                temp[i][j]=nr[i1][i][j];\n        for(a=0;a<62;a++)\n            for(b=a;b<62;b++)\n                for(c=b;c<62;c++)\n                    {\n                    w[a][b][c]=0;\n                    for(d=0;d<62;d++)\n                        {\n                        aux=1LL*temp[a][d]*temp[b][d]*temp[c][d]%mod;\n                        w[a][b][c]=w[a][b][c]+aux;\n                        if (w[a][b][c]>=mod)\n                            w[a][b][c]-=mod;\n                        }\n                    }\n        for(a=0;a<62;a++)\n            for(b=a;b<62;b++)\n                for(c=b;c<62;c++)\n                    for(d=c;d<62;d++)\n                        w2[a][b][c][d]=(1LL*(1LL*w[a][b][c]*w[a][b][d]%mod)*(1LL*w[a][c][d]*w[b][c][d]%mod))%mod;\n        for(a=0;a<62;a++)\n            for(b=0;b<62;b++)\n                for(c=0;c<62;c++)\n                    for(d=0;d<62;d++)\n                        {\n                        rasp=rasp+get(a,b,c,d);\n                        if (rasp>=mod)\n                            rasp-=mod;\n                        }\n        }\n    printf(\"%d\\n\",rasp);\nreturn 0;\n}\n",
    "ext": "cpp"
  },
  "58048215": {
    "code": "#include <stdio.h>\n#include <string.h>\n#define N (100010)\n#define MD (998244353)\nchar s[N][11];\nint n, l[N];\n#define M (62)\nint f[M][M];\nint r(int x) {\n    for (int i = 0; i < l[x] / 2; ++i) {\n        if (s[x][i] != s[x][l[x]-i-1]) {\n            return 0;\n        }\n    }\n    return 1;\n}\ntypedef long long LL;\nLL ans = 0;\nint g[M][M][M];\nvoid work(int len) {\n    for (int i = 0; i < M; ++i) {\n        for (int j = 0; j < M; ++j) {\n            f[i][j] = 0;\n        }\n    }\n    for (int i = 0; i < n; ++i) {\n        if (l[i] == len) {\n            if (r(i)) {\n                f[s[i][0]][s[i][0]] += 1; \n            } else {\n                f[s[i][0]][s[i][len-1]] += 1;\n                f[s[i][len-1]][s[i][0]] += 1;\n            }\n        }\n    }\n    memset(g, 0, sizeof(g));\n    for (int i = 0; i < M; ++i) {\n        for (int j = i; j < M; ++j) {\n            for (int k = j; k < M; ++k) {\n                LL temp = 0;\n                for (int l = 0; l < M; ++l) {\n                    temp += 1ll * f[i][l] * f[j][l] * f[k][l] % MD;\n                }\n                g[i][j][k] = temp % MD;\n            }\n        }\n    }\n    LL temp = 0;\n    for (int i = 0; i < M; ++i) {\n        for (int j = i+1; j < M; ++j) {\n            for (int k = j+1; k < M; ++k) {\n                for (int l = k+1; l < M; ++l) {\n                    temp += 1ll * g[i][j][k]*g[i][j][l] % MD*g[i][k][l] %MD*g[j][k][l] % MD;\n                }\n            }\n        }\n    }\n    ans += temp * 24ll % MD;\n    temp = 0;\n    for (int i = 0; i < M; ++i) {\n        for (int j = i + 1; j < M; ++j) {\n            for (int k = j + 1; k < M; ++k) {\n                temp += 1ll * g[i][i][k] * g[i][i][j] %MD * g[i][j][k] % MD * g[i][j][k] % MD;\n                temp += 1ll * g[i][j][k] * g[i][j][k] % MD * g[i][j][j] % MD * g[j][j][k] % MD;\n                temp += 1ll * g[i][j][k] * g[i][j][k] % MD * g[i][k][k] % MD * g[j][k][k] % MD;\n            }\n        }\n    }\n    ans += temp * 12ll % MD;\n    temp = 0;\n    for (int i = 0; i < M; ++i) {\n        for (int j = i+1; j < M; ++j) {\n            temp += 1ll * g[i][i][j] * g[i][i][j] % MD * g[i][j][j] %MD * g[i][j][j] % MD;\n        }\n    }\n    ans += temp * 6ll % MD;\n    temp = 0;\n    for (int i = 0; i < M; ++i) {\n        for (int j = i+1; j < M; ++j) {\n            temp += 1ll * g[i][i][i] * g[i][i][j] % MD * g[i][i][j] % MD * g[i][i][j] % MD;\n            temp += 1ll * g[i][j][j] * g[i][j][j] % MD * g[i][j][j] % MD * g[j][j][j] % MD;\n        }\n    }\n    ans += temp * 4ll % MD;\n    for (int i = 0; i < M; ++i) {\n        ans += 1ll * g[i][i][i] * g[i][i][i] % MD * g[i][i][i] % MD * g[i][i][i] % MD;\n    }\n    ans %= MD;\n}\nint trs(char x) {\n    return 'a' <= x && x <= 'z' ? x - 'a' : ('A' <= x && x <= 'Z' ? x - 'A' + 26 : x - '0' + 52); \n}\n \nint tr[N*11][M], fg[N*11], cnt;\n \nint insert(char s[], int n) {\n    int now = 0, find = 1;\n    for (int i = n-1; ~i; --i) {\n        if (!tr[now][s[i]]) {\n            find = 0;\n            break;\n        } else {\n            now = tr[now][s[i]];\n        }\n    }\n    if (find && fg[now]) {\n        return 1;\n    }\n    now = 0;\n    for (int i = 0; i < n; ++i) {\n        if (!tr[now][s[i]]) {\n            tr[now][s[i]] = ++cnt;\n        }\n        now = tr[now][s[i]];\n    }\n    fg[now] = 1;\n    return 0;\n}\n \nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; ++i) {\n        scanf(\"%s\", s[i]);\n        l[i] = strlen(s[i]);\n        for (int j = 0; j < l[i]; ++j) {\n            s[i][j] = trs(s[i][j]);\n        }\n        if (insert(s[i], l[i])) {\n            n--; --i;\n        }\n    }\n    for (int i = 3; i <= 10; ++i) {\n        work(i);\n    }\n    printf(\"%d\\n\", (int)(ans % MD));\n}",
    "ext": "cpp"
  },
  "58035926": {
    "code": "#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n \nconst int mod = 998244353;\n \nusing int64 = long long;\n \nint count[62][62];\nint64 dp[62][62][62];\n \nint idx(char c) {\n  if (c >= 'a' && c <= 'z') return c - 'a' + 10;\n  else if (c >= 'A' && c <= 'Z') return c - 'A' + 10 + 26;\n  else return c - '0';\n}\n \nint solve(std::vector<std::string> &s) {\n  memset(count, 0, sizeof(count));\n  memset(dp, 0, sizeof(dp));\n  std::sort(s.begin(), s.end());\n  s.erase(std::unique(s.begin(), s.end()), s.end());\n  for (auto &w: s) {\n    count[idx(w[0])][idx(w.back())]++;\n  }\n  for (int d = 0; d < 62; ++d) {\n    for (int a = 0; a < 62; ++a) {\n      for (int b = a; b < 62; ++b) {\n        for (int c = b; c < 62; ++c) {\n          dp[a][b][c] += (int64)count[d][a] * count[d][b] % mod * count[d][c] % mod;\n        }\n      }\n    }\n  }\n  for (int a = 0; a < 62; ++a) {\n    for (int b = a; b < 62; ++b) {\n      for (int c = b; c < 62; ++c) {\n        dp[a][b][c] %= mod;\n      }\n    }\n  }\n  int64 ret = 0;\n  for (int a = 0; a < 62; ++a) {\n    for (int b = a; b < 62; ++b) {\n      for (int c = b; c < 62; ++c) {\n        for (int d = c; d < 62; ++d) {\n          int m = 24;\n          if (a == d) { // a = b = c = d\n            m = 1;\n          } else if (a == c) { // a = b = c < d\n            m = 4;\n          } else if (a == b) {\n            if (c == d) { // a = b < c = d\n              m = 6;\n            } else { // a = b < c < d\n              m = 12;\n            }\n          } else if (b == d) { // a < b = c = d\n            m = 4;\n          } else if (b == c || c == d) { // a < b = c < d or a < b < c = d\n            m = 12;\n          }\n          ret += dp[a][b][c] * dp[a][b][d] % mod * dp[a][c][d] % mod * dp[b][c][d] % mod * m % mod;\n \n        }\n      }\n    }\n  }\n  return ret % mod;\n}\n \nint main() {\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(0);\n  int n;\n  std::cin >> n;\n  std::vector<std::vector<std::string>> words(11);\n  for (int i = 0; i < n; ++i) {\n    std::string s;\n    std::cin >> s;\n    words[s.size()].push_back(s);\n    std::reverse(s.begin(), s.end());\n    words[s.size()].push_back(s);\n  }\n  int ret = 0;\n  for (int i = 3; i <= 10; ++i) {\n    ret += solve(words[i]);\n    ret %= mod;\n  }\n  std::cout << ret << std::endl;\n  return 0;\n}",
    "ext": "cpp"
  },
  "57998939": {
    "code": "#pragma GCC optimize(\"O3\")\n\n#include <bits/stdc++.h>\n\n#define MOD 998244353\n#define SIZES 8\n#define LETTERS 62\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline int tosize(int i) {\n    return i - 3;\n}\n\ninline int tonum(char c) {\n    if (c >= 'a' && c <= 'p') {\n        return c - 'a';\n    }\n    if (c >= 'A' && c <= 'P') {\n        return c - 'A' + 16;\n    }\n    if (c >= 'q' && c <= 'z') {\n        return c - 'q' + 32;\n    }\n    if (c >= 'Q' && c <= 'Z') {\n        return c - 'Q' + 42;\n    }\n    if (c >= '0' && c <= '9') {\n        return c - '0' + 52;\n    }\n    return -1;\n}\n\nint qty[SIZES][LETTERS][LETTERS];\nll tri[LETTERS][LETTERS][LETTERS];\n\nint main() {\n    ios_base::sync_with_stdio(false);\n\n    int n;\n    cin >> n;\n\n    set<string> known;\n    for (int i = 0; i < n; i++) {\n        string s;\n        cin >> s;\n\n        while (known.find(s) == known.end()) {\n            known.insert(s);\n            qty[tosize(s.length())][tonum(*s.begin())][tonum(*s.rbegin())]++;\n            reverse(s.begin(), s.end());\n        }\n    }\n\n    ll result = 0;\n    for (int k = 0; k < SIZES; k++) {\n        ll temp;\n        for (int a = 0; a < LETTERS; a++) {\n            for (int b = 0; b <= a; b++) {\n                for (int c = 0; c <= b; c++) {\n                    tri[a][b][c] = 0;\n                    for (int x = 0; x < LETTERS; x++) {\n                        tri[a][b][c] += (ll) qty[k][a][x] * qty[k][b][x] * qty[k][c][x];\n                    }\n                    tri[a][b][c] %= MOD;\n                }\n            }\n        }\n        \n        // 0eq = 24x\n        temp = 0;\n        for (int a = 0; a < LETTERS; a++) {\n            for (int b = 0; b < a; b++) {\n                for (int c = 0; c < b; c++) {\n                    for (int d = 0; d < c; d++) {\n                        temp = (temp + ((tri[a][b][c] * tri[a][b][d]) % MOD) * ((tri[a][c][d] * tri[b][c][d]) % MOD)) % MOD;\n                    }\n                }\n            }\n        }\n        result = (result + temp * 24) % MOD;\n\n        // 2eq = 12x\n        temp = 0;\n        for (int a = 0; a < LETTERS; a++) {\n            const int b = a;\n            for (int c = 0; c < b; c++) {\n                for (int d = 0; d < c; d++) {\n                    temp = (temp + ((tri[a][b][c] * tri[a][b][d]) % MOD) * ((tri[a][c][d] * tri[b][c][d]) % MOD)) % MOD;\n                }\n            }\n        }\n        for (int a = 0; a < LETTERS; a++) {\n            for (int b = 0; b < a; b++) {\n                const int c = b;\n                for (int d = 0; d < c; d++) {\n                    temp = (temp + ((tri[a][b][c] * tri[a][b][d]) % MOD) * ((tri[a][c][d] * tri[b][c][d]) % MOD)) % MOD;\n                }\n            }\n        }\n        for (int a = 0; a < LETTERS; a++) {\n            for (int b = 0; b < a; b++) {\n                for (int c = 0; c < b; c++) {\n                    const int d = c;\n                    temp = (temp + ((tri[a][b][c] * tri[a][b][d]) % MOD) * ((tri[a][c][d] * tri[b][c][d]) % MOD)) % MOD;\n                }\n            }\n        }\n        result = (result + temp * 12) % MOD;\n\n        // 2x2 eq = 6x\n        temp = 0;\n        for (int a = 0; a < LETTERS; a++) {\n            const int b = a;\n            for (int c = 0; c < b; c++) {\n                const int d = c;\n                temp = (temp + ((tri[a][b][c] * tri[a][b][d]) % MOD) * ((tri[a][c][d] * tri[b][c][d]) % MOD)) % MOD;\n            }\n        }\n        result = (result + temp * 6) % MOD;\n\n        // 3 eq = 4x\n        temp = 0;\n        for (int a = 0; a < LETTERS; a++) {\n            const int b = a;\n            const int c = b;\n            for (int d = 0; d < c; d++) {\n                temp = (temp + ((tri[a][b][c] * tri[a][b][d]) % MOD) * ((tri[a][c][d] * tri[b][c][d]) % MOD)) % MOD;\n            }\n        }\n        for (int a = 0; a < LETTERS; a++) {\n            for (int b = 0; b < a; b++) {\n                const int c = b;\n                const int d = c;\n                temp = (temp + ((tri[a][b][c] * tri[a][b][d]) % MOD) * ((tri[a][c][d] * tri[b][c][d]) % MOD)) % MOD;\n            }\n        }\n        result = (result + temp * 4) % MOD;\n\n        // 4 eq = 1x\n        temp = 0;\n        for (int a = 0; a < LETTERS; a++) {\n            const int b = a;\n            const int c = b;\n            const int d = c;\n            temp = (temp + ((tri[a][b][c] * tri[a][b][d]) % MOD) * ((tri[a][c][d] * tri[b][c][d]) % MOD)) % MOD;\n        }\n        result = (result + temp * 1) % MOD;\n    }\n    \n    cout << result << endl;\n\n    return 0;\n}\n\n/*for (int a = 0; a < LETTERS; a++) {\n    for (int b = 0; b <= a; b++) { // opt\n        for (int c = 0; c <= b; c++) { // opt *\n            tri[a][b][c] = 0;\n            for (int x = 0; x < LETTERS; x++) {\n                tri[a][b][c] += qty[k][a][x] * qty[k][b][x] * qty[k][c][x];\n            }\n            tri[a][b][c] %= MOD;\n            tri[b][c][a] = tri[a][b][c]; // *\n        }\n    }\n}\n\nfor (int a = 0; a < LETTERS; a++) {\n    for (int b = 0; b < LETTERS; b++) {\n        for (int c = 0; c < LETTERS; c++) {\n            for (int d = 0; d < LETTERS; d++) {\n                temp = (temp + ((tri[a][b][c] * tri[b][a][d]) % MOD) * ((tri[c][d][a] * tri[d][c][b]) % MOD)) % MOD;\n            }\n        }\n    }\n}\n*/\n",
    "ext": "cpp"
  },
  "57990466": {
    "code": "#pragma GCC optimize(\"O3\")\n\n#include <bits/stdc++.h>\n\n#define MOD 998244353\n#define SIZES 8\n#define LETTERS 62\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline int tosize(int i) {\n    return i - 3;\n}\n\ninline int tonum(char c) {\n    if (c >= 'a' && c <= 'p') {\n        return c - 'a';\n    }\n    if (c >= 'A' && c <= 'P') {\n        return c - 'A' + 16;\n    }\n    if (c >= 'q' && c <= 'z') {\n        return c - 'q' + 32;\n    }\n    if (c >= 'Q' && c <= 'Z') {\n        return c - 'Q' + 42;\n    }\n    if (c >= '0' && c <= '9') {\n        return c - '0' + 52;\n    }\n    return -1;\n}\n\nint qty[SIZES][LETTERS][LETTERS];\nll tri[LETTERS][LETTERS][LETTERS];\nll quad[LETTERS][LETTERS][LETTERS][LETTERS];\n\nint main() {\n    ios_base::sync_with_stdio(false);\n\n    int n;\n    cin >> n;\n\n    set<string> known;\n    for (int i = 0; i < n; i++) {\n        string s;\n        cin >> s;\n\n        while (known.find(s) == known.end()) {\n            known.insert(s);\n            qty[tosize(s.length())][tonum(*s.begin())][tonum(*s.rbegin())]++;\n            reverse(s.begin(), s.end());\n        }\n    }\n\n    ll result = 0;\n    for (int k = 0; k < SIZES; k++) {\n        for (int a = 0; a < LETTERS; a++) {\n            for (int b = 0; b <= a; b++) {\n                for (int c = 0; c < LETTERS; c++) {\n                    tri[a][b][c] = 0;\n                    for (int x = 0; x < LETTERS; x++) {\n                        tri[a][b][c] += qty[k][a][x] * qty[k][b][x] * qty[k][c][x];\n                    }\n                    tri[a][b][c] %= MOD;\n                }\n            }\n        }\n\n        for (int a = 0; a < LETTERS; a++) {\n            for (int b = 0; b <= a; b++) {\n                for (int x = 0; x < LETTERS; x++) {\n                    for (int y = 0; y <= x; y++) {\n                        quad[a][b][x][y] = (tri[a][b][x] * tri[a][b][y]) % MOD;\n                    }\n                }\n            }\n        }\n\n        ll temp = 0;\n        for (int a = 0; a < LETTERS; a++) {\n            for (int b = 0; b < a; b++) {\n                for (int c = 0; c < LETTERS; c++) {\n                    for (int d = 0; d < c; d++) {\n                        temp += quad[a][b][c][d] * quad[c][d][a][b];\n                        temp %= MOD;\n                    }\n                }\n            }\n        }\n        temp *= 2;\n        temp %= MOD;\n        \n        for (int a = 0; a < LETTERS; a++) {\n            int b = a;\n            for (int c = 0; c < LETTERS; c++) {\n                for (int d = 0; d < c; d++) {\n                    temp += quad[a][b][c][d] * quad[c][d][a][b];\n                    temp %= MOD;\n                }\n            }\n        }\n        for (int a = 0; a < LETTERS; a++) {\n            for (int b = 0; b < a; b++) {\n                for (int c = 0; c < LETTERS; c++) {\n                    int d = c;\n                    temp += quad[a][b][c][d] * quad[c][d][a][b];\n                    temp %= MOD;\n                }\n            }\n        }\n        temp *= 2;\n        temp %= MOD;\n\n        for (int a = 0; a < LETTERS; a++) {\n            int b = a;\n            for (int c = 0; c < LETTERS; c++) {\n                int d = c;\n                temp += quad[a][b][c][d] * quad[c][d][a][b];\n                temp %= MOD;\n            }\n        }\n        result += temp;\n        result %= MOD;\n    }\n    \n    cout << result << endl;\n\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57988311": {
    "code": "#include <bits/stdc++.h>\n#pragma GCC optimize (\"Ofast\")\n\nusing namespace std;\n\nconst long long mod=998244353;\nconst int eps=62;\nset<string> s;\nlong long num[11][eps][eps];\nlong long f[eps][eps][eps][eps];\nlong long g[eps][eps][eps];\nstring alphabet=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\nint sz;\n\nint id(char a)\n{\n    if('a'<=a&&a<='z') return a-'a';\n    else if('A'<=a&&a<='Z') return a-'A'+26;\n    else return a-'0'+52;\n}\n\nvoid modify(long long &a)\n{\n    if(a>=mod) a%=mod;\n}\n\nlong long part(int a,int b,int c,int d)\n{\n    vector<int> v={a,b,c,d};\n    long long res=0;\n    do {res++;}\n    while(next_permutation(v.begin(),v.end()));\n    return res;\n}\n\nvoid ini()\n{\n    for(int a=0;a<eps;a++)\n    {\n        for(int b=a;b<eps;b++)\n        {\n            for(int c=b;c<eps;c++)\n            {\n                for(int x=0;x<eps;x++)\n                {\n                    f[a][b][c][x]=1;\n                    f[a][b][c][x]*=num[sz][a][x];\n                    modify(f[a][b][c][x]);\n                    f[a][b][c][x]*=num[sz][b][x];\n                    modify(f[a][b][c][x]);\n                    f[a][b][c][x]*=num[sz][c][x];\n                    modify(f[a][b][c][x]);\n                }\n            }\n        }\n    }\n    for(int a=0;a<eps;a++)\n    {\n        for(int b=a;b<eps;b++)\n        {\n            for(int c=b;c<eps;c++)\n            {\n                g[a][b][c]=0;\n                for(int x=0;x<eps;x++)\n                {\n                    g[a][b][c]+=f[a][b][c][x];\n                    modify(g[a][b][c]);\n                }\n            }\n        }\n    }\n}\n\nlong long solve()\n{\n    long long res=0;\n    for(int a=0;a<eps;a++)\n    {\n        for(int b=a;b<eps;b++)\n        {\n            for(int c=b;c<eps;c++)\n            {\n                for(int d=c;d<eps;d++)\n                {\n                    long long now=1;\n                    now*=g[a][b][c];\n                    modify(now);\n                    now*=g[a][b][d];\n                    modify(now);\n                    now*=g[a][c][d];\n                    modify(now);\n                    now*=g[b][c][d];\n                    modify(now);\n                    now*=part(a,b,c,d);\n                    modify(now);\n                    res+=now;\n                    modify(res);\n                }\n            }\n        }\n    }\n    return res;\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    set<int> pos;\n    while(n--)\n    {\n        char temp[11];\n        scanf(\"%s\",temp);\n        string t(temp);\n        s.insert(t);\n        reverse(t.begin(),t.end());\n        s.insert(t);\n        pos.insert(t.size());\n    }\n    for(string z:s) num[z.size()][id(z[0])][id(z.back())]++;\n    long long res=0;\n    for(int z:pos)\n    {\n        sz=z;\n        ini();\n        res+=solve();\n        modify(res);\n    }\n    printf(\"%I64d\\n\",res);\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57986144": {
    "code": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"unroll-loops\")\nusing ll=long long;\nusing namespace std;\nconst int MOD=998244353,CNT=62,SZ=7;\n\nint n,val[250];\nll cnt[SZ+1][CNT][CNT];\nll cnt2[SZ+1][CNT][CNT][CNT];\nstring a;\nset<string> v;\n\nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tcin>>n;\n\twhile (n--)\n\t{\n\t\tcin>>a;\n\t\tv.insert(a);\n\t\treverse(a.begin(),a.end());\n\t\tv.insert(a);\n\t}\n\tfor (int i='a';i<='z';++i) val[i]=i-'a';\n\tfor (int i='A';i<='Z';++i) val[i]=i-'A'+26;\n\tfor (int i='0';i<='9';++i) val[i]=i-'0'+52;\n\tfor (auto a: v)\n\t{\n\t\t++cnt[a.size()-3][val[a[0]]][val[a.back()]];\n\t}\n\tfor (int s=0;s<=SZ;++s) for (int i=0;i<CNT;++i) for (int j=i;j<CNT;++j) for (int k=j;k<CNT;++k)\n\t{\n\t\tfor (int l=0;l<CNT;++l) cnt2[s][i][j][k]+=cnt[s][i][l]*cnt[s][j][l]*cnt[s][k][l];\n\t\tcnt2[s][i][j][k]%=MOD;\n\t}\n\tint ans=0;\n\tfor (int s=0;s<=SZ;++s) for (int i=0;i<CNT;++i) for (int j=i;j<CNT;++j) for (int k=j;k<CNT;++k) for (int l=k;l<CNT;++l)\n\t{\n\t\tint mul;\n\t\tif (i==j && j==k && k==l) mul=1;\n\t\telse if ((i==j && j==k) || (j==k && k==l)) mul=4;\n\t\telse if (i==j && k==l) mul=6;\n\t\telse if (i==j || j==k || k==l) mul=12;\n\t\telse mul=24;\n\t\tans=(ans+mul*cnt2[s][i][j][k]%MOD*cnt2[s][i][j][l]%MOD*cnt2[s][i][k][l]%MOD*cnt2[s][j][k][l])%MOD;\n\t}\n\tcout<<ans<<endl;\n}\n",
    "ext": "cpp"
  },
  "57979025": {
    "code": "#pragma GCC optimize(3)\n#include<bits/stdc++.h>\n#define MAXN 1000005\n#define MAXM 65\n#define INF 1000000000\n#define MOD 998244353\n#define F first\n#define S second\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> P;\nset<string> s[15];\nstring str;\nint n,cnt[MAXM][MAXM],cnt2[MAXM][MAXM][MAXM],ans;\nvoid add(int &a,int b) {a+=b; if(a>=MOD) a-=MOD;}\nvoid dec(int &a,int b) {a-=b; if(a<0) a+=MOD;}\nint pow_mod(int a,int i)\n{\n    int s=1;\n    while(i)\n    {\n        if(i&1) s=1LL*s*a%MOD;\n        a=1LL*a*a%MOD;\n        i>>=1;\n    }\n    return s;\n}\nint getval(char ch)\n{\n    if(ch>='A'&&ch<='Z') return ch-'A';\n    if(ch>='a'&&ch<='z') return 26+ch-'a';\n    return 52+ch-'0';\n}\nchar getch(int val)\n{\n    if(val<26) return 'A'+val;\n    if(val<52) return 'a'+val-26;\n    return '0'+val-52;\n}\nvoid solve(int len)\n{\n    if(!s[len].size()) return;\n    memset(cnt,0,sizeof(cnt));\n    memset(cnt2,0,sizeof(cnt2));\n    for(auto str:s[len])\n    {\n        int x=getval(str[0]),y=getval(str[len-1]);\n        cnt[x][y]++;\n    }\n    for(int l=0;l<62;l++)\n        for(int i=0;i<62;i++)\n        {\n            if(!cnt[i][l]) continue;\n            for(int j=0;j<=i;j++)\n            {\n                if(!cnt[j][l]) continue;\n                for(int k=0;k<=j;k++)\n                {\n                    if(!cnt[k][l]) continue;\n                    add(cnt2[i][j][k],1LL*cnt[i][l]*cnt[j][l]%MOD*cnt[k][l]%MOD);\n                }\n            }\n        }\n    for(int i=0;i<62;i++)\n        for(int j=0;j<=i;j++)\n            for(int k=0;k<=j;k++)\n            {\n                if(!cnt2[i][j][k]) continue;\n                for(int l=0;l<=k;l++)\n                {\n                    int dif=1;\n                    if(i!=j) dif++;\n                    if(j!=k) dif++;\n                    if(k!=l) dif++;\n                    int mult;\n                    if(dif==1) mult=1;\n                    else if(dif==2)\n                    {\n                        if(i==j&&k==l) mult=6;\n                        else mult=4;\n                    }\n                    else if(dif==3) mult=12;\n                    else mult=24;\n                    if(!cnt2[i][j][l]||!cnt2[i][k][l]||!cnt2[j][k][l]) continue;\n                    add(ans,1LL*mult*cnt2[i][j][k]%MOD*cnt2[i][j][l]%MOD*cnt2[i][k][l]%MOD*cnt2[j][k][l]%MOD);\n                }\n            }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        cin>>str;\n        int len=(int)str.size();\n        s[len].insert(str);\n        reverse(str.begin(),str.end());\n        s[len].insert(str);\n    }\n    ans=0;\n    for(int i=3;i<=10;i++) solve(i);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57975257": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nint N;\nset<string> S[11];\nlong long MOD = 998244353;\nint clet;\nmap<int, int> letts;\nconst int ML = 64;\nconst int MS = ML*ML;\n#define loop(i,s) for(int i = s; i < ML; i++)\nlong long m[ML][ML];\nlong long t[ML][ML][ML];\nlong long total = 0;\nvoid addl(int c) {\n\tif (letts.count(c) == 0) {\n\t\tletts[c] = clet;\n\t\tclet++;\n\t}\n}\n#define amul(a,b) a *= b; a %= MOD;\n#define aadd(a,b) a += b; a %= MOD;\ninline void ev(int i, int j, int k, int l, int mul) {\n\tlong long  v = t[i][j][k];\n\tamul(v, t[i][j][l]);\n\tamul(v, t[i][k][l]);\n\tamul(v, t[j][k][l]);\n\tamul(v,mul);\n\taadd(total, v);\n}\nint main() {\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tint L = s.size();\n\t\tstring st = string(s);\n\t\tfor (int j = 0; j < L; j++) {\n\t\t\tst[j] = s[L-1-j];\n\t\t}\n\t\tS[L].insert(s);\n\t\tS[L].insert(st);\n\t\taddl(s[0]);\n\t\taddl(s[L-1]);\n\t}\n\tfor (int L = 3; L <=10; L++) {\n\t\tloop(i, 0) loop(j, 0) m[i][j] = 0;\n\t\tfor (string s : S[L]) {\n\t\t\tint a = letts[s[0]];\n\t\t\tint b = letts[s[L-1]];\n\t\t\tm[ a ][ b ]++;\n\t\t}\n\t\tloop(i,0) loop(j,i) loop(k,j) {\n\t\t\tt[i][j][k] = 0;\n\t\t\tloop(l,0) {\n\t\t\t\tlong long v = m[i][l];\n\t\t\t\tamul(v, m[j][l]);\n\t\t\t\tamul(v, m[k][l]);\n\t\t\t\taadd(t[i][j][k], v);\n\t\t\t}\n\t\t}\n\t\tloop(i,0) loop(j,i+1) loop(k,j+1) loop(l,k+1) {\n\t\t\tev(i,j,k,l, 24);\n\t\t}\n\t\tloop(i,0) loop(j, i+1) loop(k, j+1) {\n\t\t\tev(i,i,j,k,12);\n\t\t\tev(i,j,j,k,12);\n\t\t\tev(i,j,k,k,12);\n\t\t}\n\t\tloop(i,0) loop(j, i+1) {\n\t\t\tev(i,j,j,j,4);\n\t\t\tev(i,i,j,j,6);\n\t\t\tev(i,i,i,j,4);\n\t\t}\n\t\tloop(i,0) {\n\t\t\tev(i,i,i,i,1);\n\t\t}\n\t}\n\tcout << total << endl;\n}",
    "ext": "cpp"
  },
  "57964955": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll mod=998244353;\nint cst(char c){\n    if(c<='9')return c-'0';\n    if(c<='Z')return c-'A'+10;\n    return c-'a'+36;\n}\nll t[62][62];\nll num[62][62][62];\nint main()\n{\n    int n,i,j,k,l,w;\n    cin.tie(0);\n    cin.sync_with_stdio(0);\n    cin>>n;\n    string s,rs;\n    vector<string>v[11];\n    for(i=0;i<n;i++){\n        cin>>s;\n        rs=s;\n        reverse(rs.begin(),rs.end());\n        v[s.size()].push_back(s);\n        v[s.size()].push_back(rs);\n    }\n    ll ans=0;\n    for(w=1;w<=10;w++){\n        memset(t,0,sizeof(t));\n        memset(num,0,sizeof(num));\n        sort(v[w].begin(),v[w].end());\n        v[w].resize(distance(v[w].begin(),unique(v[w].begin(),v[w].end())));\n        for(auto ss:v[w])t[cst(ss[0])][cst(ss[ss.size()-1])]++;\n        for(i=0;i<62;i++){\n            for(j=i;j<62;j++){\n                for(k=j;k<62;k++){\n                    for(l=0;l<62;l++){\n                        num[i][j][k]+=t[i][l]*t[j][l]%mod*t[k][l]%mod;\n                        num[i][j][k]%=mod;\n                    }\n                }\n            }\n        }\n\n        for(i=0;i<62;i++){\n            for(j=i;j<62;j++){\n                for(k=j;k<62;k++){\n                    for(l=k;l<62;l++){\n                        ll mul;\n                        int cnt=0;\n                        if(i==j)++cnt;\n                        if(i==k)++cnt;\n                        if(i==l)++cnt;\n                        if(k==j)++cnt;\n                        if(l==j)++cnt;\n                        if(k==l)++cnt;\n                        if(cnt==0)mul=24;\n                        else if(cnt==1)mul=12;\n                        else if(cnt==2)mul=6;\n                        else if(cnt==3)mul=4;\n                        else mul=1;\n                        ans+=num[i][j][k]*num[i][j][l]%mod*num[i][k][l]%mod*num[j][k][l]%mod*mul;\n                        ans%=mod;\n                    }\n                }\n            }\n        }\n    }\n    printf(\"%lld\",ans);\n}\n",
    "ext": "cpp"
  },
  "57960397": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define PII pair<int, int>\n#define VI vector<int>\n#define VPII vector<PII>\n#define LL long long\n#define LD long double\n#define f first\n#define s second\n#define MP make_pair\n#define PB push_back\n#define endl '\\n'\n#define ALL(c) (c).begin(), (c).end()\n#define SIZ(c) (int)(c).size()\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, b, e) for (int i = (b); i <= (int)(e); i++)\n#define FORD(i, b, e) for (int i = (b); i >= (int)(e); i--)\n#define ll long long\n#define st f\n#define nd s\n#define pb PB\n#define eb emplace_back\n#define mp make_pair\n#define siz(c) SIZ(c)\nconst int inf = 1e9 + 7;\nconst LL INF = 1e18L + 7;\n\n#define sim template<class n\nsim, class s> ostream & operator << (ostream &p, pair<n, s> x)\n{return p << \"<\" << x.f << \", \" << x.s << \">\";}\nsim> auto operator << (ostream &p, n y) ->\ntypename enable_if<!is_same<n, string>::value, decltype(y.begin(), p)>::type\n{int o = 0; p << \"{\"; for (auto c : y) {if (o++) p << \", \"; p << c;} return p << \"}\";}\nvoid dor() {cerr << endl;}\nsim, class...s> void dor(n p, s...y) {cerr << p << \" \"; dor(y...);}\nsim, class s> void mini(n &p, s y) {if (p > y) p = y;}\nsim, class s> void maxi(n &p, s y) {if (p < y) p = y;}\n\n#ifdef DEB\n#define debug(...) dor(__FUNCTION__, \":\", __LINE__, \": \", __VA_ARGS__)\n#else\n#define debug(...)\n#endif\n\n#define I(x) #x \" = \", (x), \" \"\n#define A(a, i) #a \"[\" #i \" = \", i, \"] = \", a[i], \" \"\n\nconst int mod = 998244353;\nconst int A = 62;\n\nint n, ans;\n\nset<string> S;\n\nvector<char> let;\n\nint ile[A][A][A];\nint slow[256][256];\n\nint32_t main()\n{\n\tios_base::sync_with_stdio(0);\n\tcin.tie(NULL);\n\n\tfor(int i = 0; i < 26; ++i)\n\t{\n\t\tlet.pb('a'+i);\n\t\tlet.pb('A'+i);\n\t}\n\n\tfor(int i = 0; i < 10; ++i)\n\t{\n\t\tlet.pb('0'+i);\n\t}\n\n\tcin >> n;\n\n\twhile(n--)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tS.insert(s);\n\t\treverse(ALL(s));\n\t\tS.insert(s);\n\t}\n\n\tfor(int len = 3; len <= 10; ++len)\n\t{\n\t\tfor(int i = 0; i < 256; ++i)\n\t\t{\n\t\t\tmemset(slow[i], 0, sizeof slow[i]);\n\t\t}\n\n\t\tfor(int i = 0; i < A; ++i)\n\t\t{\n\t\t\tfor(int j = 0; j < A; ++j)\n\t\t\t{\n\t\t\t\tmemset(ile[i][j], 0, sizeof ile[i][j]);\n\t\t\t}\n\t\t}\n\n\t\tfor(auto it:S)\n\t\t{\n\t\t\tif(siz(it)==len)\n\t\t\t\tslow[it[0]][it.back()]++;\n\t\t}\n\n\t\tfor(int i = 0; i < A; ++i)\n\t\t{\n\t\t\tfor(int j = i; j < A; ++j)\n\t\t\t{\n\t\t\t\tfor(int k = j; k < A; ++k)\n\t\t\t\t{\n\t\t\t\t\tfor(int x = 0; x < A; ++x)\n\t\t\t\t\t{\n\t\t\t\t\t\tint letX = let[x];\n\t\t\t\t\t\tile[i][j][k] += (ll)slow[let[i]][letX]*slow[let[j]][letX]%mod*slow[let[k]][letX]%mod;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(ile[i][j][k]>=mod)\n\t\t\t\t\t\t\tile[i][j][k] -= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 0; i < A; ++i)\n\t\t{\n\t\t\tfor(int j = 0; j < A; ++j)\n\t\t\t{\n\t\t\t\tfor(int k = 0; k < A; ++k)\n\t\t\t\t{\n\t\t\t\t\tint a = i;\n\t\t\t\t\tint b = j;\n\t\t\t\t\tint c = k;\n\n\t\t\t\t\tif(c<b)\n\t\t\t\t\t\tswap(c, b);\n\n\t\t\t\t\tif(b<a)\n\t\t\t\t\t\tswap(a, b);\n\n\t\t\t\t\tif(c<b)\n\t\t\t\t\t\tswap(c, b);\n\n\t\t\t\t\tile[i][j][k] = ile[a][b][c];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//wszystkie rozne\n\n\t\tfor(int i = 0; i < A; ++i)\n\t\t{\n\t\t\tfor(int j = i+1; j < A; ++j)\n\t\t\t{\n\t\t\t\tfor(int k = j+1; k < A; ++k)\n\t\t\t\t{\n\t\t\t\t\tfor(int l = k+1; l < A; ++l)\n\t\t\t\t\t{\n\t\t\t\t\t\tans += (ll)ile[i][j][k]*ile[i][j][l]%mod*ile[i][k][l]%mod*ile[j][k][l]%mod*24%mod;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(ans>=mod)\n\t\t\t\t\t\t\tans -= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//powtorzenia\n\n\t\tfor(int i = 0; i < A; ++i)\n\t\t{\n\t\t\tfor(int j = 0; j < A; ++j)\n\t\t\t{\n\t\t\t\tfor(int k = 0; k < A; ++k)\n\t\t\t\t{\t\n\t\t\t\t\tif(i==j || j==k || k==i)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(int l = 0; l < A; ++l)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tans += (ll)ile[i][j][k]*ile[i][j][l]%mod*ile[i][k][l]%mod*ile[j][k][l]%mod;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(ans>=mod)\n\t\t\t\t\t\t\t\tans -= mod;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\t\n\t\t\t\t\t\tint l = i;\n\n\t\t\t\t\t\tans += (ll)ile[i][j][k]*ile[i][j][l]%mod*ile[i][k][l]%mod*ile[j][k][l]%mod;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(ans>=mod)\n\t\t\t\t\t\t\tans -= mod;\n\n\t\t\t\t\t\tl = j;\n\n\t\t\t\t\t\tans += (ll)ile[i][j][k]*ile[i][j][l]%mod*ile[i][k][l]%mod*ile[j][k][l]%mod;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(ans>=mod)\n\t\t\t\t\t\t\tans -= mod;\n\n\t\t\t\t\t\tl = k;\n\n\t\t\t\t\t\tans += (ll)ile[i][j][k]*ile[i][j][l]%mod*ile[i][k][l]%mod*ile[j][k][l]%mod;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tif(ans>=mod)\n\t\t\t\t\t\t\tans -= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcout << ans << endl;\n}",
    "ext": "cpp"
  },
  "57953130": {
    "code": "//#pragma GCC optimize(\"O3\")\n//#pragma GCC optimize(\"unroll-loops\")\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/rope>\n#define mem(a,v) memset((a), (v), sizeof (a))\n#define enl printf(\"\\n\")\n#define case(t) printf(\"Case #%d: \", (t))\n#define ni(n) scanf(\"%d\", &(n))\n#define nl(n) scanf(\"%I64d\", &(n))\n#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])\n#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])\n#define pri(n) printf(\"%d\\n\", (n))\n#define prl(n) printf(\"%I64d\\n\", (n))\n#define pii pair<int, int>\n#define pil pair<int, long long>\n#define pll pair<long long, long long>\n#define vii vector<pii>\n#define vil vector<pil>\n#define vll vector<pll>\n#define vi vector<int>\n#define vl vector<long long>\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long ll;\ntypedef cc_hash_table<int,int,hash<int>> ht;\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> oset;\nconst double pi = acos(-1);\nconst int MOD = 998244353;\nconst int INF = 1e9 + 7;\nconst int MAXN = 62;\nconst double eps = 1e-9;\nset<string> a;\nint cnt[8][MAXN][MAXN];\nll dp[MAXN][MAXN][MAXN];\n\nint get(char x) {\n\tif ('0' <= x && x <= '9')\n\t\treturn x-'0';\n\tif ('a' <= x && x <= 'z')\n\t\treturn 10 + x-'a';\n\treturn 36 + x-'A';\n}\nint fac[12] = {24,12,12,4,12,6,4,1};\n\nint main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tint n; cin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tstring s; cin >> s;\n\t\ta.insert(s);\n\t\treverse(s.begin(), s.end());\n\t\ta.insert(s);\n\t}\n\tfor (auto it: a)\n\t\tcnt[it.size()-3][get(it[0])][get(it.back())]++;\n\tll ans = 0;\n\tfor (int len = 0; len < 8; len++) {\n\t\tfor (int a = 0; a < MAXN; a++)\n\t\t\tfor (int b = a; b < MAXN; b++)\n\t\t\t\tfor (int c = b; c < MAXN; c++) {\n\t\t\t\t\tdp[a][b][c] = 0;\n\t\t\t\t\tfor (int d = 0; d < MAXN; d++)\n\t\t\t\t\t\tdp[a][b][c] += cnt[len][a][d] * cnt[len][b][d] * cnt[len][c][d] % MOD;\n\t\t\t\t\tdp[a][b][c] %= MOD;\n\t\t\t\t}\n\t\tfor (int a = 0; a < MAXN; a++) {\n\t\t\tfor (int b = a; b < MAXN; b++) {\n\t\t\t\tint cur = (b==a) << 2;\n\t\t\t\tfor (int c = b; c < MAXN; c++) {\n\t\t\t\t\tcur |= (c==b) << 1;\n\t\t\t\t\tll tmp = ((fac[cur+1] * dp[a][b][c] % MOD) * (dp[a][c][c] * dp[b][c][c] % MOD)) % MOD;\n\t\t\t\t\tfor (int d = c+1; d < MAXN; d++)\n\t\t\t\t\t\ttmp += ((fac[cur] * dp[a][b][d] % MOD) * (dp[a][c][d] * dp[b][c][d] % MOD)) % MOD;\n\t\t\t\t\t(ans += tmp * dp[a][b][c]) %= MOD;\n\t\t\t\t\tcur ^= (c==b) << 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprl(ans);\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57949474": {
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define sz(x) ((int) ((x).size()))\ntypedef long long ll;\ntypedef long double ld;\n\nconst ll mod = 998244353;\nconst int MAXV = 62;\n\nint n;\nll c[20][MAXV][MAXV], dp[MAXV][MAXV][MAXV];\nstring s;\nunordered_map<string, bool> u;\n\nint charToInt(char c) {\n  return (c >= 'a' && c <= 'z' ? c - 'a' : (c >= 'A' && c <= 'Z' ? c - 'A' + 26 : c - '0' + 52));\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout << fixed << setprecision(10);\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    int l = s.length();\n    if (!u[s]) {\n      u[s] = true;\n      c[l][charToInt(s[0])][charToInt(s[l - 1])]++;\n    }\n    reverse(s.begin(), s.end());\n    if (!u[s]) {\n      u[s] = true;\n      c[l][charToInt(s[0])][charToInt(s[l - 1])]++;\n    }\n  }\n  ll res = 0;\n  for (int len = 3; len <= 10; len++) {\n    for (int i = 0; i < MAXV; i++)\n      for (int j = 0; j < MAXV; j++)\n        for (int k = 0; k < MAXV; k++) {\n          dp[i][j][k] = 0;\n          for (int l = 0; l < MAXV; l++)\n            dp[i][j][k] += c[len][i][l] * c[len][j][l] * c[len][k][l];\n          dp[i][j][k] %= mod;\n        }\n    for (int i = 0; i < MAXV; i++)\n      for (int j = 0; j < MAXV; j++)\n        for (int k = 0; k < MAXV; k++) {\n          ll h = 0;\n          for (int l = 0; l < MAXV; l++)\n            h += dp[i][j][l] * ((dp[i][k][l] * dp[j][k][l]) % mod);\n          h %= mod;\n          res += (dp[i][j][k] * h) % mod;\n        }\n  }\n  res %= mod;\n  cout << res << \"\\n\";\n}\n",
    "ext": "cpp"
  },
  "57948130": {
    "code": "#include <iostream>\n#include <fstream>\n#include <map>\n#include <algorithm>\nusing namespace std;\nconst long long mod=998244353;\nconst int nmax=100005;\nint dp[10][105][105];\nint norm[600],ap[105][105];\nint t[65][65][65];\nint cc[2][2][2];\nint fact[10];\nint ans,n,i,l,nr,lung,j,a,b,k,j1,k1,act,c,d;\nstring s;\nstring m[12][2*nmax];\nint sz[20];\nlong long mul(long long A,long long B)\n{\n    return (A*B)%mod;\n}\nvoid add(int &a,long long b)\n{\n    a+=b;\n    if(a>=mod)\n        a-=mod;\n}\nint coef(int e1,int e2,int e3)\n{\n    if(e1+e2+e3==0) return 24;\n    if(e1+e2+e3==1) return 12;\n    if(e1+e2+e3==3) return 1;\n    if(e1+e3==2) return 6;\n    return 4;\n}\nint main()\n{\n   // freopen(\"data.in\",\"r\",stdin);\n    ios_base::sync_with_stdio(false);\n    cin>>n;\n    for(i=1;i<=n;i++)\n    {\n        cin>>s;\n        l=s.size();\n        m[l][++sz[l]]=s;\n        reverse(s.begin(),s.end());\n        m[l][++sz[l]]=s;\n    }\n    fact[0]=1;\n    for(i=1;i<=4;i++)\n        fact[i]=fact[i-1]*i;\n    for(i=0;i<2;i++)\n        for(j=0;j<2;j++)\n          for(k=0;k<2;k++)\n            cc[i][j][k]=coef(i,j,k);\n    for(lung=3;lung<=10;lung++)\n    {\n        for(i=1;i<=nr;i++)\n            for(j=1;j<=nr;j++)\n              {\n                  ap[i][j]=0;\n                  for(k=1;k<=nr;k++)\n                     t[i][j][k]=0;\n              }\n        for(i=1;i<=500;i++)\n            norm[i]=0;\n        nr=0;\n        for(int i=1;i<=sz[lung];i++)\n        {\n            s=m[lung][i];\n            if(!norm[s[0]])\n             norm[s[0]]=++nr;\n            if(!norm[s[lung-1]])\n                norm[s[lung-1]]=++nr;\n        }\n        sort(m[lung]+1,m[lung]+sz[lung]+1);\n        for(int i=1;i<=sz[lung];i++)\n        {\n            s=m[lung][i];\n            if(m[lung][i]!=m[lung][i-1])\n             ap[norm[s[0]]][norm[s[lung-1]]]++;\n        }\n        for(a=1;a<=nr;a++)\n            for(b=a;b<=nr;b++)\n               for(c=b;c<=nr;c++)\n                 for(d=1;d<=nr;d++)\n                    add(t[a][b][c],(mul(ap[a][d],mul(ap[b][d],ap[c][d]))));\n        for(a=1;a<=nr;a++)\n            for(b=a;b<=nr;b++)\n               for(c=b;c<=nr;c++)\n                 for(d=c;d<=nr;d++)\n                    add(ans,mul(cc[(a==b)][(b==c)][(c==d)],mul(mul(t[a][b][c],t[a][b][d]),mul(t[a][c][d],t[b][c][d]))));\n    }\n    cout<<ans;\n    return 0;\n}",
    "ext": "cpp"
  },
  "57947759": {
    "code": "#include<iostream>\n#include<string>\n#include<map>\n#include<algorithm>\n#define MOD 998244353\nusing namespace std;\nint Nr[15][127][127];\nint Dp[15][127][127][127];\nint n;\nstring S;\nmap<string,bool> Viz;\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n    cin>>n;\n    for(int i=1; i<=n; i++)\n    {\n        cin>>S;\n        if(Viz[S])\n            continue;\n        int len=S.size();\n        Nr[len][S[0]][S[len-1]]++;\n        bool pal=true;\n        for(int j=0; j<len/2; j++)\n            if(S[j]!=S[len-j-1])\n            {\n                pal=false;\n                break;\n            }\n        if(!pal)\n        {\n            reverse(S.begin(),S.end());\n            Viz[S]=true;\n            Nr[len][S[0]][S[len-1]]++;\n        }\n    }\n    for(int lung=3; lung<=10; lung++)\n        for(int i='0'; i<='z'; i++)\n            for(int j=i; j<='z'; j++)\n                for(int k=j; k<='z'; k++)\n                    for(int l='0'; l<='z'; l++)\n                        Dp[lung][i][j][k]=(1LL*Dp[lung][i][j][k]+1LL*((1LL*Nr[lung][l][i]*Nr[lung][l][j])%MOD)*Nr[lung][l][k])%MOD;\n    int rez=0;\n    for(int lung=3; lung<=10; lung++)\n        for(int i='0'; i<='z'; i++)\n            for(int j=i; j<='z'; j++)\n                for(int k=j; k<='z'; k++)\n                    for(int l=k; l<='z'; l++)\n                    {\n                        int cr=(1LL*((1LL*Dp[lung][i][j][k]*Dp[lung][i][j][l])%MOD)*((1LL*Dp[lung][i][k][l]*Dp[lung][j][k][l])%MOD))%MOD;\n                        if(i!=j && j!=k && k!=l)\n                            cr=(24LL*cr)%MOD;\n                        if((i==j && j!=k && k!=l) || (i!=j && j==k && k!=l) || (i!=j && j!=k && k==l))\n                            cr=(12LL*cr)%MOD;\n                        if(i==j && j!=k  && k==l)\n                            cr=(6LL*cr)%MOD;\n                        if((i==j && j==k && k!=l) || (i!=j && j==k && k==l))\n                            cr=(4LL*cr)%MOD;\n                        rez=(rez+cr)%MOD;\n                    }\n    cout<<rez<<\"\\n\";\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57941786": {
    "code": "#include <bits/stdc++.h>\n\n#define ll long long\n#define pb push_back\n#define x first\n#define y second\n\nusing namespace std;\n\n\nll cnt[8][62][62];\nll tri[8][62][62][62];\nmap<char,int> mp;\nll fct[5]={1,1,2,6,24};\n\nint main()\n{\n    //freopen(\"test.in\",\"r\",stdin);\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    string rf=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    for(int i=0;i<62;i++)   mp[rf[i]]=i;\n    int n; cin>>n;\n    set<string> st;\n    for(int i=0;i<n;i++)\n    {\n        string str; cin>>str;\n        if(st.find(str)!=st.end()) continue;\n        reverse(str.begin(),str.end());\n        st.insert(str);\n        cnt[str.length()-3][mp[str[0]]][mp[str.back()]]++;\n        bool ispal=1;\n        for(int j=0;j<str.length()/2;j++)\n            if(str[j]!=str[str.length()-1-j]) {ispal=0;break;}\n        if(!ispal) cnt[str.length()-3][mp[str.back()]][mp[str[0]]]++;\n    }\n    for(int a=0;a<8;++a)\n        for(int i=0;i<62;++i)\n            for(int j=i;j<62;++j)\n              for(int k=j;k<62;++k)\n                for(int l=0;l<62;++l)\n                {\n                    tri[a][i][j][k]+=(((cnt[a][i][l]*cnt[a][j][l])%998244353)*cnt[a][k][l])%998244353;\n                    tri[a][i][j][k]%=998244353;\n                }\n    ll ans=0LL;\n    for(int a=0;a<8;++a)\n        for(int i=0;i<62;++i)\n            for(int j=i;j<62;++j)\n              for(int k=j;k<62;++k)\n                for(int l=k;l<62;++l)\n                    {\n                        ll div;\n                        if(j==k) div=fct[(i==j)+(k==l)+2];\n                        else div=fct[(i==j)+1]*fct[(k==l)+1];\n                        ans+=(((((tri[a][i][j][k]*tri[a][i][k][l])%998244353)*((tri[a][i][j][l]*tri[a][j][k][l])%998244353))%998244353)*(24/div))%998244353;\n                        ans%=998244353;\n                    }\n    cout<<ans<<'\\n';\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57940409": {
    "code": "#pragma GCC optimize (\"O3\")\n#pragma GCC target (\"sse4\")\n#pragma GCC optimize (\"unroll-loops\")\n\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=998244353,letters=64;\nmap<string,int> s;\nint seen[12][100][100];\nint hsh[256];\nstring now;\nint pos=0;\nvoid update()\n{\n    for(auto k:now)\n        if(hsh[k]==0)\n        {\n            pos++;\n            hsh[k]=pos;\n        }\n}\nint ways[letters][letters][letters];\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie();\n    cout.tie();\n\n    int n;\n    /*\n    n=0;\n    pos=62;\n    */\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>now;\n        update();\n        string now_=now;\n        reverse(now_.begin(),now_.end());\n\n        bool pal=(now==now_);\n\n        now=min(now,now_);\n\n        if(s.count(now))continue;\n        s[now]=1;\n\n        int beg=hsh[now[0]],en=hsh[now[now.size()-1]];\n        seen[now.size()][beg][en]++;\n        if(pal==0)seen[now.size()][en][beg]++;\n    }\n\n    /*\n    for(int len=3;len<=10;len++)\n        for(int i=1;i<=pos;i++)\n            for(int j=i+1;j<=pos;j++)\n            {\n                seen[len][i][j]=seen[len][i][j]+seen[len][j][i];\n                seen[len][j][i]=seen[len][i][j];\n            }\n    */\n    /*\n    for(int len=3;len<=10;len++)\n        for(int one=1;one<=pos;one++)\n            for(int two=1;two<=pos;two++)\n                for(int three=1;three<=pos;three++)\n                    for(int central=1;central<=pos;central++)\n                    {\n                    ways[len][one][two][three]=(ways[len][one][two][three]+1LL*seen[len][central][one]*seen[len][central][two]*seen[len][central][three]%mod)%mod;\n                    }\n    */\n\n    long long output=0;\n    for(int len=3;len<=10;len++)\n    {\n        memset(ways,0,sizeof(ways));\n        for(int one=1;one<=pos;one++)\n            for(int two=1;two<=pos;two++)\n                for(int three=1;three<=pos;three++)\n                {\n                    if(one<=two&&two<=three)\n                    {\n                        for(int central=1;central<=pos;central++)\n                        {\n                        ways[one][two][three]=(ways[one][two][three]+1LL*seen[len][central][one]*seen[len][central][two]*seen[len][central][three]%mod)%mod;\n                        }\n                    }\n                    else\n                    {\n                        int mini=min(one,min(two,three));\n                        int maxi=max(one,max(two,three));\n\n                        ways[one][two][three]=ways[mini][one+two+three-mini-maxi][maxi];\n                    }\n                }\n\n\n\n        for(int one=1;one<=pos;one++)\n            for(int three=one;three<=pos;three++)\n                for(int six=three;six<=pos;six++)\n                    for(int eight=six;eight<=pos;eight++)\n                    {\n                        int coeff=1;\n                        if(one!=three&&three!=six&&six!=eight)coeff=24;\n\n                        else if(one!=three&&three!=six&&six==eight)coeff=12;\n                        else if(one!=three&&three==six&&six!=eight)coeff=12;\n                        else if(one==three&&three!=six&&six!=eight)coeff=12;\n\n                        else if(one!=three&&three==six&&six==eight)coeff=4;\n                        else if(one==three&&three!=six&&six==eight)coeff=6;\n                        else if(one==three&&three==six&&six!=eight)coeff=4;\n\n                        output=(output+1LL*coeff*ways[one][three][six]%mod*ways[one][three][eight]%mod*ways[one][six][eight]%mod*ways[three][six][eight])%mod;\n                    }\n    }\n        cout<<output<<endl;\n}\n",
    "ext": "cpp"
  },
  "57933277": {
    "code": "//#pragma gcc optimize(\"-Ofast\")\n//#pragma gcc optimize(\"unroll-loops\")\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\n#define uint unsigned int\n#define ld long double\n#define ll long long\n#define ull unsigned long long\n#define F first\n#define S second\n#define pb push_back\n#define sqr(x) (x) * (x)\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\nconst int maxk = 63;\n\nuint mod = 998244353 ;\n\null dp[maxk][maxk][maxk];\null t[8][maxk][maxk];\n\nint main()\n{\n#ifdef LOCAL\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#else\n\n#endif\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int n;\n    cin >> n;\n    cc_hash_table <char, int> ht;\n    unordered_set <string> st;\n    int x = 0;\n    for(char i = 'A'; i <= 'Z'; ++i)\n        ht[i] = x++;\n    for(char i = 'a'; i <= 'z'; ++i)\n        ht[i] = x++;\n    for(char i = '0'; i <= '9'; ++i)\n        ht[i] = x++;\n    for(int i = 0; i < n; ++i)\n    {\n        string s;\n        cin >> s;\n        if (st.count(s) == 1) continue;\n        int f = ht[s.front()];\n        int e = ht[s.back()];\n        int len = int(s.size());\n        bool k = true;\n        int j1 = len - 1;\n        if (f == e)\n        {\n            k = false;\n            for(int j = 0; j < len / 2; ++j)\n            {\n                if (s[j] != s[j1])\n                {\n                    k = true;\n                    break;\n                }\n                --j1;\n            }\n        }\n        t[len - 3][f][e] += 1;\n        if (k) t[len - 3][e][f] += 1;\n        reverse(s.begin(), s.end());\n        st.insert(s);\n    }\n    uint ans = 0;\n    for(int len = 0; len < 8; ++len)\n    {\n        for(int a = 0; a < x; ++a)\n            for(int b = 0; b <= a; ++b)\n                for(int c = 0; c <= b; ++c)\n                    dp[a][b][c] = 0;\n        for(int a = 0; a < x; ++a)\n            for(int b = 0; b < x; ++b)\n                for(int c = 0; c <= b; ++c)\n                    for(int d = 0; d <= c; ++d)\n        {\n            dp[b][c][d] += (((t[len][a][b] * t[len][a][c]) % mod) *\n                             t[len][a][d]) % mod;\n            dp[b][c][d] %= mod;\n        }\n        for(int a = 0; a < x; ++a)\n            for(int b = 0; b <= a; ++b)\n                for(int c = 0; c <= b; ++c)\n                    for(int d = 0; d <= c; ++d)\n        {\n            int kk = 24;\n            if (a == b)\n            {\n                kk /= 2;\n                if (b == c)\n                {\n                    kk /= 3;\n                    if (c == d) kk /= 4;\n                }\n                else\n                {\n                    if (c == d) kk /= 2;\n                }\n            }\n            else\n            {\n                if (b == c)\n                {\n                    kk /= 2;\n                    if (c == d) kk /= 3;\n                }\n                else\n                if (c == d) kk /= 2;\n            }\n\n            int izm = (((((dp[a][b][c] * dp[b][c][d]) % mod) *\n                        dp[a][b][d]) % mod) * dp[a][c][d]) % mod;\n\n            ans += (1ll * izm * kk) % mod;\n            ans %= mod;\n        }\n    }\n    cout << ans;\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57922286": {
    "code": "// In the name of Allah.\n// We're nothing and you're everything.\n// Ya Ali!\n \n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst int maxn = 62, mxL = 11, mnL = 3, mod = 998244353;\nvector<string> v[mxL];\nset<string> sg[maxn][maxn];\nll g[maxn][maxn];\nll uni[maxn][maxn][maxn];\nint id(char c){\n\tif(c < 'A')\n\t\treturn c - '0';\n\tif(c < 'a')\n\t\treturn 10 + c - 'A';\n\treturn 10 + 26 + c - 'a';\n}\nint solve(vector<string> &v){\n\tfor(int i = 0; i < maxn; i++)\n\t\tfor(int j = 0; j < maxn; j++)\n\t\t\tsg[i][j].clear();\n\tfor(auto &x : v){\n\t\tsg[ id(x[0]) ][ id(x.back()) ].insert(x);\n\t\tsg[ id(x.back()) ][ id(x[0]) ].insert(string(x.rbegin(), x.rend()));\n\t}\n\tfor(int i = 0; i < maxn; i++)\n\t\tfor(int j = 0; j < maxn; j++)\n\t\t\tg[i][j] = sg[i][j].size();\n\tmemset(uni, 0, sizeof uni);\n\tfor(int i = 0; i < maxn; i++)\n\t\tfor(int j = 0; j < maxn; j++)\n\t\t\tfor(int k = 0; k < maxn; k++){\n\t\t\t\tfor(int l = 0; l < maxn; l++)\n\t\t\t\t\tuni[i][j][k] += g[i][l] * g[j][l] * g[k][l];\n\t\t\t\tuni[i][j][k] %= mod;\n\t\t\t}\n\tll ans = 0;\n\tfor(int i = 0; i < maxn; i++)\n\t\tfor(int j = i; j < maxn; j++)\n\t\t\tfor(int k = 0; k < maxn; k++)\n\t\t\t\tfor(int l = k; l < maxn; l++)\n\t\t\t\t\tans += (ll) uni[i][j][k] * uni[j][k][l] % mod * uni[i][j][l] % mod * uni[i][k][l] % mod * (i == j ? 1 : 2) * (k == l ? 1 : 2) % mod;\n\treturn ans % mod;\n}\nint main(){\n\tios::sync_with_stdio(0), cin.tie(0);\n\tint n;\n\tcin >> n;\n\tfor(int i = 0; i < n; i++){\n\t\tstring s;\n\t\tcin >> s;\n\t\tv[s.size()].push_back(s);\n\t}\n\tint ans = 0;\n\tfor(int i = mnL; i < mxL; i++)\n\t\t(ans += solve(v[i])) %= mod;\n\tcout << ans << '\\n';\n}\n",
    "ext": "cpp"
  },
  "57913902": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int P=998244353;\nint m,n;ll ans=0,coef[2][2][2]={{{24,12},{12,4}},{{12,6},{4,1}}},g[66][66][66],h[11][66][66];\nvector<string>v[11];\ninline int gt(char c){return (c>='a')?(c-'a')*2:((c>='A')?(c-'A')*2+1:52+c-'0');}\nint main()\n{\n\tios::sync_with_stdio(false);cin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tstring s;cin>>s;\n\t\tv[s.size()].push_back(s);\n\t\treverse(s.begin(),s.end());\n\t\tv[s.size()].push_back(s);\n\t\tfor(auto t:s)m=max(m,gt(t)+1);\n\t}\n\tfor(int i=3;i<=10;i++)\n\t{\n\t\tsort(v[i].begin(),v[i].end());\n\t\tv[i].erase(unique(v[i].begin(),v[i].end()),v[i].end());\n\t\tfor(auto t:v[i])h[i][gt(t[0])][gt(t[i-1])]++;\n\t\tfor(int p=0;p<m;p++)for(int q=p;q<m;q++)for(int r=q;r<m;r++)g[p][q][r]=0;\n\t\tfor(int p=0;p<m;p++)for(int q=p;q<m;q++)for(int r=q;r<m;r++)for(int s=0;s<m;s++)g[p][q][r]=(g[p][q][r]+h[i][p][s]*h[i][q][s]*h[i][r][s])%P;\n\t\tfor(int p=0;p<m;p++)for(int q=p;q<m;q++)for(int r=q;r<m;r++)for(int s=r;s<m;s++)ans=(ans+g[p][q][r]*g[p][q][s]%P*g[p][r][s]%P*g[q][r][s]%P*coef[p==q][q==r][r==s])%P;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57908229": {
    "code": "#include <bits/stdc++.h>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef long double ld;\n \nconst int L = 11;\n \nvector <string> S[L];\n \nconst int md = 998244353;\n \nvoid add(int &a, int b) {\n    a += b;\n    if (a >= md) {\n        a -= md;\n    }\n}\n \nint mul(int a, int b) {\n    return ((ll)a * b) % md;\n}\n \nint ans = 0;\n \nconst int N = 65;\n \nint dp1[N][N], dp2[N][N][N], dp3[N][N][N], dp4[N][N][N][N];\n \nvoid clear() {\n    for (int i = 0; i < N; ++i) {\n        for (int j = 0; j < N; ++j) {\n            dp1[i][j] = 0;\n            for (int k = 0; k < N; ++k) {\n                dp2[i][j][k] = dp3[i][j][k] = 0;\n                for (int t = 0; t < N; ++t) {\n                    dp4[i][j][k][t] = 0;\n                }\n            }\n        }\n    }\n}\n \nvoid solve(const vector <string> &a) {\n    clear();\n    vector <char> dif;\n    for (string s : a) {\n        dif.push_back(s.front());\n        dif.push_back(s.back());\n    }\n    sort(dif.begin(), dif.end());\n    dif.resize(unique(dif.begin(), dif.end()) - dif.begin());\n    int cnt = dif.size();\n    for (string s : a) {\n        int fr = lower_bound(dif.begin(), dif.end(), s.front()) - dif.begin();\n        int sc = lower_bound(dif.begin(), dif.end(), s.back()) - dif.begin();\n        ++dp1[fr][sc];\n    }\n \n    for (int i = 0; i < cnt; ++i) {\n        for (int j = 0; j < cnt; ++j) {\n            for (int k = 0; k < cnt; ++k) {\n                add(dp2[i][j][k], mul(dp1[i][j], dp1[j][k]));\n            }\n        }\n    }\n    for (int i = 0; i < cnt; ++i) {\n        for (int j = 0; j < cnt; ++j) {\n            for (int k = 0; k < cnt; ++k) {\n                for (int t = 0; t < cnt; ++t) {\n                    add(dp3[i][k][t], mul(dp2[i][j][k], dp1[j][t]));\n                }\n            }\n        }\n    }\n    for (int i = 0; i < cnt; ++i) {\n        for (int j = 0; j < cnt; ++j) {\n            for (int k = 0; k < cnt; ++k) {\n                for (int t = 0; t < cnt; ++t) {\n                    if (i != j && i != k && i != t && j != k && j != t && k != t) continue;\n                    add(ans, mul(dp3[i][j][k], mul(dp3[i][j][t], mul(dp3[i][k][t], dp3[j][k][t]))));\n                }\n            }\n        }\n    }\n    for (int i = 0; i < cnt; ++i) {\n        for (int j = i + 1; j < cnt; ++j) {\n            for (int k = j + 1; k < cnt; ++k) {\n                for (int t = k + 1; t < cnt; ++t) {\n                    add(ans, mul(24, mul(dp3[i][j][k], mul(dp3[i][j][t], mul(dp3[i][k][t], dp3[j][k][t])))));\n                }\n            }\n        }\n    }\n}\n \nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.setf(ios::fixed); cout.precision(20);\n    #ifdef LOCAL\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    #endif\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; ++i) {\n        string s;\n        cin >> s;\n        S[(int)s.size()].push_back(s);\n        reverse(s.begin(), s.end());\n        S[(int)s.size()].push_back(s);\n    }\n    for (int i = 3; i < L; ++i) {\n        sort(S[i].begin(), S[i].end());\n        S[i].resize(unique(S[i].begin(), S[i].end()) - S[i].begin());\n        if (!S[i].empty()) solve(S[i]);\n    }\n    cout << ans << '\\n';\n}",
    "ext": "cpp"
  },
  "57902887": {
    "code": "#include <iostream>\n#include <random>\n#include <chrono>\n#include <algorithm>\n#include <set>\n#include <bitset>\n#include <map>\n\n#define rep(i, x) for(int i = 0; i < x; i++)\nusing namespace std;\ntypedef long long ll;\nconst ll MOD = 998244353;\nconst int N = 1e5+5, inf = 1e9+5;\nll add(ll x, ll y) { x += y; if (x >= MOD) return x - MOD; return x; }\nll sub(ll x, ll y) { x -= y; if (x < 0) return x + MOD; return x; }\nll mult(ll x, ll y) { return (x * y) % MOD; }\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nconst int MAX = 62;\n\nll cnt_len[11][MAX][MAX];\nll ans = 0;\n\nll corner_configs[11][MAX][MAX][MAX];\n\n\nll fact[5] = {1, 1, 2, 6, 24};\nll check[200];\n\nvoid pre_configs() {\n    for (int len = 3; len <= 10; ++len) {\n        for (int corner = 0; corner < MAX; corner++) {\n            for (int l = 0; l < MAX; l++) {\n                for (int r = l; r < MAX; r++) {\n                    for (int u = r; u < MAX; u++) {\n                        ll curr = mult(cnt_len[len][l][corner],\n                                       mult(cnt_len[len][r][corner],\n                                            cnt_len[len][u][corner]));\n                        corner_configs[len][l][r][u] = add(corner_configs[len][l][r][u], curr);\n                    }\n                }\n            }\n        }\n    }\n}\n\nbool is_palindrome(string& s) {\n    for (int i = 0; i < s.size()/2; ++i) {\n        if (s[i] != s[s.size()-1-i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(nullptr);\n    int n; cin >> n;\n    vector<string> words(n);\n    rep (i, n) cin >> words[i];\n    set<string> words_check;\n    for (auto&& word : words) {\n        string copy(word);\n        reverse(begin(copy), end(copy));\n        if (words_check.count(copy)) continue;\n        words_check.insert(word);\n        int first = word[0]-'a';\n        int last = word.back()-'a';\n        if (word[0] <= 57) first = word[0] - '0' + 52;\n        else if (word[0] <= 90) first = word[0] - 'A' + 26;\n        if (word.back() <= 57) last = word.back() - '0' + 52;\n        else if (word.back() <= 90) last = word.back() - 'A' + 26;\n\n        cnt_len[word.size()][first][last]++;\n        if (!is_palindrome(word))\n            cnt_len[word.size()][last][first]++;\n    }\n    pre_configs();\n    for (int len = 3; len <= 10; ++len) {\n        for (int a = 0; a < MAX; a++) {\n            for (int b = a; b < MAX; b++) {\n                for (int c = b; c < MAX; c++) {\n                    for (int d = c; d < MAX; d++) {\n                        ll curr = mult(corner_configs[len][a][b][c],\n                                       mult(corner_configs[len][a][b][d],\n                                            mult(corner_configs[len][a][c][d],\n                                                 corner_configs[len][b][c][d])));\n\n                        check[a]++; check[b]++; check[c]++; check[d]++;\n                        int perms = 1;\n                        perms *= fact[check[a]]; check[a] = 0;\n                        perms *= fact[check[b]]; check[b] = 0;\n                        perms *= fact[check[c]]; check[c] = 0;\n                        perms *= fact[check[d]]; check[d] = 0;\n                        curr = mult(curr, fact[4]/perms);\n\n                        ans = add(ans, curr);\n                    }\n                }\n            }\n        }\n    }\n    /*\n2\nabc\ncde\n(32)\n     */\n    cout << ans << endl;\n    return 0;\n}",
    "ext": "cpp"
  },
  "57897953": {
    "code": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n \nusing namespace std;\nusing namespace __gnu_pbds;\n \n#define ll long long\n#define mp make_pair\n#define pub push_back\n#define pob pop_back()\n#define ss second\n#define ff first\n#define mt make_tuple\n#define pof pop_front()\n#define fbo find_by_order\n#define ook order_of_key\n#define lb lower_bound\n#define ub upper_bound\n \ntypedef tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;\nusing pll = pair <ll, ll>;\nusing pii = pair <int, int>;\n\nll n, dp[11][123][123][123], num[11][123][123], mod = 998244353, ans, cnt[123];\nstring s;\nvector <char> vec;\nmap<string, int> aaaa;\n\nll fct(int a, int b, int c, int d)\n{\n\tmemset(cnt, 0, sizeof cnt);\n\tint aa = 24;\n\tcnt[a]++;\n\taa /= cnt[a];\n\tcnt[b]++;\n\taa /= cnt[b];\n\tcnt[c]++;\n\taa /= cnt[c];\n\tcnt[d]++;\n\taa /= cnt[d];\n\t\n\treturn aa;\n}\n\nbool pal(string k)\n{\n\tstring t = k;\n\treverse(t.begin(), t.end());\n\taaaa[k] = aaaa[t] = 1;\n\t\n\treturn t == k;\n}\n\nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\t\n\tcin >> n;\n\t\n\tfor (char c = 'a'; c <= 'z'; c++)\n\t\tvec.pub(c);\n\t\n\tfor (char c = 'A'; c <= 'Z'; c++)\n\t\tvec.pub(c);\n\t\n\tfor (char c = '0'; c <= '9'; c++)\n\t\tvec.pub(c);\n\t\t\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> s;\n\t\t\n\t\tif ( aaaa[s] )\n\t\t\tcontinue;\n\t\t\n\t\tnum[s.size()][s[0]][s.back()]++;\n\t\t\n\t\tif ( !pal(s) )\n\t\t\tnum[s.size()][s.back()][s[0]]++;\n\t}\n\n\tfor (int a = 0; a < vec.size(); a++)\n\t\tfor (int b = 0; b < vec.size(); b++)\n\t\t\tfor (int c = b; c < vec.size(); c++)\n\t\t\t\tfor (int d = c; d < vec.size(); d++)\n\t\t\t\t\tfor (int len = 3; len <= 10; len++)\n\t\t\t\t\t\tdp[len][vec[b]][vec[c]][vec[d]] = ((num[len][vec[a]][vec[b]] * num[len][vec[a]][vec[c]] % mod) * num[len][vec[a]][vec[d]] % mod + dp[len][vec[b]][vec[c]][vec[d]]) % mod;\n\t\n\tfor (int i = 3; i <= 10; i++)\n\t\tfor (int a = 0; a < vec.size(); a++)\n\t\t\tfor (int b = a; b < vec.size(); b++)\n\t\t\t\tfor (int c = b; c < vec.size(); c++)\n\t\t\t\t\tfor (int d = c; d < vec.size(); d++)\n\t\t\t\t\t\tans = (ans + ((dp[i][vec[a]][vec[b]][vec[c]] * dp[i][vec[a]][vec[b]][vec[d]] % mod) * (dp[i][vec[a]][vec[c]][vec[d]] * dp[i][vec[b]][vec[c]][vec[d]] % mod) % mod) * fct(a, b, c, d) % mod) % mod;\n\t\n\tcout << ans;\n}",
    "ext": "cpp"
  },
  "57897033": {
    "code": "#include <bits/stdc++.h>\n#define MAX 62\n#define MOD 998244353\nusing namespace std;\n\nchar strRaw[100000][MAX];\nchar *str[100000];\nchar strRev[200000][MAX];\nchar *strSort[200000];\nint word[MAX][MAX];\nint corner[MAX][MAX][MAX];\nint coeff[8] = {1, 4, 6, 12, 4, 12, 12, 24};\n\nint cmp(const char* a, const char* b)\n{\n    return strlen(a) < strlen(b);\n}\n\nint cmp2(const char* a, const char* b)\n{\n    for (int i = 0; a[i]; i++)\n    {\n        if (a[i] != b[i]) return a[i] < b[i];\n    }\n    return 0;\n}\n\nint charToInt(char a)\n{\n    if ('a' <= a && a <= 'z') return a - 'a';\n    if ('A' <= a && a <= 'Z') return 26 + a - 'A';\n    return 52 + a - '0';\n}\n\nint add(int a, int b)\n{\n    return (a + b) % MOD;\n}\n\nint prod(int a, int b)\n{\n    return 1LL * a * b % MOD;\n}\n\nint main(void)\n{\n#ifdef NON_SUBMIT\n    freopen(\"input.txt\", \"r\", stdin);\n#endif\n    int N;\n    cin >> N;\n    for (int i = 0; i < N; i++) cin >> strRaw[i];\n    for (int i = 0; i < N; i++) str[i] = strRaw[i];\n    sort(str, str + N, cmp);\n    int idx = 0;\n    int ans = 0;\n    for (int l = 0; l < 11; l++)\n    {\n        int start = idx;\n        while (idx < N && strlen(str[idx]) == l) idx++;\n        int end = idx;\n        if (start == end) continue;\n        for (int i = 0; i < MAX; i++)\n        {\n            for (int j = 0; j < MAX; j++) word[i][j] = 0;\n        }\n        for (int i = start; i < end; i++) strcpy(strRev[i - start], str[i]);\n        for (int i = start; i < end; i++)\n        {\n            char *address = strRev[i - start + end - start];\n            strcpy(address, str[i]);\n            reverse(address, address + strlen(address));\n        }\n        for (int i = 0; i < (end - start) * 2; i++) strSort[i] = strRev[i];\n        sort(strSort, strSort + (end - start) * 2, cmp2);\n        for (int i = 0; i < (end - start) * 2; i++)\n        {\n            if (i && !strcmp(strSort[i], strSort[i - 1])) continue;\n            word[charToInt(strSort[i][0])][charToInt(strSort[i][l - 1])]++;\n        }\n        for (int i = 0; i < MAX; i++)\n        {\n            for (int j = i; j < MAX; j++)\n            {\n                for (int k = j; k < MAX; k++)\n                {\n                    corner[i][j][k] = 0;\n                    for (int m = 0; m < MAX; m++)\n                    {\n                        int num = prod(word[m][i], word[m][j]);\n                        num = prod(num, word[m][k]);\n                        corner[i][j][k] = add(corner[i][j][k], num);\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < MAX; i++)\n        {\n            int num = 1;\n            int diff = 0;\n            for (int j = i; j < MAX; j++)\n            {\n                if (j == i + 1) diff |= 4;\n                for (int k = j; k < MAX; k++)\n                {\n                    if (k == j + 1) diff |= 2;\n                    for (int m = k; m < MAX; m++)\n                    {\n                        if (m == k + 1) diff |= 1;\n                        int num = corner[i][j][k];\n                        num = prod(num, corner[i][j][m]);\n                        num = prod(num, corner[i][k][m]);\n                        num = prod(num, corner[j][k][m]);\n                        num = prod(num, coeff[diff]);\n                        ans = add(ans, num);\n                    }\n                    diff &= 6;\n                }\n                diff &= 5;\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57896826": {
    "code": "#include <algorithm>  \n#include <iostream>  \n#include <sstream>  \n#include <string>  \n#include <vector>  \n#include <queue>  \n#include <set>  \n#include <map>  \n#include <cstdio>  \n#include <cstdlib>  \n#include <cctype>  \n#include <cmath>  \n#include <cstring>\n#include <list>  \n#include <cassert>\n#include <climits>\n#include <bitset>\nusing namespace std;\n\n#define PB push_back  \n#define MP make_pair  \n#define SZ(v) ((int)(v).size())  \n#define FOR(i,a,b) for(int i=(a);i<(b);++i)  \n#define REP(i,n) FOR(i,0,n)  \n#define FORE(i,a,b) for(int i=(a);i<=(b);++i)  \n#define REPE(i,n) FORE(i,0,n)  \n#define FORSZ(i,a,v) FOR(i,a,SZ(v))  \n#define REPSZ(i,v) REP(i,SZ(v))  \ntypedef long long ll;\nll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }\n\nconst int MAXWORD = 100000;\nconst int MOD = 998244353;\nconst int MAXLEN = 10;\nconst int MAXALPH = 26 + 26 + 10;\nvoid inc(int& a, int b) { if ((a += b) >= MOD) a -= MOD; }\n\nint nword;\nchar word[MAXWORD][MAXLEN + 1];\n\nvector<string> bylen[MAXLEN + 1];\nchar alph[4 * MAXWORD + 1]; int nalph;\n\nint cnt[MAXALPH][MAXALPH];\nint dp[MAXALPH][MAXALPH][MAXALPH];\n\nint calc(int len) {\n\tif (SZ(bylen[len]) == 0) return 0;\n\t//printf(\"%d:\",len); REPSZ(i,bylen[len]) printf(\" %s\",bylen[len][i].c_str()); puts(\"\");\n\tnalph = 0; REPSZ(i, bylen[len]) alph[nalph++] = bylen[len][i][0], alph[nalph++] = bylen[len][i][SZ(bylen[len][i]) - 1]; sort(alph, alph + nalph); nalph = unique(alph, alph + nalph) - alph; alph[nalph] = '\\0'; assert(nalph <= MAXALPH);\n\t//printf(\"alph=%s nalph=%d MAXALPH=%d\\n\",alph,nalph,MAXALPH);\n\tmemset(cnt, 0, sizeof(cnt));\n\tREPSZ(i, bylen[len]) {\n\t\tint a = lower_bound(alph, alph + nalph, bylen[len][i][0]) - alph, b = lower_bound(alph, alph + nalph, bylen[len][i][SZ(bylen[len][i]) - 1]) - alph;\n\t\t++cnt[a][b];\n\t}\n\tint ret = 0;\n\tREP(a, nalph) FOR(b, a, nalph) FOR(c, b, nalph) { dp[a][b][c] = 0; REP(i, nalph) dp[a][b][c] = (dp[a][b][c] + (ll)cnt[i][a] * cnt[i][b] * cnt[i][c]) % MOD; }\n\tREP(a, nalph) FOR(b, a, nalph) FOR(c, b, nalph) FOR(d, c, nalph) {\n\t\tint cur = (ll)dp[a][b][c] * dp[a][b][d] % MOD * dp[a][c][d] % MOD * dp[b][c][d] % MOD;\n\t\tint ways = a == d ? 1 : a == c || b == d ? 4 : a == b && c == d ? 6 : a == b || b == c || c == d ? 12 : 24;\n\t\tret = (ret + (ll)cur * ways) % MOD;\n\t}\n\treturn ret;\n}\n\nint solve() {\n\tREPE(i, MAXLEN) bylen[i].clear();\n\tREP(i, nword) { string s = word[i]; bylen[SZ(s)].PB(s); reverse(s.begin(), s.end()); bylen[SZ(s)].PB(s); }\n\tREPE(i, MAXLEN) { sort(bylen[i].begin(), bylen[i].end()); bylen[i].erase(unique(bylen[i].begin(), bylen[i].end()), bylen[i].end()); }\n\tint ret = 0;\n\tREPE(i, MAXLEN) inc(ret, calc(i));\n\treturn ret;\n}\n\nvoid run() {\n\tcin >> nword;\n\tREP(i, nword) cin>> word[i];\n\tprintf(\"%d\\n\", solve());\n}\n\nint main() {\n\trun();\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57880238": {
    "code": "#include <bits/stdc++.h>\n\n#define long long long\n\nusing namespace std;\n\nconst int N = 62;\nconst int M = 998244353;\nconst char base[] = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\nint n, f[256];\nlong pre[12][N][N], dp[12][N][N][N], perm[2][2][2];\nvector<string> S[12];\n\nlong get(int sz, int a, int b, int c, int d) {\n    long ret = dp[sz][a][b][c] * dp[sz][a][b][d] % M * dp[sz][a][c][d] % M * dp[sz][b][c][d] % M;\n    ret = ret * perm[a == b][b == c][c == d] % M;\n    return ret;\n}\n\nint main() {\n    ios_base::sync_with_stdio(0); cin.tie(0);\n\n    for(int i = 0; i < N; i++) f[base[i]] = i;\n    for(int i = 0; i < 4; i++) for(int j = i; j < 4; j++) for(int k = j; k < 4; k++) for(int l = k; l < 4; l++) {\n        set<vector<int> > st;\n        vector<int> now = {i, j, k, l};\n        do st.emplace(now);\n        while(next_permutation(now.begin(), now.end()));\n        perm[i == j][j == k][k == l] = st.size();\n    }\n\n    cin >> n;\n    for(int i = 1; i <= n; i++) {\n        string s;\n        cin >> s;\n        S[s.size()].emplace_back(s);\n        reverse(s.begin(), s.end());\n        S[s.size()].emplace_back(s);\n    } \n    for(int i = 3; i <= 11; i++) {\n        sort(S[i].begin(), S[i].end());\n        S[i].resize(unique(S[i].begin(), S[i].end()) - S[i].begin());\n        for(string s : S[i]) ++pre[i][f[s[0]]][f[s.back()]];\n    }\n    for(int sz = 3; sz <= 11; sz++)\n        for(int i = 0; i < N; i++) for(int j = i; j < N; j++) for(int k = j; k < N; k++)\n            for(int l = 0; l < N; l++)\n                dp[sz][i][j][k] = (dp[sz][i][j][k] + pre[sz][i][l] * pre[sz][j][l] * pre[sz][k][l] % M) % M;\n\n    long ans = 0;\n    for(int sz = 3; sz <= 11; sz++)\n        for(int i = 0; i < N; i++) for(int j = i; j < N; j++) for(int k = j; k < N; k++)\n            for(int l = k; l < N; l++)\n                ans = (ans + get(sz, i, j, k, l)) % M;\n    cout << ans << \"\\n\";\n\n    return 0;\n}",
    "ext": "cpp"
  },
  "57878431": {
    "code": "#include <bits/stdc++.h>\n#define LL long long\n#define PII pair<int, int>\nconst int MAXN = 100005;\nconst int SIGMA = 62;\nconst int ENUM = 6;\nconst LL INF = (LL) 1e9 + 5;\nconst LL MOD = 998244353;\nusing namespace std;\n \nstruct Cube {\n\tLL way, adj[SIGMA][SIGMA], tab[SIGMA][SIGMA][SIGMA];\n\tint num, w[ENUM];\n\tset<string> all;\n\t\n\tCube() {\n\t}\n\t\n\tint trans(char c) {\n\t\tif (!isalpha(c)) return c - '0' + 52;\n\t\treturn isupper(c) ? c - 'A' + 26 : c - 'a';\n\t}\n\t\n\tvoid input(string &s) {\n\t\tstring rs = s;\n\t\treverse(rs.begin(), rs.end());\n\t\tif (all.find(rs) != all.end()) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tall.insert(s);\n\t\tall.insert(rs); \n\t\tnum++;\n\t\tint c1 = trans(s[0]), c2 = trans(s.back());\n\t\tadj[c1][c2]++;\n\t\tif (c1 != c2 || s != rs) adj[c2][c1]++;\n\t}\n\t\n\tvoid pre_calc() {\n\t\tfor (int i = 0; i < SIGMA; i++) {\n\t\t\tfor (int j = i; j < SIGMA; j++) {\n\t\t\t\tfor (int k = j; k < SIGMA; k++) {\n\t\t\t\t\ttab[i][j][k] = 0;\n\t\t\t\t\tfor (int me = 0; me < SIGMA; me++) {\n\t\t\t\t\t\ttab[i][j][k] = (tab[i][j][k] + adj[me][i] * adj[me][j] % MOD * adj[me][k]) % MOD;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tLL check() {\n\t\tLL res = 1;\n\t\tres = res * tab[w[0]][w[1]][w[3]] % MOD * tab[w[0]][w[1]][w[2]] % MOD ;\n\t\tres = res * tab[w[1]][w[2]][w[3]] % MOD * tab[w[0]][w[2]][w[3]] % MOD;\n\t\treturn res;\n\t}\n\t\n\tLL solve() {\n\t\tpre_calc();\n\t\tway = 0;\n\t\tfor (w[0] = 0; w[0] < SIGMA; w[0]++) {\n\t\t\tfor (w[1] = w[0]; w[1] < SIGMA; w[1]++) {\n\t\t\t\tfor (w[2] = w[1]; w[2] < SIGMA; w[2]++) {\n\t\t\t\t\tfor (w[3] = w[2]; w[3] < SIGMA; w[3]++) {\n\t\t\t\t\t\tLL res = check(), mul, blk = 1 + (w[1] != w[0]) + (w[2] != w[1]) + (w[3] != w[2]);\n\t\t\t\t\t\tif (blk == 4) {\n\t\t\t\t\t\t\tmul = 24;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (blk == 3) {\n\t\t\t\t\t\t\tmul = 12;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (blk == 2) {\n\t\t\t\t\t\t\tif (w[1] != w[2]) {\n\t\t\t\t\t\t\t\tmul = 6;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tmul = 4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tmul = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tway = (res * mul + way) % MOD;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn way;\n\t}\n} cube[15];\n \nint main() {\n\tios_base::sync_with_stdio(0);\n\t\n\tint N;\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tcube[s.size()].input(s);\n\t}\n\t\n\tLL ans = 0;\n\tfor (int i = 0; i < 15; i++) {\n\t\tif (cube[i].num != 0) {\n\t\t\tans = (ans + cube[i].solve()) % MOD;\n\t\t}\n\t}\n\t\n\tcout << ans << '\\n';\n\t\n}\n",
    "ext": "cpp"
  },
  "57878130": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\n#pragma GCC optimize (\"O3\")\nlong long mod=998244353;\nlong long ans,n,fac[N],dp[65][65][65],dem[65][65];\nint idx[255],cnt=0,tmp,dd[255],wow[255],hah[255];\nstring s;\nvector<string> word[15];\nmap<string,bool> check;\nint main(){\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>s;\n\t\tword[s.length()].push_back(s);\n\t}\n\tfac[0]=1;\n\tfor(int i=1;i<=4;i++){\n\t\tfac[i]=(fac[i-1]*i)%mod;\n\t}\n\tfor(int len=1;len<=10;len++){\n\t\tif(word[len].size()==0){\n\t\t\tcontinue;\n\t\t}\n\t\tmemset(dd,0,sizeof dd);\n\t\tmemset(idx,0,sizeof idx);\n\t\tfor(auto s: word[len]){\n\t\t\tfor(int i=0;i<len;i++){\n\t\t\t\tdd[s[i]]=1;\n\t\t\t}\n\t\t}\n\t\tcnt=0;\n\t\tfor(int i='0';i<='9';i++){\n\t\t\tif(dd[i]==1){\n\t\t\t\tcnt++;\n\t\t\t\tidx[i]=cnt;\n\t\t\t}\n\t\t}\n\t\tfor(int i='A';i<='Z';i++){\n\t\t\tif(dd[i]==1){\n\t\t\t\tcnt++;\n\t\t\t\tidx[i]=cnt;\n\t\t\t}\n\t\t}\n\t\tfor(int i='a';i<='z';i++){\n\t\t\tif(dd[i]==1){\n\t\t\t\tcnt++;\n\t\t\t\tidx[i]=cnt;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tfor(int j=1;j<=cnt;j++){\n\t\t\t\tdem[i][j]=0;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tfor(int j=1;j<=cnt;j++){\n\t\t\t\tfor(int k=1;k<=cnt;k++){\n\t\t\t\t\tdp[i][j][k]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(auto s: word[len]){\n\t\t\tif(check[s]==0){\n\t\t\t\tdem[idx[s[0]]][idx[s[len-1]]]++;\n\t\t\t\tcheck[s]=1;\n\t\t\t}\n\t\t\tstring tmp;\n\t\t\tfor(int i=len-1;i>=0;i--){\n\t\t\t\ttmp=tmp+s[i];\n\t\t\t}\n\t\t\tif(check[tmp]==0){\n\t\t\t\tdem[idx[s[len-1]]][idx[s[0]]]++;\n\t\t\t\tcheck[tmp]=1;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tfor(int j=i;j<=cnt;j++){\n\t\t\t\tfor(int k=j;k<=cnt;k++){\n\t\t\t\t\tfor(int l=1;l<=cnt;l++){\n\t\t\t\t\t\tdp[i][j][k]=(dp[i][j][k]+(((dem[l][i]*dem[l][j])%mod)*dem[l][k])%mod)%mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tfor(int j=i;j<=cnt;j++){\n\t\t\t\tfor(int k=j;k<=cnt;k++){\n\t\t\t\t\tfor(int l=k;l<=cnt;l++){\n\t\t\t\t\t\tlong long dm=(((((dp[i][j][k]*dp[i][j][l])%mod)*dp[i][k][l])%mod)*dp[j][k][l])%mod;\n\t\t\t\t\t\twow[i]=wow[j]=wow[k]=wow[l]=0;\n\t\t\t\t\t\thah[i]=hah[j]=hah[k]=hah[l]=0;\n\t\t\t\t\t\thah[i]++; hah[j]++; hah[k]++; hah[l]++;\n\t\t\t\t\t\tlong long uwu=fac[4];\n\t\t\t\t\t\tif(wow[i]==0){\n\t\t\t\t\t\t\tuwu=uwu/fac[hah[i]];\n\t\t\t\t\t\t\twow[i]=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(wow[j]==0){\n\t\t\t\t\t\t\tuwu=uwu/fac[hah[j]];\n\t\t\t\t\t\t\twow[j]=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(wow[k]==0){\n\t\t\t\t\t\t\tuwu=uwu/fac[hah[k]];\n\t\t\t\t\t\t\twow[k]=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(wow[l]==0){\n\t\t\t\t\t\t\tuwu=uwu/fac[hah[l]];\n\t\t\t\t\t\t\twow[l]=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tans=(ans+(dm*uwu)%mod)%mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans;\n}",
    "ext": "cpp"
  },
  "57867195": {
    "code": "#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,avx,avx2,mmx,popcnt,abm,fma,tune=native\")\n#include <bits/stdc++.h>\nconst char nl = '\\n';\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef complex<ld> pt;\nconst int MOD = 998'244'353;\nconst int INF = 0x3f3f3f3f;\nconst int K = 11, C = 128, A = 62;\n\nvector<char> lets;\nint letinv[C];\nvoid pre() {\n  for (int i = 'a'; i <= 'z'; i++) lets.push_back(i);\n  for (int i = 'A'; i <= 'Z'; i++) lets.push_back(i);\n  for (int i = '0'; i <= '9'; i++) lets.push_back(i);\n  assert(lets.size() == A);\n  memset(letinv, -1, sizeof letinv);\n  for (int i = 0; i < lets.size(); i++) {\n    letinv[lets[i]] = i;\n  }\n}\n\nll cnt[K][A][A];\nint dp[A][A][A];\nint mul[A][A][A][A];\n\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  pre();\n  int n; cin >> n;\n  unordered_set<string> strs;\n  for (int i = 0; i < n; i++) {\n    string s; cin >> s;\n    for (int c : s) assert(letinv[c] != -1);\n    string t = s;\n    reverse(t.begin(), t.end());\n    if (!strs.count(s)) {\n      cnt[s.size()][letinv[s[0]]][letinv[s.back()]]++;\n      strs.insert(s);\n    }\n    if (!strs.count(t)) {\n      cnt[t.size()][letinv[t[0]]][letinv[t.back()]]++;\n      strs.insert(t);\n    }\n  }\n  {\n    array<int, 4> a;\n    for (int i = 0; i < A; i++) {\n      for (int j = 0; j < A; j++) {\n        for (int k = 0; k < A; k++) {\n          for (int l = 0; l < A; l++) {\n            a = {{i, j, k, l}};\n            sort(a.begin(), a.end());\n            mul[a[0]][a[1]][a[2]][a[3]]++;\n          }\n        }\n      }\n    }\n  }\n  ll ans = 0;\n  for (int len = 3; len < K; len++) {\n    for (int i = 0; i < A; i++) {\n      for (int j = i; j < A; j++) {\n        for (int k = j; k < A; k++) {\n          dp[i][j][k] = 0;\n          for (int l = 0; l < A; l++) {\n            dp[i][j][k] = (dp[i][j][k] + cnt[len][i][l] * cnt[len][j][l] * cnt[len][k][l]) % MOD;\n          }\n          dp[i][k][j] = dp[j][i][k] = dp[j][k][i] = dp[k][i][j] = dp[k][j][i] = dp[i][j][k];\n        }\n      }\n    }\n    for (int i = 0; i < A; i++) {\n      for (int j = i; j < A; j++) {\n        for (int k = j; k < A; k++) {\n          for (int l = k; l < A; l++) {\n            ans += (ll) mul[i][j][k][l] * dp[i][j][k] % MOD * dp[i][j][l] % MOD * dp[i][k][l] % MOD * dp[j][k][l] % MOD;\n            ans %= MOD;\n          }\n        }\n      }\n    }\n  }\n  cout << ans % MOD << nl;\n  return 0;\n}\n",
    "ext": "cpp"
  },
  "57866651": {
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MOD = 998244353;\ntypedef long long ll;\n\nvector<string> w[11];\nll cnt[256][256],cnt3[256][256][256];\nbool has[256];\nint fac[]={1,1,2,6,24};\nint fck[256];\n\nint perm(int a, int b, int c, int d)\n{\n\tfck[a]++,fck[b]++,fck[c]++,fck[d]++;\n\tint ans=fac[4];\n\tans/=fac[fck[a]]; fck[a] = 0;\n\tans/=fac[fck[b]]; fck[b] = 0;\n\tans/=fac[fck[c]]; fck[c] = 0;\n\tans/=fac[fck[d]]; fck[d] = 0;\n\treturn ans;\n}\n\nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tint n;\n\tcin >> n;\n\twhile (n--)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tw[s.size()].push_back(s);\n\t\treverse(s.begin(),s.end());\n\t\tw[s.size()].push_back(s);\n\t}\n\tll ans=0;\n\tfor (int l=3; l<=10; l++)\n\t{\n\t\tsort(w[l].begin(),w[l].end());\n\t\tw[l].resize(unique(w[l].begin(),w[l].end())-w[l].begin());\n\t\tfor (int i=0; i<256; i++)\n\t\t\tfor (int j=0; j<256; j++)\n\t\t\t\tcnt[i][j]=0;\n\t\tfor (string &s : w[l])\n\t\t\tcnt[int(s[0])][int(s.back())]++;\n\t\tfill(has,has+256,0);\n\t\tfor (auto &s : w[l])\n\t\t\tfor (char c : s)\n\t\t\t\thas[int(c)]=true;\n\t\tvector<int> C;\n\t\tfor (int i=0; i<256; i++)\n\t\t\tif (has[i])\n\t\t\t\tC.push_back(i);\n\t\tfor (int ia=0; ia<int(C.size()); ia++)\n\t\tfor (int ib=ia; ib<int(C.size()); ib++)\n\t\tfor (int ic=ib; ic<int(C.size()); ic++)\n\t\t{\n\t\t\tint a=C[ia],b=C[ib],c=C[ic];\n\t\t\tcnt3[a][b][c]=0;\n\t\t\tfor (int x : C)\n\t\t\t{\n\t\t\t\tll h=(cnt[a][x]*cnt[b][x])%MOD;\n\t\t\t\th=(h*cnt[c][x])%MOD;\n\t\t\t\tcnt3[a][b][c]=(cnt3[a][b][c]+h)%MOD;\n\t\t\t}\n\t\t\tcnt3[a][c][b]=cnt3[b][a][c]=cnt3[b][c][a]=\n\t\t\t\tcnt3[c][a][b]=cnt3[c][b][a]=cnt3[a][b][c];\n\t\t}\n\t\tfor (int ia=0; ia<int(C.size()); ia++)\n\t\tfor (int ib=ia; ib<int(C.size()); ib++)\n\t\tfor (int ic=ib; ic<int(C.size()); ic++)\n\t\tfor (int id=ic; id<int(C.size()); id++)\n\t\t{\n\t\t\tint a=C[ia],b=C[ib],c=C[ic],d=C[id];\n\t\t\tll h=(cnt3[a][b][c]*cnt3[a][b][d])%MOD;\n\t\t\th=(h*cnt3[a][c][d])%MOD;\n\t\t\th=(h*cnt3[b][c][d])%MOD;\t\t\t\t\t\n\t\t\th=(h*perm(ia,ib,ic,id))%MOD;\n\t\t\tans=(ans+h)%MOD;\n\t\t}\n\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57862967": {
    "code": "#include <bits/stdc++.h>\n\n#pragma GCC optimize (\"O3\")\n//#pragma GCC optimize (\"Ofast\")\n\n#define F first\n#define S second\n#define MP make_pair\n#define PB push_back\n#define LBS 20\n#define MOD 998244353 //((long long)1e9+7) //1e9+9\n#define LEFT(i) (2*(i))\n#define RIGHT(i) (2*(i)+1)\n#define PAR(i) ((i)/2)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef double rat;\ntypedef long long bi;\ntypedef pair<int, int> ii;\ntypedef pair<int, ll> ill;\ntypedef std::vector<ii> vii;\ntypedef std::map<int, int> mii;\ntypedef bitset<LBS> bis;\ntypedef std::vector<bis> vbs;\n\nvoid vin(std::vector<int> &a){\n  for(auto &x: a)\n    cin >> x;\n}\n\nvoid vout(std::vector<int> &a){\n  for(auto x: a)\n    cout << x << \" \";\n  cout << endl;\n}\n\nll solve(std::vector<string> &vs, int l){\n  if(!vs.size())\n    return 0;\n  map<char,int> mci; int cc=0;\n  unordered_set<string> ss;\n  for(auto s: vs){\n    string rs=s;\n    reverse(rs.begin(), rs.end());\n    ss.insert(s);\n    ss.insert(rs);\n  }\n  std::vector<std::vector<ll> > e(100, std::vector<ll> (100, 0));\n  for(auto s: ss){\n    if(!mci.count(s[0]))\n      mci[s[0]]=cc++;\n    if(!mci.count(s[l-1]))\n      mci[s[l-1]]=cc++;\n    // e.resize(cc);\n    int a=mci[s[0]], b=mci[s[l-1]];\n    e[a][b]++;\n  }\n  ll pos[cc][cc][cc];\n  ll res=0;\n  for(int i=0; i<cc; i++)\n    for(int j=i; j<cc; j++)\n      for(int k=j; k<cc; k++){\n        pos[i][j][k]=0;\n        for(int o=0; o<cc; o++){\n          pos[i][j][k]+=(((e[i][o]*e[j][o])%MOD)*e[k][o])%MOD;\n          pos[i][j][k]%=MOD;\n        }\n      }\n  int mul[2][2][2]={\n    {{24, 12}, {12, 4}},\n    {{12, 6}, {4, 1}}\n  };\n  for(int i=0; i<cc; i++)\n    for(int j=i; j<cc; j++)\n      for(int k=j; k<cc; k++)\n        for(int o=k; o<cc; o++){\n          ll t=(((((pos[i][j][k]*pos[i][j][o])%MOD)*pos[i][k][o])%MOD)*pos[j][k][o])%MOD;\n          res+=t*mul[i==j][j==k][k==o];\n          res%=MOD;\n        }\n\n  return res;\n}\n\nint main(){\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  std::vector<std::vector<string> > vs(11);\n  for(int i=0; i<n; i++){\n    string s; cin >> s;\n    vs[s.size()].PB(s);\n  }\n  ll res=0;\n  for(int i=3; i<=10; i++){\n    res+=solve(vs[i], i);\n    res%=MOD;\n  }\n  cout << res << \"\\n\";\n}\n",
    "ext": "cpp"
  },
  "57861904": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nbool cmp(string a,string b){\n    if(a.length()==b.length())return a<b;\n    return a.length()<b.length();\n}\nvector<long long> gt={24,12,12,4,12,6,4,1};\nint main(){\n    ios::sync_with_stdio(false);\n//    cin.tie(NULL);\n    long long md=998244353;\n    long long rez=0;\n    int n;\n    cin>>n;\n    vector<string> g(2*n);\n    for(int i = 0 ; i < n ; i ++){\n        string s;\n        cin>>s;\n        g[2*i]=s;\n        reverse(s.begin(),s.end());\n        g[2*i+1]=s;\n    }\n    sort(g.begin(),g.end(),cmp);\n    long long skey[62][62];\n    long long dp[62][62][62];\n    for(int i = 0, j=0 ; i < 2*n ; i = j){\n        while( j < 2*n && g[j].length()==g[i].length() ) j ++;\n        vector<vector<long long> > key(62,vector<long long> (62));\n        vector<long long> sskey(62);\n        for(int k = i ; k < j ; k ++){\n            if(k>i&&g[k]==g[k-1])continue;\n            char f=g[k][0];\n            char s=g[k].back();\n            int v1,v2;\n            if(f>='a'&&f<='z')v1=f-'a';\n            else if(f>='A'&&f<='Z')v1=26+f-'A';\n            else v1=52+f-'0';\n            if(s>='a'&&s<='z')v2=s-'a';\n            else if(s>='A'&&s<='Z')v2=26+s-'A';\n            else v2=52+s-'0';\n//            cout<<f<<\" \"<<s<<endl;\n            key[v1][v2]++;\n            sskey[v1]++;\n        }\n        for(int f1 = 0 ; f1 < 62 ; f1++){\n        if(!sskey[f1])continue;\n        for(int f2 = f1 ; f2 < 62 ; f2++){\n        if(!sskey[f2])continue;\n            skey[f1][f2]=0;\n        for(int f3 = 0 ; f3 < 62 ; f3++){\n        if(!sskey[f3])continue;\n            skey[f1][f2]+=key[f1][f3]*key[f2][f3]%md;\n            skey[f1][f2]%=md;\n        }\n        for(int f3 = f2 ; f3 < 62 ; f3++){\n        if(!sskey[f3])continue;\n            dp[f1][f2][f3]=0;\n        for(int f4 = 0 ; f4 < 62 ; f4++){\n            dp[f1][f2][f3]+=key[f1][f4]*key[f2][f4]%md*key[f3][f4]%md;\n            dp[f1][f2][f3]%=md;\n        }}}}\n        for(int f1 = 0 ; f1 < 62 ; f1++){\n        if(!sskey[f1])continue;\n        for(int f2 = f1 ; f2 < 62 ; f2++){\n//        if(f1==('t'-'a')&&f2==f1){\n//            cout<<char(f1+'a')<<\" \"<<sskey[f1]<<\" \"<<skey[f1][f1]<<endl;\n//        }\n        if(!sskey[f2])continue;\n        if(!skey[f1][f2])continue;\n        for(int f3 = f2 ; f3 < 62 ; f3++){\n        if(!sskey[f3])continue;\n        if(!skey[f1][f3])continue;\n        if(!skey[f2][f3])continue;\n        if(!dp[f1][f2][f3])continue;\n        for(int f4 = f3 ; f4 < 62 ; f4++){\n        long long rc=1;\n        rc*=dp[f1][f2][f3];\n        rc%=md;\n        rc*=dp[f1][f2][f4];\n        rc%=md;\n        rc*=dp[f1][f3][f4];\n        rc%=md;\n        rc*=dp[f2][f3][f4];\n        rc%=md;\n        bool fp=f1==f2;\n        bool sp=f2==f3;\n        bool tp=f3==f4;\n        rc*=gt[4*fp+2*sp+1*tp];\n        rc%=md;\n        rez+=rc;\n//        cout<<char('a'+f1)<<f1<<\" \"<<f2<<\" \"<<f3<<\" \"<<f4<<\" \"<<rc<<endl;\n        rez%=md;\n        }}}}\n    }\n    cout<<rez;\n}\n",
    "ext": "cpp"
  },
  "57859188": {
    "code": "// ItnoE\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"O3\")\nusing namespace std;\nconst int N = 200005, SGM = 62, Mod = 998244353;\nint n, C[SGM][SGM], dp[SGM][SGM][SGM];\nstring S[N];\ninline int GT(char ch)\n{\n    if (ch <= '9')\n        return (ch - '0');\n    if (ch <= 'Z')\n        return (ch - 'A' + 10);\n    return (ch - 'a' + 36);\n}\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n    cin >> n;\n    for (int i = 0; i < n; i ++)\n        cin >> S[i];\n    for (int i = n; i < n + n; i ++)\n        S[i] = S[i - n], reverse(S[i].begin(), S[i].end());\n    n <<= 1;\n    sort(S, S + n);\n    n = unique(S, S + n) - S;\n    int SM = 0;\n    for (int len = 3; len <= 10; len ++)\n    {\n        memset(C, 0, sizeof(C));\n        memset(dp, 0, sizeof(dp));\n        for (int i = 0; i < n; i ++)\n            if ((int)S[i].size() == len)\n                C[GT(S[i][0])][GT(S[i][len - 1])] ++;\n        for (int i = 0; i < SGM; i ++)\n            for (int j = i; j < SGM; j ++)\n                for (int h = j; h < SGM; h ++)\n                    for (int k = 0; k < SGM; k ++)\n                        dp[i][j][h] = (dp[i][j][h] + 1LL * C[i][k] * C[j][k] % Mod * C[h][k]) % Mod;\n        for (int i = 0; i < SGM; i ++)\n            for (int j = i; j < SGM; j ++)\n                for (int h = j; h < SGM; h ++)\n                    for (int k = h; k < SGM; k ++)\n                    {\n                        int c = 1;\n                        if (i == k) c = 1;\n                        else if (i == h || j == k) c = 4;\n                        else if (i == j && h == k) c = 6;\n                        else if (i == j || j == h || h == k) c = 12;\n                        else c = 24;\n                        SM = (SM + dp[i][j][h] * 1LL * dp[i][j][k] % Mod * dp[i][h][k] % Mod * dp[j][h][k] % Mod * c) % Mod;\n                    }\n    }\n    return !printf(\"%d\\n\", SM);\n}",
    "ext": "cpp"
  },
  "57858067": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define pb push_back\n\nconst int maxn = 65;\nconst int mod = 998244353;\n\nset<string> ver[20];\n\nint dp[maxn][maxn][maxn] , pd[maxn][maxn] , st[maxn][maxn][maxn][maxn] , cnt[maxn];\n\ninline void mkay(int &a)\n{\n\tif(a >= mod)\n\t\ta -= mod;\n}\n\nint fac(int x)\n{\n\tif(x == 4)\n\t\treturn 24;\n\tif(x == 3)\n\t\treturn 6;\n\treturn x;\n}\n\nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\n\tmap<char , int> mp;\n\tint id = 0;\n\tfor(char i = 'a'; i <= 'z'; i++)\n\t\tmp[i] = id++;\n\tfor(char i = 'A'; i <= 'Z'; i++)\n\t\tmp[i] = id++;\n\tfor(char i = '0'; i <= '9'; i++)\n\t\tmp[i] = id++;\n\n\tfor(int i = 0; i < id; i++)\n\t\tfor(int j = i; j < id; j++)\n\t\t\tfor(int k = j; k < id; k++)\n\t\t\t\tfor(int l = k; l < id; l++)\n\t\t\t\t{\n\t\t\t\t\tcnt[i]++ , cnt[j]++ , cnt[k]++ , cnt[l]++;\n\t\t\t\t\tst[i][j][k][l] = 24 / fac(cnt[i]) , cnt[i] = 0;\n\t\t\t\t\tif(j > i)\n\t\t\t\t\t\tst[i][j][k][l] /= fac(cnt[j]) , cnt[j] = 0;\n\t\t\t\t\tif(k > j)\n\t\t\t\t\t\tst[i][j][k][l] /= fac(cnt[k]) , cnt[k] = 0;\n\t\t\t\t\tif(l > k)\n\t\t\t\t\t\tst[i][j][k][l] /= fac(cnt[l]) , cnt[l] = 0;\n\t\t\t\t}\n\n\tint n;\n\tcin >> n;\n\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tfor(auto &ch : s)\n\t\t\tch = mp[ch];\n\n\t\tver[s.size()].insert(s);\n\t\treverse(s.begin() , s.end());\n\t\tver[s.size()].insert(s);\n\t}\n\n\tint res = 0;\n\tfor(int sz = 3; sz <= 10; sz++)\n\t{\n\t\tmemset(dp , 0 , sizeof dp);\n\t\tmemset(pd , 0 , sizeof pd);\n\n\t\tfor(auto x : ver[sz])\n\t\t\tpd[x[0]][x.back()]++;\n\n\t\tfor(int i = 0; i < id; i++)\n\t\t\tfor(int j = i; j < id; j++)\n\t\t\t\tfor(int k = j; k < id; k++)\n\t\t\t\t\tfor(int l = 0; l < id; l++)\n\t\t\t\t\t\tmkay(dp[i][j][k] += 1LL * pd[i][l] * pd[j][l] % mod * pd[k][l] % mod);\n\n\t\tfor(int i = 0; i < id; i++)\n\t\t\tfor(int j = i; j < id; j++)\n\t\t\t\tfor(int k = j; k < id; k++)\n\t\t\t\t\tfor(int l = k; l < id; l++)\n\t\t\t\t\t\tmkay(res += 1LL * st[i][j][k][l] * dp[i][j][k] % mod * dp[i][j][l] % mod * dp[i][k][l] % mod * dp[j][k][l] % mod);\n\t}\n\n\tcout << res << endl;\n}\n\n\n\n\n\n\n\n\n",
    "ext": "cpp"
  },
  "57857648": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define pii pair<int,int>\n#define pll pair<ll, ll>\n#define pil pair<int,ll>\n#define pli pair<ll,int>\n#define ppi pair<pii,int>\n#define pip pair<int,pii>\n#define pdd pair<double, double>\n#define f first\n#define s second\n#define MOD 998244353\n#define mkp make_pair\n#define M_PI 3.14159265358979323846\n#define FOR(i,l,r) for (int i=l;i<=r;i++)\n#define LOR(i,l,r) for (ll i=l;i<=r;i++)\n#define FORD(i,r,l) for (int i=r;i>=l;i--)\n#define LORD(i,r,l) for (ll i=r;i>=l;i--)\n#define INF 1000000000\n#define CL(x) memset(x,0,sizeof(x))\n#define DEB(x) cout << #x << \" : \" << x << '\\n'\n#define ALL(x) x.begin(), x.end()\n#define SZ(x) x.size()\n#define UI(x) (int)(x-'A')\n#define LI(x) (int)(x-'a')\ntypedef long long ll;\n\nconst int Z = 62;\nint N;\nset<string> ss[11];\nll cnt[Z][Z];\nll t[Z][Z][Z];\nll n[Z];\nbool ap[Z];\nint lab[Z];\n\nll ans;\n\nint conv(char ch)\n{\n    if( ch>='a' && ch<='z' )return ch-'a';\n    if( ch>='A' && ch<='Z' )return 26+ch-'A';\n    return 52+ch-'0';\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n\n    cin>>N;\n    string tmp;\n    FOR(i,1,N)\n    {\n        cin>>tmp;\n        int sz = SZ(tmp);\n\n        ss[sz].insert( tmp );\n        reverse( ALL(tmp) );\n        ss[sz].insert( tmp );\n    }\n    FOR(l,3,10)\n    {\n        if( ss[l].empty() )continue;\n\n        CL(cnt);\n        CL(t);\n        CL(n);\n        CL(ap);\n\n        for( string si : ss[l] )\n        {\n            int a = conv(si[0]), b = conv(si[l-1]);\n            ap[a]=ap[b]=true;\n        }\n        int rn = 0;\n        FOR(i,0,Z-1)\n        {\n            if(ap[i])\n            {\n                lab[i]=rn;\n                rn++;\n            }\n        }\n        for( string si : ss[l] )\n        {\n            int a = lab[conv(si[0])], b = lab[conv(si[l-1])];\n            cnt[a][b]++;\n            n[a]|=(1LL<<b);\n        }\n\n        ll c;\n        FOR(i,0,Z-1)\n        {\n            c = n[i];\n            if(!c)continue;\n            FOR(j,i,Z-1)\n            {\n                c=n[i]&n[j];\n                if(!c)continue;\n                FOR(k,j,Z-1)\n                {\n                    c=n[i]&n[j]&n[k];\n                    if(!c)continue;\n                    FOR(m,0,Z-1)\n                    {\n                        if( !(c&(1LL<<m)) )continue;\n                        t[i][j][k]=(t[i][j][k]+ (cnt[m][i]*cnt[m][j])%MOD*cnt[m][k]%MOD )%MOD;\n                    }\n                }\n            }\n        }\n\n        ll d;\n        FOR(i,0,Z-1)\n        {\n            c = n[i];\n            if(!c)continue;\n            FOR(j,i,Z-1)\n            {\n                d=c=n[i]&n[j];\n                if(!c)continue;\n                FOR(k,j,Z-1)\n                {\n                    c=n[i]&n[j]&n[k];\n                    if(!c)continue;\n                    FOR(m,k,Z-1)\n                    {\n                        d=n[i]&n[j]&n[m];\n                        if(!d)continue;\n                        ll pt=1;\n                        pt = (( t[i][j][k]*t[j][k][m] )%MOD) * (( t[i][j][m]*t[i][k][m] )%MOD) %MOD;\n\n                        ll mul = 1;\n                        int sam = (i==j)+(j==k)+(k==m);\n                        if( sam==0 )mul=24;\n                        else if( sam==1 )mul=12;\n                        else if( sam==2 )mul=(j!=k)?6:4;\n\n                        ans=(ans+pt*mul)%MOD;\n                    }\n                }\n            }\n        }\n    }\n    cout<<ans<<'\\n';\n\n    return 0;\n}\n/*\n\n2\nbacbab\nbab\n\n3\nbaaaaa\ndaaaab\neaaaab\n\n3\nbaaaaa\nbaaaac\naaaaac\n*/\n",
    "ext": "cpp"
  },
  "57857303": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 100005;\nconst int mod = 998244353;\nconst int N = 62;\nusing lint = long long;\nusing pi = pair<int, int>;\n \nint sgn(char c){\n\tif(islower(c)) return c - 'a';\n\tif(isupper(c)) return c - 'A' + 26;\n\treturn c - '0' + 52;\n}\n \nint cnt[62][62], prec[62][62][62];\nint v[12][62][62];\n \nlint solve(int l){\n\tmemcpy(cnt, v[l], sizeof(cnt));\n\tmemset(prec, 0, sizeof(prec));\n\tfor(int i=0; i<N; i++){\n\t\tfor(int j=0; j<=i; j++){\n\t\t\tfor(int k=0; k<N; k++){\n\t\t\t\tfor(int l=0; l<N; l++){\n\t\t\t\t\tprec[i][j][k] += cnt[i][l] * (1ll * cnt[j][l] * cnt[k][l] % mod) % mod;\n\t\t\t\t\tif(prec[i][j][k] >= mod) prec[i][j][k] -= mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlint ret = 0;\n\tfor(int i=0; i<N; i++){\n\t\tfor(int j=0; j<=i; j++){\n\t\t\tfor(int k=0; k<N; k++){\n\t\t\t\tfor(int l=0; l<=k; l++){\n\t\t\t\t\tlint fuck = (1ll * prec[i][j][k] * prec[i][j][l] % mod) * (1ll * prec[k][l][i] * prec[k][l][j] % mod) % mod;\n\t\t\t\t\tif(i != j) fuck <<= 1;\n\t\t\t\t\tif(k != l) fuck <<= 1;\n\t\t\t\t\tret += fuck;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ret % mod;\n}\n \nvector<string> vec[11];\nchar buf[22];\n \nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%s\", buf);\n\t\tstring s = buf;\n\t\tint l = s.size();\n\t\tvec[l].push_back(s);\n\t\tstring t = s; reverse(t.begin(), t.end());\n\t\tvec[l].push_back(t);\n\t}\n\tlint ret = 0;\n\tfor(int i=3; i<=10; i++){\n\t\tsort(vec[i].begin(), vec[i].end());\n\t\tvec[i].resize(unique(vec[i].begin(), vec[i].end()) - vec[i].begin());\n\t\tfor(auto &j : vec[i]){\n\t\t\tint st = sgn(j[0]), ed = sgn(j.back());\n\t\t\tv[i][st][ed]++;\n\t\t}\n\t}\n\tfor(int i=3; i<=10; i++){\n\t\tret += solve(i);\n\t}\n\tcout << ret % mod << endl;\n}",
    "ext": "cpp"
  },
  "57856219": {
    "code": "\n #include<bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\n#define fi first\n#define se second\n#define pb push_back\n#define pf push_front\n#define mod 998244353\n\nusing namespace std;\n\ntypedef long long ll;\n\nll add(ll a, ll b)\n{\n    ll x = a+b;\n    if(x >= mod)\n        x -= mod;\n    return x;\n}\nll mul(ll a, ll b)\n{\n    return (a*b) % mod;\n}\n\nint n;\nvector<string>wd[12];\nll ans = 0;\nll ch[200][200];\nint cod(char c)\n{\n    if(c >= 'a' && c <= 'z')\n        return (c - 'a');\n    if(c >= 'A' && c <= 'Z')\n        return 26 + (c - 'A');\n    if(c >= '0' && c <= '9')\n        return 52 + (c - '0');\n}\nll val[1000002];\n\nint frq[102];\nint fct[] = {1, 1, 2, 6, 24, 120};\nll perm(int a, int b, int c, int d)\n{\n    ++frq[a], ++frq[b], ++frq[c], ++frq[d];\n    ll ans = 24;\n    ans /= fct[frq[a]];\n    if(b != a)\n        ans /= fct[frq[b]];\n    if(c != b)\n        ans /= fct[frq[c]];\n    if(d != c)\n        ans /= fct[frq[d]];\n    --frq[a], --frq[b], --frq[c], --frq[d];\n    return ans;\n}\nll dp(int len)\n{\n    if(!wd[len].size())\n        return 0;\n    map<string, int>ss;\n    memset(ch, 0, sizeof(ch));\n    memset(val, 0, sizeof(val));\n    for(int i = 0; i < wd[len].size(); ++i)\n    {\n        string s = wd[len][i];\n        string rv;\n        for(int j = s.size() - 1; j >= 0; --j)\n            rv += s[j];\n        if(rv < s)\n            s = rv;\n        if(ss.find(s) != ss.end())\n            continue;\n        ss[s] = 1;\n        bool pal = 1;\n        for(int j = 0; j < s.size(); ++j)\n            if(s[j] != s[s.size() - j - 1])\n                pal = 0;\n        if(pal)\n            ch[cod(s[0])][cod(s[s.size() - 1])]++;\n        else\n            ch[cod(s[0])][cod(s[s.size() - 1])]++, ch[cod(s[s.size() - 1])][cod(s[0])]++;\n    }\n    for(int k = 0; k <= 61; ++k)\n        for(int i = 0; i <= 61; ++i)\n        {\n            if(!ch[i][k])\n                continue;\n            for(int j = 0; j <= 61; ++j)\n            {\n                if(!ch[j][k])\n                    continue;\n                for(int p = 0; p <= 61; ++p)\n                {\n                    if(!ch[p][k])\n                        continue;\n                    ll poz = i * 62 * 62 + j * 62 + p;\n                    ll prr = ch[i][k] * ch[j][k] * ch[p][k];\n                    prr %= mod;\n                    val[poz] = (val[poz] + prr);\n                    if(val[poz] >= mod)\n                        val[poz] -= mod;\n                }\n            }\n        }\n    ll anss = 0;\n    for(int i = 0; i <= 61; ++i)\n        for(int j = i; j <= 61; ++j)\n            for(int p = j; p <= 61; ++p)\n            {\n                ll twice[6];\n                memset(twice, 0, sizeof(twice));\n                twice[1] = val[i * 62 * 62 + j * 62 + p];\n                if(!twice[1])\n                    continue;\n                for(int k = p; k <= 61; ++k)\n                {\n                    twice[2] = val[i * 62 * 62 + j * 62 + k];\n                    twice[3] = val[i * 62 * 62 + p * 62 + k];\n                    twice[4] = val[j * 62 * 62 + p * 62 + k];\n                    ll pp = perm(i, j, p, k);\n                    if(!twice[1] || !twice[2] || !twice[3] || !twice[4])\n                        continue;\n                    for(int kk = 1; kk <= 4; ++kk)\n                        pp = (pp * twice[kk]) % mod;\n                    anss = (anss + pp);\n                    if(anss >= mod)\n                        anss -= mod;\n                }\n            }\n    return anss;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cin >> n;\n    for(int i = 1; i <= n; ++i)\n    {\n        string s;\n        cin >> s;\n        wd[s.size()].pb(s);\n    }\n    for(int i = 3; i <= 10; ++i)\n        ans += dp(i), ans %= mod;\n    cout << ans;\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57851732": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int P=998244353;\nint m,n;ll ans=0,coef[2][2][2]={{{24,12},{12,4}},{{12,6},{4,1}}},g[66][66][66],h[11][66][66];\nvector<string>v[11];\ninline int gt(char c){return (c>='a')?(c-'a')*2:((c>='A')?(c-'A')*2+1:52+c-'0');}\nint main()\n{\n\tios::sync_with_stdio(false);cin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tstring s;cin>>s;\n\t\tv[s.size()].push_back(s);\n\t\treverse(s.begin(),s.end());\n\t\tv[s.size()].push_back(s);\n\t\tfor(auto t:s)m=max(m,gt(t)+1);\n\t}\n\tfor(int i=3;i<=10;i++)\n\t{\n\t\tsort(v[i].begin(),v[i].end());\n\t\tv[i].erase(unique(v[i].begin(),v[i].end()),v[i].end());\n\t\tfor(auto t:v[i])h[i][gt(t[0])][gt(t[i-1])]++;\n\t\tfor(int p=0;p<m;p++)for(int q=p;q<m;q++)for(int r=q;r<m;r++)g[p][q][r]=0;\n\t\tfor(int p=0;p<m;p++)for(int q=p;q<m;q++)for(int r=q;r<m;r++)for(int s=0;s<m;s++)g[p][q][r]=(g[p][q][r]+h[i][p][s]*h[i][q][s]*h[i][r][s])%P;\n\t\tfor(int p=0;p<m;p++)for(int q=p;q<m;q++)for(int r=q;r<m;r++)for(int s=r;s<m;s++)ans=(ans+g[p][q][r]*g[p][q][s]%P*g[p][r][s]%P*g[q][r][s]%P*coef[p==q][q==r][r==s])%P;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57850469": {
    "code": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"avx2\")\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e5+45;\nconst int mod = 998244353;\n\nint n;\nvector <string> v;\nstring t;\nint sta[250];\nll dp[11][62][62][62];\nll cnt[11][62][62];\n\nint main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    int id = 0;\n    for(int i = 'a'; i <= 'z'; i++){\n        sta[i] = id++;\n    }\n    for(int i = 'A'; i <= 'Z'; i++){\n        sta[i] = id++;\n    }\n    for(int i = '0'; i <= '9'; i++){\n        sta[i] = id++;\n    }\n    cin >> n;\n    for(int i = 1; i <= n; i++){\n        cin >> t;\n        v.push_back(t);\n        reverse(t.begin(),t.end());\n        v.push_back(t);\n    }\n    sort(v.begin(),v.end());\n    for(int i = 0; i < v.size(); i++){\n        if(i == 0 || v[i] != v[i-1]){\n            t = v[i];\n            cnt[t.size()][sta[t[0]]][sta[t.back()]]++;\n        }\n    }\n    for(int s = 3; s <= 10; s++){\n        for(int i = 0; i < 62; i++){\n            for(int a = 0; a < 62; a++){\n                if(!cnt[s][i][a]){\n                    continue;\n                }\n                for(int b = a; b < 62; b++){\n                    if(!cnt[s][i][b]){\n                        continue;\n                    }\n                    for(int c = b; c < 62; c++){\n                        if(!cnt[s][i][c]){\n                            continue;\n                        }\n                        ll dod = (cnt[s][i][a]*cnt[s][i][b])%mod;\n                        dod = (dod*cnt[s][i][c])%mod;\n                        dp[s][a][b][c] = (dp[s][a][b][c]+dod)%mod;\n                    }\n                }\n            }\n        }\n    }\n    ll sol = 0;\n    for(int s = 3; s <= 10; s++){\n        for(int a = 0; a < 62; a++){\n            for(int b = a; b < 62; b++){\n                for(int c = b; c < 62; c++){\n                    if(!dp[s][a][b][c]){\n                        continue;\n                    }\n                    for(int d = c; d < 62; d++){\n                        if(!dp[s][a][b][d] || !dp[s][a][c][d] || !dp[s][b][c][d]){\n                            continue;\n                        }\n                        ll dod = (dp[s][a][b][c]*dp[s][a][b][d])%mod;\n                        dod = (dod*dp[s][a][c][d])%mod;\n                        dod = (dod*dp[s][b][c][d])%mod;\n                        if(a == b && b == c && c == d){ /// 4 jednaka\n                            dod = dod;\n                        }\n                        else if((a == b && b == c) || (a == b && b == d) || (a == c && c == d) || (b == c && c == d)){ /// 3 jednaka 1 razlicita\n                            dod = (dod*4)%mod;\n                        }\n                        else if((a == b && c == d) || (a == c && b == d) || (a == d && b == c)){ /// 2 para jednakih\n                            dod = (dod*6)%mod;\n                        }\n                        else if(a == b || b == c || c == d || a == d){ /// par jednakih i dva razlicita od njih\n                            dod = (dod*12)%mod;\n                        }\n                        else{\n                            dod = (dod*24)%mod;\n                        }\n                        sol = (sol+dod)%mod;\n                    }\n                }\n            }\n        }\n    }\n    cout << sol << endl;\n}\n",
    "ext": "cpp"
  },
  "57846405": {
    "code": "#include<bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\n#define fi first\n#define se second\n#define pb push_back\n#define pf push_front\n#define mod 998244353\n\nusing namespace std;\n\ntypedef long long ll;\n\nll add(ll a, ll b)\n{\n    ll x = a+b;\n    if(x >= mod)\n        x -= mod;\n    return x;\n}\nll mul(ll a, ll b)\n{\n    return (a*b) % mod;\n}\n\nint n;\nvector<string>wd[12];\nll ans = 0;\nll ch[200][200];\nint cod(char c)\n{\n    if(c >= 'a' && c <= 'z')\n        return (c - 'a');\n    if(c >= 'A' && c <= 'Z')\n        return 26 + (c - 'A');\n    if(c >= '0' && c <= '9')\n        return 52 + (c - '0');\n}\nll val[1000002];\nint frq[102];\nint fct[] = {1, 1, 2, 6, 24, 120};\nll perm(int a, int b, int c, int d)\n{\n    ++frq[a], ++frq[b], ++frq[c], ++frq[d];\n    ll ans = 24;\n    ans /= fct[frq[a]];\n    if(b != a)\n        ans /= fct[frq[b]];\n    if(c != b)\n        ans /= fct[frq[c]];\n    if(d != c)\n        ans /= fct[frq[d]];\n    --frq[a], --frq[b], --frq[c], --frq[d];\n    return ans;\n}\nll dp(int len)\n{\n    if(!wd[len].size())\n        return 0;\n    int mx = 0;\n    map<string, int>ss;\n    memset(ch, 0, sizeof(ch));\n    memset(val, 0, sizeof(val));\n    for(int i = 0; i < wd[len].size(); ++i)\n    {\n        string s = wd[len][i];\n        string rv;\n        for(int j = s.size() - 1; j >= 0; --j)\n            rv += s[j];\n        if(rv < s)\n            s = rv;\n        if(ss.find(s) != ss.end())\n            continue;\n        ss[s] = 1;\n        bool pal = 1;\n        for(int j = 0; j < s.size(); ++j)\n            if(s[j] != s[s.size() - j - 1])\n                pal = 0, mx = max(mx, cod(s[j]));\n        if(pal)\n            ch[cod(s[0])][cod(s[s.size() - 1])]++;\n        else\n            ch[cod(s[0])][cod(s[s.size() - 1])]++, ch[cod(s[s.size() - 1])][cod(s[0])]++;\n    }\n    for(int k = 0; k <= 61; ++k)\n        for(int i = 0; i <= 61; ++i)\n        {\n            if(!ch[i][k])\n                continue;\n            for(int j = 0; j <= 61; ++j)\n            {\n                if(!ch[j][k])\n                    continue;\n                for(int p = 0; p <= 61; ++p)\n                {\n                    if(!ch[p][k])\n                        continue;\n                    ll poz = i * 62 * 62 + j * 62 + p;\n                    ll prr = ch[i][k] * ch[j][k] * ch[p][k];\n                    prr %= mod;\n                    val[poz] = (val[poz] + prr);\n                    if(val[poz] >= mod)\n                        val[poz] -= mod;\n                }\n            }\n        }\n    ll anss = 0;\n    if(mx <= 52)\n        for(int i = 0; i <= 61; ++i)\n            for(int j = 0; j <= 61; ++j)\n                for(int p = 0; p <= 61; ++p)\n                {\n                    ll twice[6];\n                    memset(twice, 0, sizeof(twice));\n                    twice[1] = val[i * 62 * 62 + j * 62 + p];\n                    if(!twice[1])\n                        continue;\n                    for(int k = 0; k <= 61; ++k)\n                    {\n                        twice[2] = val[i * 62 * 62 + j * 62 + k];\n                        twice[3] = val[i * 62 * 62 + p * 62 + k];\n                        twice[4] = val[j * 62 * 62 + p * 62 + k];\n                        ll pp = 1;\n                        if(!twice[1] || !twice[2] || !twice[3] || !twice[4])\n                            continue;\n                        for(int kk = 1; kk <= 4; ++kk)\n                            pp = (pp * twice[kk]) % mod;\n                        anss = (anss + pp);\n                        if(anss >= mod)\n                            anss -= mod;\n                    }\n                }\n    else\n        for(int i = 0, vpoz = 0; i <= 61; ++i, vpoz += 62 * 62)\n            for(int j = i; j <= 61; ++j)\n                for(int p = j; p <= 61; ++p)\n                {\n                    if(!val[vpoz + j * 62 + p])\n                        continue;\n                    for(int k = p; k <= 61; ++k)\n                    {\n                        if(!val[vpoz + j * 62 + k] || !val[vpoz + p * 62 + k] || !val[j * 62 * 62 + p * 62 + k])\n                            continue;\n                        ll pp = perm(i, j, p, k) * 1LL * val[vpoz + j * 62 + p] * val[vpoz + j * 62 + k];\n                        pp %= mod;\n                        pp = pp * val[vpoz + p * 62 + k];\n                        pp %= mod;\n                        pp = pp * val[j * 62 * 62 + p * 62 + k];\n                        pp %= mod;\n                        anss = (anss + pp);\n                        if(anss >= mod)\n                            anss -= mod;\n                    }\n                }\n    return anss;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cin >> n;\n    for(int i = 1; i <= n; ++i)\n    {\n        string s;\n        cin >> s;\n        wd[s.size()].pb(s);\n    }\n    for(int i = 3; i <= 10; ++i)\n        ans += dp(i), ans %= mod;\n    cout << ans;\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57842438": {
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n#define mod 998244353\n#define mp make_pair\n#define pb push_back\n#define bas(x) #x << \": \" << x << \" \"\n#define prarr(x, n) cout << #x << \": \"; for (int qsd = 0; qsd < n; qsd++) cout << x[qsd] << \" \"; cout << endl;\n#define prarrv(x) cout << #x << \": \"; for (int qsd = 0; qsd < (int)x.size(); qsd++) cout << x[qsd] << \" \"; cout << endl;\n#define ppair(x) \"(\" << x.first << \", \" << x.second << \")\"\n#define inside sl<=l&&r<=sr\n#define outside sr<l||r<sl\n\ntypedef long long ll;\n\nint say[70][70];\nmap<char, int> mapp;\nint als;\nll dp[63][63][63];\nll fac[] = {1, 1, 2, 6, 24};\nll dpget[63][63][63][63];\n\n\nll mul(ll a, ll b){\n\treturn (a*b)%mod;\n}\n\nstring ters(string a){\n\tstring ans = \"\";\n\tfor (int i = a.size()-1; i >= 0; i--) ans += a[i];\n\treturn ans;\n}\n\n\nvoid setsay(int size, set<string> strs){\n\tif (strs.size() == 0) return;\n\tfor (int i = 0; i < als; i++){\n\t\tfor (int j = 0; j < als; j++){\n\t\t\tsay[i][j] = 0;\n\t\t}\n\t}\n\n\tfor (string str: strs){\n\t\tchar ilk = str[0];\n\t\tchar son = str[str.size()-1];\n\t\tsay[mapp[ilk]][mapp[son]]++;\n\t}\n}\n\nll get(int c1, int c2, int c3, int c4){\n\tif (dpget[c1][c2][c3][c4] != -1)  return dpget[c1][c2][c3][c4];\n\tvector<int> a;\n\tint cur = 1;\n\tif (c2 == c1){\n\t\tcur++;\n\t} else {\n\t\ta.pb(cur);\n\t\tcur = 1;\n\t}\n\n\tif (c3 == c2){\n\t\tcur++;\n\t} else {\n\t\ta.pb(cur);\n\t\tcur = 1;\n\t}\n\n\tif (c4 == c3){\n\t\tcur++;\n\t} else {\n\t\ta.pb(cur);\n\t\tcur = 1;\n\t}\n\n\ta.pb(cur);\n\n\tll ans = 24;\n\tfor (int i = 0; i < a.size(); i++) ans /= fac[a[i]];\n\treturn dpget[c1][c2][c3][c4] = ans;\n\n}\n\nll solve(set<string> strs){\n\tif (strs.size() == 0) return 0;\n\tfor (int i = 0; i < als; i++){\n\t\tfor (int j = 0; j < als; j++){\n\t\t\tsay[i][j] = 0;\n\t\t}\n\t}\n\n\tfor (string str: strs){\n\t\tchar ilk = str[0];\n\t\tchar son = str[str.size()-1];\n\t\tsay[mapp[ilk]][mapp[son]]++;\n\t}\n\n\tfor (int i1 = 0; i1 < als; i1++){\n\t\tfor (int i2 = 0; i2 < als; i2++){\n\t\t\tfor (int i3 = 0; i3 < als; i3++){\n\t\t\t\tdp[i1][i2][i3] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (int c1 = 0; c1 < als; c1++){\n\t\tfor (int c2 = c1; c2 < als; c2++){\n\t\t\tfor (int c3 = c2; c3 < als; c3++){\n\t\t\t\tll ans = 0;\n\t\t\t\tfor (int c4 = 0; c4 < als; c4++){\n\t\t\t\t\tans += mul(say[c1][c4], mul(say[c2][c4], say[c3][c4]));\n\t\t\t\t\tans %= mod;\n\t\t\t\t}\n\t\t\t\tdp[c1][c2][c3] = ans;\n\t\t\t}\n\t\t}\n\t}\n\n\tll ans = 0;\n\tfor (int c1 = 0; c1 < als; c1++){\n\t\tfor (int c2 = c1; c2 < als; c2++){\n\t\t\tfor (int c3 = c2; c3 < als; c3++){\n\t\t\t\tfor (int c4 = c3; c4 < als; c4++){\n\t\t\t\t\tll ekle = mul(mul(dp[c1][c2][c3], dp[c1][c2][c4]), mul(dp[c1][c3][c4], dp[c2][c3][c4]));\n\t\t\t\t\tekle *= get(c1, c2, c3, c4);\n\t\t\t\t\tans = (ans+ekle)%mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ans;\n}\n\nint main(){\n\t//freopen(\"in\", \"r\", stdin);\n\t//freopen(\"out\", \"w\", stdout);\n\n\tcin.tie(0); ios::sync_with_stdio(false);\n\tclock_t start = clock();\n\tint n;\n\tcin >> n;\n\tals = 0;\n\tset<string> strs[11];\n\tfor (int i = 0; i < n; i++){\n\t\tstring str;\n\t\tcin >> str;\n\t\tstrs[str.size()].insert(str);\n\t\tstrs[str.size()].insert(ters(str));\n\t\tfor (int c = 0; c < str.size(); c++){\n\t\t\tif (mapp.count(str[c]) == 0) mapp[str[c]] = als++;\n\t\t}\n\t}\n\n\tfor (int i1 = 0; i1 < als; i1++){\n\t\tfor (int i2 = 0; i2 < als; i2++){\n\t\t\tfor (int i3 = 0; i3 < als; i3++){\n\t\t\t\tfor (int i4 = 0; i4 < als; i4++){\n\t\t\t\t\tdpget[i1][i2][i3][i4] = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tll ans = 0;\n\tfor (int i = 3; i < 11; i++){\n\t\tans += solve(strs[i]);\n\t\tans %= mod;\n\t}\n\t\n\tcout << ans << endl;\n\t\n}\n",
    "ext": "cpp"
  },
  "57840810": {
    "code": "#include<bits/stdc++.h>\n#define st first\n#define nd second\n#define pb push_back\n#define ppb pop_back\n#define ii pair<int,int>\n#define ll long long\n#define umin(x,y) x=min(x,y)\n#define umax(x,y) x=max(x,y)\n#define orta ((bas+son)>>1)\n#define sz(x) ((int)x.size())\n#define all(x) x.begin(),x.end()\n#define inf 2000000000\n#define N 100005\n#define MOD 998244353\nusing namespace std;\n\nset<string> has;\nint ans,tot,n;\nint cnt[15][77][77];\nint dp[77][77][77];\nint mp[259];\nstring s;\n\nint mul(int x,int y) {\n\n\treturn (ll) x * y % MOD;\n\n}\n\nint add(int x,int y) {\n\n\tx += y;\n\n\tif(x>=MOD) x -= MOD;\n\tif(x<0) x += MOD;\n\n\treturn x;\n\n}\n\nvoid solve(int len) {\n\n\tint fac = 24;\n\n\tvector<int> num;\n\n\tfor(int i = 1; i <= tot; i++) {\n\n\t\tnum.pb(i);\n\n\t\tfor(int j = i; j <= tot; j++) {\n\n\t\t\tnum.pb(j);\n\n\t\t\tfor(int k = j; k <= tot; k++) {\n\n\t\t\t\tnum.pb(k);\n\n\t\t\t\tfor(int l = k; l <= tot; l++) {\n\n\t\t\t\t\tnum.pb(l);\n\n\n\n\t\t\t\t\tint coef = mul(mul(dp[i][j][k],dp[i][k][l]),mul(dp[i][j][l],dp[j][k][l]));\n\n\t\t\t\t\tfor(int w = 0; w < 4; w++) {\n\n\t\t\t\t\t\tint tot = 1;\n\n\t\t\t\t\t\twhile(w + 1 < 4 && num[w] == num[w + 1]) ++w,++tot,fac /= tot;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//for(auto x : num) cerr << x << \" \";\n\n\t\t\t\t\t//cerr << '\\n';\n\n\t\t\t\t\t//cerr << coef << \" \" << fac << '\\n';\n\n\t\t\t\t\tans = add(ans,mul(coef,fac));\n\n\t\t\t\t\tfac = 24;\n\n\t\t\t\t\tnum.ppb();\n\n\t\t\t\t}\n\n\t\t\t\tnum.ppb();\n\n\t\t\t}\n\n\t\t\tnum.ppb();\n\n\t\t}\n\n\t\tnum.ppb();\n\n\t}\n\n}\n\nvoid calc(int len) {\n\n\tfor(int j = 1; j <= tot; j++) {\n\n\t\tfor(int k = j; k <= tot; k++) {\n\n\t\t\tfor(int l = k; l <= tot; l++) {\n\n\t\t\t\tdp[j][k][l] = 0;\n\n\t\t\t\tfor(int i = 1; i <= tot ;i++) {\n\n\t\t\t\t\tint coef = mul(cnt[len][i][j],mul(cnt[len][i][k],cnt[len][i][l]));\n\n\t\t\t\t\tdp[j][k][l] = add(dp[j][k][l],coef);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\t\n}\n\nint getl(char a) {\n\n\tif(!mp[a]) mp[a] = ++tot;\n\n\treturn mp[a];\n\n}\n\nbool ispal(string s) {\n\n\tfor(int i = 0; i < sz(s); i++) \n\t\tif(s[i] != s[sz(s) - i - 1]) return false;\n\n\treturn true;\n\n}\n\nbool isprocessed(string s) {\n\n\tif(has.find(s) != has.end()) return true;\n\n\thas.insert(s);\n\n\treverse(s.begin(),s.end());\n\n\thas.insert(s);\n\n\treturn false;\n\n}\n\nvoid eval() {\n\n\tint len = s.size();\n\n\tint fil = getl(s[0]);\n\tint lal = getl(s.back());\n\n\tif(isprocessed(s)) return ;\n\n\tif(ispal(s)) cnt[len][fil][lal]++;\n\telse {\n\n\t\tcnt[len][fil][lal]++;\n\t\tcnt[len][lal][fil]++;\n\n\t}\n\n}\n\nint main() {\n\n\tios_base :: sync_with_stdio(0);\n\tcin.tie(0);cout.tie(0);\n\n\tcin >> n;\n\n\tfor(int i = 1; i <= n; i++) {\n\n\t\tcin >> s;\n\n\t\teval();\n\n\t}\n\n\tfor(int i = 3; i <= 10; i++) calc(i),solve(i);\n\n\tcout << ans;\n\n}",
    "ext": "cpp"
  },
  "57840782": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,b) for(int i = (a); i < (b); ++i)\n#define rrep(i,a,b) for(int i = (b); i --> (a);)\n#define all(v) (v).begin(),(v).end()\n#define trav(x,v) for(auto &x : v)\n#define sz(v) int(v.size())\ntypedef vector<int> vi;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<ll> vl;\n\nconst ll md = 998244353;\nint m = 26+26+10;\n\nint ren(char c){\n\tif('a' <= c && c <= 'z')\n\t\treturn  0+c-'a';\n\tif('A' <= c && c <= 'Z')\n\t\treturn 26+c-'A';\n\telse\n\t\treturn 52+c-'0';\n}\n\nll cnt(vector<vl> &ws){\n\tvector<vector<vl>> pyr(m, vector<vl>(m, vl(m)));\n\trep(i,0,m) rep(j,i,m) rep(k,j,m){\n\t\trep(t,0,m)\n\t\tpyr[i][j][k] = (pyr[i][j][k] + \n\t\tws[i][t] * ws[j][t] * ws[k][t])%md;\n\t}\n\tll ans = 0;\n\trep(a,0,m) rep(b,a,m) rep(c,b,m) rep(d,c,m){\n\t\tll cur = pyr[a][b][c]\n\t\t\t*pyr[a][b][d]%md\n\t\t\t*pyr[a][c][d]%md\n\t\t\t*pyr[b][c][d]%md;\n\t\tint dis = 4 - (a==b)-(b==c)-(c==d);\n\t\tint syms = -1;\n\t\tif(dis == 4) syms = 1;\n\t\telse if(dis == 3) syms = 2;\n\t\telse if(dis == 2){\n\t\t\tsyms = b==c ? 6 : 4;\n\t\t} else syms = 24;\n\t\tcur *= 24 / syms;\n\t\tans = (ans + cur) % md;\n\t}\n\treturn ans;\n}\n\nint main(){\n\tcin.sync_with_stdio(0);\n\tcin.tie(0);\n\n\tint n;\n\tcin >> n;\n\n\tvector<set<string>> words(11);\n\n\trep(_,0,n){\n\t\tstring s;\n\t\tcin >> s;\n\t\tint l = sz(s);\n\t\twords[l].insert(s);\n\t\treverse(all(s));\n\t\twords[l].insert(s);\n\t}\n\tll ans = 0;\n\trep(l,3,11) if(true){\n\t\tvector<vl> ws(m, vl(m));\n\t\ttrav(s, words[l])\n\t\t\tws[ren(s[0])][ren(s[l-1])]++;\n\t\tll res = cnt(ws);\n\t\tans += res;\n\t}\n\tans %= md;\n\tcout << ans << endl;\n}\n",
    "ext": "cpp"
  },
  "57840085": {
    "code": "// InterestingLSY\n// 2659723130\n// \u300a\u5e7d\u7075\u516c\u4e3b\u300b\u662f\u771f\u7684\u597d\u770b\uff01\n#include <bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define elif else if\n\n// Type\n#define ld double\n#define ll long long\n#define ull unsigned ll\n\n// Vector\n#define vc vector\n#define Pb push_back\n#define Pf push_front\n#define Eb emplace_back\n#define All(x) x.begin(),x.end()\n#define AllRev(x) x.rbegin(),x.rend()\n\n// Memory\n#define Ms(_data) memset(_data,0,sizeof(_data))\n#define Msn(_data,_num) memset(_data,_num,sizeof(_data))\n\n// Template\n#define _cl class\n#define _tp template\n#define _tyn typename\n\n// Pair\n#define Mp make_pair\n#define F first\n#define S second\n#define pii pair<int,int>\n#define pli pair<ll,int>\n#define pil pair<int,ll>\n#define pll pair<ll,ll>\n\n// Loop\n#define For(i,j) for( int (i) = 1 ; (i) <= (j) ; ++(i) )\n#define For0(i,j) for( int (i) = 0 ; (i) < (j) ; ++(i) )\n#define Forx(i,j,k) for( int (i) = (j) ; (i) <= (k) ; ++(i) )\n#define Forstep(i,j,k,st) for( int (i) = (j) ; (i) <= (k) ; (i) += (st) )\n#define fOR(i,j) for( int (i) = (j) ; (i) >= 1 ; --(i) )\n#define fOR0(i,j) for( int (i) = (j)-1 ; (i) >= 0 ; --(i) )\n#define fORx(i,j,k) for( int (i) = (k) ; (i) >= (j) ; --(i) )\n\n// Read\nstruct InputReader{\n\t#define bs 1048576\n\tchar buf[bs]; int p;\n\til InputReader(){ p = bs; }\n\til void Flush(){ p = 0; fread(buf,1,bs,stdin); }\n\til char C(){ if(p >= bs) Flush(); return buf[p++]; }\n\til char Readnum(){ char ch = C(); while( !isdigit(ch) && ch != '-' ) ch = C(); return ch; }\n\til void Readalpha( char &c ){ c = C(); while( !isalpha(c) ) c = C(); }\n\tint operator() (){\n\t\tint ans = 0, fu = 1; char ch = Readnum();\n\t\tif( ch == '-' ) fu = -1, ch = C();\n\t\twhile( ch >= '0' && ch <= '9' ){\n\t\t\tans = ans*10 + ch-'0';\n\t\t\tch = C();\n\t\t}\n\t\treturn ans * fu;\n\t}\n\tll Readll(){\n\t\tll ans = 0LL, fu = 1LL; char ch = Readnum();\n\t\tif( ch == '-' ) fu = -1LL, ch = C();\n\t\twhile( ch >= '0' && ch <= '9' ){\n\t\t\tans = ans*10LL + ch-'0';\n\t\t\tch = C();\n\t\t}\n\t\treturn ans * fu;\n\t}\n\til void Readstring( string &x ){\n\t\tx.clear(); char ch = C();\n\t\twhile( !isdigit(ch)  &&  !isalpha(ch)  &&  ch != '#'  &&  ch != '.' ) ch = C();\n\t\twhile( isdigit(ch)  ||  isalpha(ch)  ||  ch == '#'  ||  ch == '.' ){\n\t\t\tx += ch;\n\t\t\tch = C();\n\t\t}\n\t}\n\til void Readchstring( char s[] ){\n\t\tint len = 0; char ch = C();\n\t\twhile( !isdigit(ch)  &&  !isalpha(ch)  /*&&  ch != '*'  &&  ch != '?'*/ ) ch = C();\n\t\twhile( isdigit(ch)  ||  isalpha(ch)  /*||  ch == '*'  ||  ch == '?'*/ ){\n\t\t\ts[len++] = ch;\n\t\t\tch = C();\n\t\t}\n\t\ts[len] = '\\0';\n\t}\n\til void Specialread( char &c ){\n\t\tc = C();\n\t\twhile( !isdigit(c) && !isalpha(c) && c != '#'  &&  c != '.'  &&  c != '='  &&  c != 'B' ) c = C();\n\t}\n\t#undef bs\n}In;\nil void Read( int &x ){ x = In(); }\nil void Read( int &x, int &y ){ x = In(); y = In(); }\nil void Read( int &x1 , int &x2 , int &x3 ){ x1 = In(); x2 = In(); x3 = In(); }\nil void Read( int &x1 , int &x2 , int &x3 , int &x4 ){ x1 = In(); x2 = In(); x3 = In(); x4 = In(); }\nil void Read( ll &x ){ x = In.Readll(); }\nil void Read( ll &x, ll &y ){ x = In.Readll(); y = In.Readll(); }\nil void Read( ll &x1 , ll &x2 , ll &x3 ){ x1 = In.Readll(); x2 = In.Readll(); x3 = In.Readll(); }\nil void Read( ll &x1 , ll &x2 , ll &x3 , ll &x4 ){ x1 = In.Readll(); x2 = In.Readll(); x3 = In.Readll(); x4 = In.Readll(); }\n_tp<_tyn T> void Read( T a[] , int st , int ed ){ Forx(i,st,ed) Read(a[i]); }\n#define iRead(k) int k; Read(k);\n#define iRead2(a,b) iRead(a); iRead(b);\n#define iRead3(a,b,c) iRead2(a,b); iRead(c);\n#define iRead4(a,b,c,d) iRead2(a,b); iRead2(c,d);\n#define lRead(k) ll k; Read(k);\n#define lRead2(a,b) lRead(a); lRead(b);\n#define lRead3(a,b,c) lRead2(a,b); lRead(c);\n#define lRead4(a,b,c,d) lRead2(a,b); lRead2(c,d);\n\n// File\n#define Fin(a) freopen(a,\"r\",stdin)\n#define Fout(a) freopen(a,\"w\",stdout)\nil void FILEIO(){\n\t#ifdef intLSY\n\t\tFin(\"in.in\");\n\t#endif\n}\nil void FILEIO( string pname ){\n\t#ifndef intLSY\n\t\tFin((pname+\".in\").c_str());\n\t\tFout((pname+\".out\").c_str());\n\t#else\n\t\tFin(\"in.in\");\n\t#endif\n}\nil void FILEIO_OICONTEST( string pname ){\n\tFin((pname+\".in\").c_str());\n\t#ifndef intLSY\n\t\tFout((pname+\".out\").c_str());\n\t#endif\n}\nvoid Printtime(){\n\t#ifdef intLSY\n\t\tdouble _timeuse = clock()* 1000.0 / CLOCKS_PER_SEC;\n\t\tfprintf(stderr,\"\\n\\nTime usage:\\n%.0lf ms\\n\",_timeuse);\n\t#endif\n}\nvoid END(){ Printtime(); exit(0); }\n_tp<_tyn T>void END( T mes ){ cout << mes << endl; END(); }\n\n// Debug\n#define B cerr << \"BreakPoint\" << endl;\n#define O(x) cerr << #x << \" \" << x << endl;\n#define o(x) cerr << #x << \" \" << x << \"  \";\n#define Msz(x) cerr << \"Sizeof \" << #x << \" \" << sizeof(x)/1024/1024 << \" MB\" << endl;\n_tp<_tyn T>void Print( T a[] , int s , int t , char sp = ' ' , char ed = '\\n' ){\n\tif( s > t ) return;\n\tfor( int i = s ; i < t ; i++ )\n\t\tcout << a[i] << sp;\n\tcout << a[t] << ed;\n\tcout.flush();\n}\n_tp<_tyn T>void Print( T a , int s = 0 , int t = -1 , char sp = ' ' , char ed = '\\n' ){\n\tif( t == -1 ) t = a.size()-1;\n\tfor( int i = s ; i <= t ; i++ )\n\t\tcout << a[i] << sp;\n\tcout << ed;\n\tcout.flush();\n}\n\n// Optimize\n#define Max(a,b) ((a)>(b)?(a):(b))\n#define Min(a,b) ((a)<(b)?(a):(b))\n#define Mymax(a,b) (a) = max((a),(b))\n#define Mymin(a,b) (a) = min((a),(b))\n#define MyMax(a,b) (a) = Max((a),(b))\n#define MyMin(a,b) (a) = Min((a),(b))\n#define INF (0x3f3f3f3f)\n#define LINF ((long long)(0x3f3f3f3f3f3f3f3f))\n#define Sqr(x) ((x)*(x))\n#define Lowbit(a) ((a)&(-(a)))\nvc<int> Range( int l , int r ){\n\tvc<int> ret{};\n\tForx(i,l,r) ret.Pb(i);\n\treturn ret;\n}\nmt19937 Rand(0xe38195e38293);\t// \u3055\u3093\n#define MOD (998244353LL)\n#define Rmoi(a,b) ((a)%b+b)%b\n#define Rmo(a) ((a)%MOD+MOD)%MOD\n#define Rmod(a) a = (a%MOD+MOD)%MOD\n#define Rmodi(a,b) a = (a%(b)+(b))%(b)\n#define Mymoi(a,b) ((a)>=b?((a)-b):(a))\n#define Mymodi(a,b) a = ((a)>=(b))?((a)-(b)):(a)\ntemplate<typename T>\nT Mymo( const T &x ){ return x >= MOD ? x-MOD : x; }\ntemplate<typename T>\nvoid Mymod( T &x ){ x = x >= MOD ? x-MOD : x; }\nil ll Pow( ll a , ll b , const ll p = MOD ){\n\tll ret = 1;\n\tfor( ; b ; a = a*a%p, b >>= 1LL )\n\t\tif(b&1LL) ret = ret*a%p;\n\treturn ret;\n}\nil ll Inv( ll a , const ll p = MOD ){ return Pow(a,p-2LL,p); }\n///////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////\nconst int MAXC = 64;\nil int Tr( char c ){\n\tif(islower(c)) return c - 'a';\n\tif(isupper(c)) return c - 'A' + 26;\n\treturn c - '0' + 52;\n}\n\nconst int mul[2][2][2] = {\n\t{ {24,12} , {12,4} },\n\t{ {12,6} , {4,1} }\n};\n\nll cnt[MAXC][MAXC];\nunordered_set<string> ban;\n\nll p[MAXC][MAXC][MAXC];\nll Solve( const vc<string> &a ){\n\tMs(cnt);\n\tban.clear();\n\tauto Ins = [&]( const string &s ){\n\t\tif(ban.count(s)) return;\n\t\tban.insert(s);\n\t\t++cnt[Tr(s[0])][Tr(s.back())];\n\t};\n\tfor( auto s : a ){\n\t\tstring rs = s; reverse(All(rs));\n\t\tIns(s); Ins(rs);\n\t}\n\tFor0(a,62){\n\t\tauto ca = cnt[a];\n\t\tForx(b,0,a){\n\t\t\tauto cb = cnt[b];\n\t\t\tForx(c,0,b){\n\t\t\t\tauto cc = cnt[c];\n\t\t\t\tll t = 0;\n\t\t\t\tFor0(top,62){\n\t\t\t\t\t( t += ca[top] * cb[top] * cc[top] ) %= MOD;\n\t\t\t\t}\n\t\t\t\tp[a][b][c] = p[a][c][b] = p[b][a][c] = p[b][c][a] = p[c][a][b] = p[c][b][a] = t;\n\t\t\t}\n\t\t}\n\t}\n\tll ans = 0;\n\tFor0(a,62)\n\t\tForx(b,0,a)\n\t\t\tForx(c,0,b)\n\t\t\t\tForx(d,0,c){\n\t\t\t\t\tll t = p[a][b][c]*p[a][b][d]%MOD*p[b][c][d]%MOD*p[a][c][d]%MOD;\n\t\t\t\t\t// a >= b >= c >= d\n\t\t\t\t\tans = (ans+t*mul[a==b][b==c][c==d]) % MOD;\n\t\t\t\t}\n\treturn ans;\n}\n\nint main(){\n\tFILEIO();\n\n\tiRead(n);\n\tstatic vc<string> ss[12];\n\tFor(i,n){\n\t\tstring s;\n\t\tIn.Readstring(s);\n\t\tss[s.length()].Eb(s);\n\t}\n\n\tll ans = 0;\n\tForx(i,3,10){\n\t\tif(ss[i].empty()) continue;\n\t\tll tans = Solve(ss[i]);\n\t\tans = Mymo(ans+tans);\n\t}\n\tcout << ans << endl;\n\n\tEND();\n}\n",
    "ext": "cpp"
  },
  "57839398": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#ifdef L\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#else\n#define debug(...)\n#endif\n\n#define int long long\n\n#define C 64\n#define Nmax signed(1e5+5)\n#define M 998244353\nint n;\nint words = 0;\nint l;\nint es[12][C][C];\nint tri[C][C][C];\n\nint c2i(char c)\n{\n\tif('a' <= c && c <= 'z') return c - 'a';\n\tif('A' <= c && c <= 'Z') return c - 'A' + 26;\n\tif('0' <= c && c <= '9') return c - '0' + 52;\n\tdebug(\"invalid char %c (%d)\\n\", c, signed(c));\n\tassert(false);\n}\n\nvoid calc_tri()\n{\n\tfor(int a = 0; a < C; ++a)\n\tfor(int b = a; b < C; ++b)\n\tfor(int c = b; c < C; ++c) {\n\t\ttri[a][b][c] = 0;\n\t\tfor(int d = 0; d < C; ++d) {\n\t\t\tint here = 1;\n\t\t\there = (here * es[l][a][d]) % M;\n\t\t\there = (here * es[l][b][d]) % M;\n\t\t\there = (here * es[l][c][d]) % M;\n\t\t\ttri[a][b][c] = (tri[a][b][c] + here) % M;\n\t\t}\n\t\tif(tri[a][b][c]) debug(\":: %d %d %d: %d\\n\", a,b,c,tri[a][b][c]);\n\t}\n}\n\nvoid count()\n{\n\tfor(int a = 0; a < C; ++a)\n\tfor(int b = a+1; b < C; ++b)\n\tfor(int c = b+1; c < C; ++c)\n\tfor(int d = c+1; d < C; ++d) {\n\t\tint here = 24;\n\t\there = (here * tri[a][b][c]) % M;\n\t\there = (here * tri[a][b][d]) % M;\n\t\there = (here * tri[a][c][d]) % M;\n\t\there = (here * tri[b][c][d]) % M;\n\t\tif(here) debug(\"%d %d %d %d: %d (24)\\n\", a,b,c,d,here);\n\t\twords = (words + here) % M;\n\t}\n\n\tfor(int a = 0; a < C; ++a)\n\tfor(int b = a+1; b < C; ++b)\n\tfor(int c = b+1; c < C; ++c) {\n\t\tint d = c;\n\t\tint here = 12;\n\t\there = (here * tri[a][b][c]) % M;\n\t\there = (here * tri[a][b][d]) % M;\n\t\there = (here * tri[a][c][d]) % M;\n\t\there = (here * tri[b][c][d]) % M;\n\t\tif(here) debug(\"%d %d %d %d: %d (12)\\n\", a,b,c,d,here);\n\t\twords = (words + here) % M;\n\t}\n\n\tfor(int a = 0; a < C; ++a)\n\tfor(int b = a+1; b < C; ++b)\n\tfor(int d = b+1; d < C; ++d) {\n\t\tint c = b;\n\t\tint here = 12;\n\t\there = (here * tri[a][b][c]) % M;\n\t\there = (here * tri[a][b][d]) % M;\n\t\there = (here * tri[a][c][d]) % M;\n\t\there = (here * tri[b][c][d]) % M;\n\t\tif(here) debug(\"%d %d %d %d: %d (12)\\n\", a,b,c,d,here);\n\t\twords = (words + here) % M;\n\t}\n\n\tfor(int a = 0; a < C; ++a)\n\tfor(int c = a+1; c < C; ++c)\n\tfor(int d = c+1; d < C; ++d) {\n\t\tint b = a;\n\t\tint here = 12;\n\t\there = (here * tri[a][b][c]) % M;\n\t\there = (here * tri[a][b][d]) % M;\n\t\there = (here * tri[a][c][d]) % M;\n\t\there = (here * tri[b][c][d]) % M;\n\t\tif(here) debug(\"%d %d %d %d: %d (12)\\n\", a,b,c,d,here);\n\t\twords = (words + here) % M;\n\t}\n\n\tfor(int a = 0; a < C; ++a)\n\tfor(int c = a+1; c < C; ++c) {\n\t\tint b = a, d = c;\n\t\tint here = 6;\n\t\there = (here * tri[a][b][c]) % M;\n\t\there = (here * tri[a][b][d]) % M;\n\t\there = (here * tri[a][c][d]) % M;\n\t\there = (here * tri[b][c][d]) % M;\n\t\tif(here) debug(\"%d %d %d %d: %d (6)\\n\", a,b,c,d,here);\n\t\twords = (words + here) % M;\n\t}\n\n\tfor(int a = 0; a < C; ++a)\n\tfor(int d = a+1; d < C; ++d) {\n\t\tint b = a, c = a;\n\t\tint here = 4;\n\t\there = (here * tri[a][b][c]) % M;\n\t\there = (here * tri[a][b][d]) % M;\n\t\there = (here * tri[a][c][d]) % M;\n\t\there = (here * tri[b][c][d]) % M;\n\t\tif(here) debug(\"%d %d %d %d: %d (4)\\n\", a,b,c,d,here);\n\t\twords = (words + here) % M;\n\t}\n\n\tfor(int a = 0; a < C; ++a)\n\tfor(int b = a+1; b < C; ++b) {\n\t\tint c = b, d = b;\n\t\tint here = 4;\n\t\there = (here * tri[a][b][c]) % M;\n\t\there = (here * tri[a][b][d]) % M;\n\t\there = (here * tri[a][c][d]) % M;\n\t\there = (here * tri[b][c][d]) % M;\n\t\tif(here) debug(\"%d %d %d %d: %d (4)\\n\", a,b,c,d,here);\n\t\twords = (words + here) % M;\n\t}\n\n\tfor(int a = 0; a < C; ++a) {\n\t\tint b = a, c = a, d = a;\n\t\tint here = 1;\n\t\there = (here * tri[a][b][c]) % M;\n\t\there = (here * tri[a][b][d]) % M;\n\t\there = (here * tri[a][c][d]) % M;\n\t\there = (here * tri[b][c][d]) % M;\n\t\tif(here) debug(\"%d %d %d %d: %d (1)\\n\", a,b,c,d,here,l);\n\t\twords = (words + here) % M;\n\t}\n}\n\nsigned main()\n{\n\tset<string> w;\n\tscanf(\"%lld\", &n);\n\tchar buf[20];\n\tstring s;\n\tfor(int i = 0; i < n; ++i) {\n\t\tscanf(\" %s\", buf);\n\t\ts = buf;\n\n\t\tif(w.emplace(s).second) {\n\t\t\tint& x = es[s.size()][c2i(s.front())][c2i(s.back())];\n\t\t\tx = (x + 1) % M;\n\t\t}\n\t\treverse(s.begin(), s.end());\n\t\tif(w.emplace(s).second) {\n\t\t\tint& x = es[s.size()][c2i(s.front())][c2i(s.back())];\n\t\t\tx = (x + 1) % M;\n\t\t}\n\t}\n\n\tfor(l = 3; l <= 10; ++l) {\n\t\tdebug(\"--- %d ---\\n\", l);\n\t\tcalc_tri();\n\t\tcount();\n\t}\n\n\tprintf(\"%d\\n\", words);\n}\n\n",
    "ext": "cpp"
  },
  "57839271": {
    "code": "#include <bits/stdc++.h>\n#define st first\n#define nd second\n#define mp make_pair\n#define pb push_back\n#define sol (k+k)\n#define sag (k+k+1)\n#define orta ((bas+son)/2)\n#define coc g[node][i]\n#define mod 998244353\n#define p 63\n#define inf 1000000009\n#define N 1000005\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair < int , int > ii;\n\nint n, m, mm, h[N], geldi[100], say[N], fak[154];\nll kel[12][105][105], dp[65][65][65], crp[65][65][65][65], ans;\nstring s;\nmap < ll , bool > u;\n\nint ver(char x){\n\tif(h[x])\n\t\treturn h[x];\n\treturn h[x] = ++m;\n}\n\nbool palmi(string s){\n\tint n = s.length();\n\t// cout << n << \" \" << s << endl;\n\tfor(int i = 0; i < n; i++)\n\t\tif(s[i] != s[n - i - 1])\n\t\t\treturn 0;\n\treturn 1;\n}\n\nll has(string s){\n\tint n = s.length();\n\tll ans = 0;\n\tfor(int i = 0; i < n; i++){\n\t\tans = ans*p;\n\t\tans = (ans + ver(s[i]));\n\t}\n\treturn ans;\n}\n\nint sayi(int x, int y){\n\treturn (x - 1)*m + y;\n}\n\nvoid bul(vector < int > x){\n\tint ans = 24;\n\tfor(int i = 0; i < 4; i++){\n\t\tans *= fak[say[x[i]]];\n\t\tsay[x[i]]++;\n\t\tans /= fak[say[x[i]]];\n\t}\n\tcrp[x[0]][x[1]][x[2]][x[3]] = ans;\n\tfor(int i = 0; i < 4; i++)\n\t\tsay[x[i]]--;\n}\n\nint main(){\n\t// freopen(\"in.txt\", \"r\", stdin);\n\t// freopen(\"out.txt\", \"w\", stdout);\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tfak[0] = fak[1] = 1;fak[2] = 2;fak[3] = 6;fak[4] = 24;\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++){\n\t\tcin >> s;\n\t\tif(u.count(has(s)))\n\t\t\tcontinue;\n\t\tint of = s.length();\n\t\tgeldi[of]++;\n\t\tkel[of][ver(s[0])][ver(s[of - 1])]++;\n\t\tif(!palmi(s))\n\t\t\tkel[of][ver(s[of - 1])][ver(s[0])]++;\n\t\treverse(s.begin(), s.end());\n\t\tu[has(s)] = 1;\n\t\t// cout << kel[of][ver(s[0])][ver(s[of - 1])] << endl;\n\t}\n\tmm = m*m;\n\t// if(m > 16)\n\t// \tassert(0);\n\tvector < int > of(4);\n\tfor(of[0] = 1; of[0] <= m; of[0]++)\n\t\tfor(of[1] = of[0]; of[1] <= m; of[1]++)\n\t\t\tfor(of[2] = of[1]; of[2] <= m; of[2]++)\n\t\t\t\tfor(of[3] = of[2]; of[3] <= m; of[3]++)\n\t\t\t\t\tbul(of);\n\n\tfor(int k = 3; k <= 10; k++){\n\t\tif(!geldi[k])\n\t\t\tcontinue;\n\n\t\tmemset(dp, 0, sizeof dp);\n\n\t\tfor(int i = 1; i <= m; i++)\n\t\t\tfor(int x = 1; x <= m; x++)\n\t\t\t\tfor(int y = x; y <= m; y++)\n\t\t\t\t\tfor(int z = y; z <= m; z++)\n\t\t\t\t\t\tdp[x][y][z] = (dp[x][y][z] + kel[k][i][x]*kel[k][i][y]*kel[k][i][z]%mod)%mod;\n\n\t\tfor(int x = 1; x <= m; x++)\n\t\t\tfor(int y = x; y <= m; y++)\n\t\t\t\tfor(int z = y; z <= m; z++)\n\t\t\t\t\tfor(int t = z; t <= m; t++){\n\t\t\t\t\t\tans = (ans + (((dp[x][y][z] * dp[y][z][t])%mod) * ((dp[x][y][t] * dp[x][z][t])%mod)%mod)*crp[x][y][z][t]%mod )%mod;\n\t\t\t\t\t}\n\t}\n\tcout << ans << \"\\n\";\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57839159": {
    "code": "#include<bits/stdc++.h>\n\nusing namespace std;\ntypedef long long int lld;\n#define rep(i,a,b) for(int i=a;i<b;i++)\n#define trav(a,v) for(auto a:v)\n#define MOD 998244353\nlld poss[256][256];\nlld DP[130][130][130];\nvector<char> alphabet;\n\nint main(){\n  int n;\n  cin>>n;\n  string s[n];\n  set<string> S;\n  rep(i,0,n){\n    cin>>s[i];\n    /*rep(j,0,s[i].size()){\n      if(s[i][j]<='9'){\n\ts[i][j]-='0';\n      }else{\n\tif(s[i][j]<='Z')s[i][j]-='A'+10;\n\telse{\n\t  s[i][j]-='a'+10+26;\n\t}\n      }\n    }*/\n    S.insert(s[i]);\n    reverse(s[i].begin(),s[i].end());\n    S.insert(s[i]);\n  }\n  vector<string> V[11];\n  trav(a,S){\n    V[a.size()].push_back(a);\n  }\n  rep(i,'a','z'+1){\n    alphabet.push_back(i);\n  }\n  rep(i,'A','Z'+1){\n    alphabet.push_back(i);\n  }\n  rep(i,'0','9'+1){\n    alphabet.push_back(i);\n  }\n  lld ans=0;\n  rep(i,3,11){\n    trav(a,alphabet){\n      trav(b,alphabet){\n\tposs[a][b]=0;\n      }\n    }\n    trav(a,V[i]){\n      poss[a[0]][a[a.size()-1]]++;\n    }\n    rep(i,0,alphabet.size()){\n      rep(j,i,alphabet.size()){\n\trep(k,j,alphabet.size()){\n\t  int a,b,c;\n\t  a=alphabet[i];\n\t  b=alphabet[j];\n\t  c=alphabet[k];\n\t  DP[a][b][c]=0;\n\t  trav(d,alphabet){\n\t    DP[a][b][c]+=poss[a][d]*poss[b][d]*poss[c][d];\n\t    DP[a][b][c]%=MOD;\n\t  }\n\t}\n      }\n    }\n    rep(i,0,alphabet.size()){\n      rep(j,i,alphabet.size()){\n\trep(k,j,alphabet.size()){\n\t  rep(l,k,alphabet.size()){\n\t    lld can=DP[alphabet[i]][alphabet[j]][alphabet[k]];\n\t    can*=DP[alphabet[i]][alphabet[j]][alphabet[l]];\n\t    can%=MOD;\n\t    can*=DP[alphabet[i]][alphabet[k]][alphabet[l]];\n\t    can%=MOD;\n\t    can*=DP[alphabet[j]][alphabet[k]][alphabet[l]];\n\t    can%=MOD;\n\t    if(i!=j){\n\t      if(j!=k){\n\t\tif(k!=l)can*=24;\n\t\telse can*=12;\n\t      }else{\n\t\tif(k!=l)can*=12;\n\t\telse can*=4;\n\t      }\n\t    }else{\n\t      if(j!=k){\n\t\tif(k!=l)can*=12;\n\t\telse can*=6;\n\t      }else{\n\t\tif(k!=l)can*=4;\n\t\t\n\t      }\n\t    }\n\t    can%=MOD;\n\t    ans+=can;\n\t    ans%=MOD;\n\t  }\n\t}\n      }\n    }\n  }\n  cout<<ans<<endl;\n  \n  return 0;\n}",
    "ext": "cpp"
  },
  "57838332": {
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <iostream>\n#include <vector>\n#include <set>\n#define M 998244353\nusing namespace std;\ntypedef long long ll;\n\nint N, gr[100005][10], npal[100005];\nll dp[64][64][64], tot[64][64][64], cnt[64][64], ans;\nstring s;\nset<string> ss;\nvector<int> tal[11];\n\nint conv(char c) {\n\tif ('a' <= c && c <= 'z') return c - 'a';\n\tif ('A' <= c && c <= 'Z') return (c - 'A') + 26;\n\treturn (c - '0') + 52;\n}\n\nll pm(ll x, ll y) {\n\treturn (x * y) % M;\n}\n\nint main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcin >> N;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> s;\n\t\tfor (int j = 0; j < s.size(); j++) {\n\t\t\tgr[i][j] = conv(s[j]);\n\t\t}\n\t\tfor (int j = 0; j <= s.size() / 2; j++) {\n\t\t\tif (s[j] != s[s.size() - 1 - j]) npal[i] = 1;\n\t\t}\n\t\tif (ss.find(s) == ss.end()) {\n\t\t\tss.emplace(s);\n\t\t\treverse(s.begin(), s.end());\n\t\t\tss.emplace(s);\n\t\t\ttal[s.size()].push_back(i);\n\t\t}\n\t}\n\tfor (int n = 3; n <= 10; n++) {\n\t\tmemset(dp, 0, sizeof(dp));\n\t\tmemset(cnt, 0, sizeof(cnt));\n\t\tfor (int i : tal[n]) {\n\t\t\tif (npal[i]) {\n\t\t\t\tcnt[gr[i][0]][gr[i][n-1]]++;\n\t\t\t\tcnt[gr[i][n-1]][gr[i][0]]++;\n\t\t\t} else {\n\t\t\t\tcnt[gr[i][0]][gr[i][n-1]]++;\n\t\t\t}\n\t\t}\n\t\tfor (int a = 0; a < 62; a++) for (int b = a; b < 62; b++) for (int c = b; c < 62; c++) for (int x = 0; x < 62; x++) {\n\t\t\tdp[a][b][c] = (dp[a][b][c] + pm(cnt[x][a], pm(cnt[x][b], cnt[x][c]))) % M;\n\t\t}\n\t\tfor (int a = 0; a < 62; a++) for (int b = a; b < 62; b++) for (int c = b; c < 62; c++) for (int d = c; d < 62; d++) {\n\t\t\tint fac = 24;\n\t\t\tif (a == b) {\n\t\t\t\tif (b == c) {\n\t\t\t\t\tif (c == d) fac = 1;\n\t\t\t\t\telse fac = 4;\n\t\t\t\t} else {\n\t\t\t\t\tif (c == d) fac = 6;\n\t\t\t\t\telse fac = 12;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (b == c) {\n\t\t\t\t\tif (c == d) fac = 4;\n\t\t\t\t\telse fac = 12;\n\t\t\t\t} else {\n\t\t\t\t\tif (c == d) fac = 12;\n\t\t\t\t\telse fac = 24;\n\t\t\t\t}\n\t\t\t}\n\t\t\tll pans = ans;\n\t\t\tans = (ans + pm(fac, pm(pm(dp[a][b][d], dp[a][b][c]), pm(dp[a][c][d], dp[b][c][d]))))%M;\n\t\t}\n\t}\n\tcout << ans;\n\treturn 0;\n}\n",
    "ext": "cpp"
  },
  "57838274": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n \n#define int long long \n \nconst int mod = 998244353;\n \nint g(int a, int b, int c, int d){\n\t\n\tint fact[4] = {1,2,6,24};\n\tint ans = fact[3];\n\tvector< int > v(4);\n\tv[0] = a;\n\tv[1] = b;\n\tv[2] = c;\n\tv[3] = d;\n\tsort(v.begin(), v.end());\n\t\n\tint curr = 1;\n\t\n\tfor(int i = 1; i < 4; i++){\n\t\tif(v[i] == v[i-1]) curr++;\n\t\telse{\n\t\t\tans /= fact[curr-1];\n\t\t\tcurr = 1;\n\t\t}\n\t}\n\tans /= fact[curr-1];\n\t\n\treturn ans;\n}\n \nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\t\n\tint N;\n\tcin >> N;\n\t\n\tvector< set< string > > v(11);\n\t\n\tfor(int i = 0; i < N; i++){\n\t\tstring s;\n\t\tcin >> s;\n\t\t\n\t\tv[s.size()].insert(s);\n\t\treverse(s.begin(), s.end());\n\t\tv[s.size()].insert(s);\n\t}\n\t\n\tint tot = 0;\n\t\n\tfor(int i = 3; i <= 10; i++){\n\t\tif(v[i].empty()) continue;\n\t\tint cnt[62][62] = {0};\n\t\tfor(string s : v[i]){\n\t\t\tint a, b;\n\t\t\tif(s[0] >= 'a' && s[0] <= 'z'){\n\t\t\t\ta = (s[0]-'a');\n\t\t\t}else if(s[0] >= 'A' && s[0] <= 'Z'){\n\t\t\t\ta = 26 + (s[0] - 'A');\n\t\t\t}else{\n\t\t\t\ta = 52 + (s[0] - '0');\n\t\t\t}\n\t\t\t\n\t\t\tif(s.back() >= 'a' && s.back() <= 'z'){\n\t\t\t\tb = s.back()-'a';\n\t\t\t}else if(s.back() >= 'A' && s.back() <= 'Z'){\n\t\t\t\tb = 26 + (s.back() - 'A');\n\t\t\t}else{\n\t\t\t\tb = 52 + (s.back() - '0');\n\t\t\t}\n\t\t\tcnt[a][b]++;\n\t\t}\n\t\t\n\t\tint prec[62][62][62] = {0};\n\t\t\n\t\tfor(int k = 0; k < 62; k++){\n\t\t\tfor(int l = 0; l <= k; l++){\n\t\t\t\tfor(int m = 0; m <= l; m++){\n\t\t\t\t\tfor(int n = 0; n < 62; n++){\n\t\t\t\t\t\tprec[k][l][m] += ((cnt[n][k] * cnt[n][m])%mod * cnt[n][l])%mod;\n\t\t\t\t\t\tif(prec[k][l][m] >= mod) prec[k][l][m] -= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int j = 0; j < 62; j++){\n\t\t\tfor(int l = 0; l <= j; l++){\n\t\t\t\tfor(int k = 0; k <= l; k++){\n\t\t\t\t\tfor(int m = 0; m <= k; m++){\n\t\t\t\t\t\n\t\t\t\t\t\tint A = prec[j][k][m];\n\t\t\t\t\t\tint B = prec[j][l][m];\n\t\t\t\t\t\tint C = prec[j][l][k];\n\t\t\t\t\t\tint D = prec[l][k][m];\n\t\t\t\t\t\tif(!A || !B || !C || !D) continue;\n\t\t\t\t\t\t\n\t\t\t\t\t\ttot += (((((((A * B)%mod)*C)%mod)*D)%mod)*g(j,l,k,m))%mod;\n\t\t\t\t\t\tif(tot >= mod) tot -= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << tot << endl;\n}\n",
    "ext": "cpp"
  },
  "57838092": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n \n#define int long long \n \nconst int mod = 998244353;\n \nint g(int a, int b, int c, int d){\n\t\n\tint fact[4] = {1,2,6,24};\n\tint ans = fact[3];\n\tvector< int > v(4);\n\tv[0] = a;\n\tv[1] = b;\n\tv[2] = c;\n\tv[3] = d;\n\tsort(v.begin(), v.end());\n\t\n\tint curr = 1;\n\t\n\tfor(int i = 1; i < 4; i++){\n\t\tif(v[i] == v[i-1]) curr++;\n\t\telse{\n\t\t\tans /= fact[curr-1];\n\t\t\tcurr = 1;\n\t\t}\n\t}\n\tans /= fact[curr-1];\n\t\n\treturn ans;\n}\n \nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\t\n\tint N;\n\tcin >> N;\n\t\n\tvector< set< string > > v(11);\n\t\n\tfor(int i = 0; i < N; i++){\n\t\tstring s;\n\t\tcin >> s;\n\t\t\n\t\tv[s.size()].insert(s);\n\t\treverse(s.begin(), s.end());\n\t\tv[s.size()].insert(s);\n\t}\n\t\n\tint tot = 0;\n\t\n\tfor(int i = 3; i <= 10; i++){\n\t\tif(v[i].empty()) continue;\n\t\tint cnt[62][62] = {0};\n\t\tfor(string s : v[i]){\n\t\t\tint a, b;\n\t\t\tif(s[0] >= 'a' && s[0] <= 'z'){\n\t\t\t\ta = (s[0]-'a');\n\t\t\t}else if(s[0] >= 'A' && s[0] <= 'Z'){\n\t\t\t\ta = 26 + (s[0] - 'A');\n\t\t\t}else{\n\t\t\t\ta = 52 + (s[0] - '0');\n\t\t\t}\n\t\t\t\n\t\t\tif(s.back() >= 'a' && s.back() <= 'z'){\n\t\t\t\tb = s.back()-'a';\n\t\t\t}else if(s.back() >= 'A' && s.back() <= 'Z'){\n\t\t\t\tb = 26 + (s.back() - 'A');\n\t\t\t}else{\n\t\t\t\tb = 52 + (s.back() - '0');\n\t\t\t}\n\t\t\tcnt[a][b]++;\n\t\t}\n\t\t\n\t\tint prec[62][62][62] = {0};\n\t\t\n\t\tfor(int k = 0; k < 62; k++){\n\t\t\tfor(int l = k; l < 62; l++){\n\t\t\t\tfor(int m = l; m < 62; m++){\n\t\t\t\t\tfor(int n = 0; n < 62; n++){\n\t\t\t\t\t\tprec[k][l][m] += ((cnt[n][k] * cnt[n][m])%mod * cnt[n][l])%mod;\n\t\t\t\t\t\tif(prec[k][l][m] >= mod) prec[k][l][m] -= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int j = 0; j < 62; j++){\n\t\t\tfor(int l = j; l < 62; l++){\n\t\t\t\tfor(int k = l; k < 62; k++){\n\t\t\t\t\tfor(int m = k; m < 62; m++){\n\t\t\t\t\t\n\t\t\t\t\t\tint A = prec[j][k][m];\n\t\t\t\t\t\tint B = prec[j][l][m];\n\t\t\t\t\t\tint C = prec[j][l][k];\n\t\t\t\t\t\tint D = prec[l][k][m];\n\t\t\t\t\t\tif(!A || !B || !C || !D) continue;\n\t\t\t\t\t\t\n\t\t\t\t\t\ttot += (((((((A * B)%mod)*C)%mod)*D)%mod)*g(j,l,k,m))%mod;\n\t\t\t\t\t\tif(tot >= mod) tot -= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << tot << endl;\n}\n",
    "ext": "cpp"
  },
  "57836599": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int mod = 998244353;\nconst long long lmod = 1LL * mod * 19268107;\nconst long long llmod = 1LL * mod * mod * 8;\n\ninline int getid(char x) {\n\tif (x >= 'a') return x - 'a';\n\tif (x >= 'A') return x - 'A' + 26;\n\treturn x - '0' + 52;\n}\ninline int get_comb(int a, int b, int c, int d) {\n\tif (a == b && b == c && c == d) return 1;\n\tif ((a == b && b == c) || (b == c && c == d)) return 4;\n\tif (a == b && c == d) return 6;\n\tif (a == b || b == c || c == d) return 12;\n\treturn 24;\n}\n\nset <string> st[11];\nint cnt2[62][62];\nint cnt3[62][62][62];\n\nint main() {\n\tint n; cin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring s; cin >> s;\n\t\tst[(int)s.size()].insert(s);\n\t\treverse(s.begin(), s.end());\n\t\tst[(int)s.size()].insert(s);\n\t}\n\tlong long ans = 0;\n\tfor (int len = 3; len <= 10; ++len) {\n\t\tif (st[len].empty()) continue;\n\t\tmemset(cnt2, 0, sizeof (cnt2));\n\t\tmemset(cnt3, 0, sizeof (cnt3));\n\t\tfor (auto &x: st[len])\n\t\t\tcnt2[getid(x.front())][getid(x.back())]++;\n\t\tfor (int i = 0; i < 62; ++i)\n\t\t\tfor (int j = 0; j < 62; ++j)\n\t\t\t\tfor (int k = 0; k < 62; ++k) {\n\t\t\t\t\tlong long res = 0;\n\t\t\t\t\tfor (int l = 0; l < 62; ++l)\n\t\t\t\t\t\tres += cnt2[i][l] * cnt2[j][l] * cnt2[k][l];\n\t\t\t\t\tcnt3[i][j][k] = res % mod;\n\t\t\t\t}\n\t\tfor (int i = 0; i < 62; ++i)\n\t\t\tfor (int j = i; j < 62; ++j)\n\t\t\t\tfor (int k = j; k < 62; ++k)\n\t\t\t\t\tfor (int l = k; l < 62; ++l) {\n\t\t\t\t\t\tlong long tmp1 = 1LL * cnt3[i][j][k] * cnt3[i][j][l] % mod;\n\t\t\t\t\t\tlong long tmp2 = 1LL * cnt3[i][k][l] * cnt3[j][k][l] % mod;\n\t\t\t\t\t\tans += (tmp1 * tmp2) % lmod * get_comb(i, j, k, l);\n\t\t\t\t\t\tif (ans >= llmod) ans -= llmod;\n\t\t\t\t\t}\n\t}\n\tcout << ans % mod << endl;\n\treturn 0;\n}\n",
    "ext": "cpp"
  },
  "57835672": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> P;\nconst int MAX_N = 100005;\nconst ll MOD = 998244353;\nconst int MAX_C = 64;\nconst int C = 62;\n\nint id(char c){\n    if('a' <= c && c <= 'z') return c - 'a' + 1;\n    if('A' <= c && c <= 'Z') return c - 'A' + 27;\n    if('0' <= c && c <= '9') return c - '0' + 53;\n}\n\nclass Trie{\n    int cnt = 1;\n    bool stop[MAX_N * 30];\n    int G[MAX_N * 30][MAX_C];\npublic:\n    void insert(char* str){\n        int cur = 0, pos = 0, len = strlen(str);\n        if(G[1][id(str[0])]) cur = G[1][id(str[0])];\n        else cur = ++cnt, G[1][id(str[0])] = cnt;\n        while(pos + 1 < len){\n            if(G[cur][id(str[pos + 1])]) cur = G[cur][id(str[pos + 1])];\n            else G[cur][id(str[pos + 1])] = ++cnt, cur = cnt;\n            pos++;\n        }\n        stop[cur] = true;\n    }\n    bool check(char* str){\n        int cur = 0, pos = 0, len = strlen(str);\n        if(G[1][id(str[0])]) cur = G[1][id(str[0])];\n        else return false;\n        while(pos + 1 < len){\n            if(G[cur][id(str[pos + 1])]) cur = G[cur][id(str[pos + 1])];\n            else return false;\n            pos++;\n        }\n        return stop[cur];\n    }\n};\n\nstruct Str{\n    char s[12]; int len; bool spc;\n    friend bool operator < (Str a, Str b){\n        if(a.len != b.len) return a.len < b.len;\n        for(int i = 1; i <= a.len; i++)\n            if(a.s[i] != b.s[i]) return a.s[i] < b.s[i];\n        return true;\n    }\n    friend bool operator == (Str a, Str b){\n        if(a.len != b.len) return false;\n        for(int i = 1; i <= a.len; i++)\n            if(a.s[i] != b.s[i]) return false;\n        return true;\n    }\n};\n\nint N;\nll fac[5] = {1, 1, 2, 6, 24};\nll bitmask[64][12];\nll ans;\nll cnt[64][64][12];\nStr v[MAX_N];\nTrie T;\n\nll F[MAX_C][MAX_C][MAX_C];\nll get(int a, int b, int c){\n    if(a > b) swap(a, b);\n    if(b > c) swap(b, c);\n    if(a > b) swap(a, b);\n    return F[a][b][c];\n}\n\nll numWays(int a, int b, int c, int d){\n    int f[5] = {0, a, b, c, d};\n    int cnt = 0, res = 24;\n    for(int i = 1; i <= 4; i++)\n        if(f[i] == f[i - 1] || i == 1) cnt++;\n        else {\n            res /= fac[cnt];\n            cnt = 1;\n        }\n    res /= fac[cnt];\n    return res;\n}\n\nvoid solve(int l){\n    memset(F, 0, sizeof(F));\n\n    for(int a = 1; a <= C; a++)\n        for(int b = a; b <= C; b++)\n            for(int c = b; c <= C; c++)\n                for(int d = 1; d <= C; d++)\n                    F[a][b][c] = (F[a][b][c] + cnt[a][d][l] * cnt[b][d][l] % MOD * cnt[c][d][l] % MOD) % MOD;\n    for(int a = 1; a <= C; a++)\n        for(int b = a; b <= C; b++)\n            for(int c = b; c <= C; c++) if(get(a, b, c))\n                for(int d = c; d <= C; d++){\n                    ans = (ans + numWays(a, b, c, d) * get(a, b, c) % MOD * get(a, b, d) % MOD * get(c, d, a) % MOD * get(c, d, b) % MOD) % MOD;\n                }\n}\n\nint main(){\n    // freopen(\"c.in\", \"r\", stdin);\n    // freopen(\"c.out\", \"w\", stdout);\n\n    scanf(\"%d\", &N);\n    for(int i = 1; i <= N; i++){\n        scanf(\"%s\", v[i].s + 1);\n        v[i].spc = false;\n        v[i].len = strlen(v[i].s + 1);\n        Str rev = v[i];\n        for(int j = 1; j <= v[i].len / 2; j++)\n            swap(rev.s[j], rev.s[v[i].len - j + 1]);\n        if(rev == v[i])\n            v[i].spc = true;\n        else if(rev < v[i])\n            v[i] = rev;\n\n        if(T.check(v[i].s + 1)) continue;\n        else {\n            cnt[id(v[i].s[1])][id(v[i].s[v[i].len])][v[i].len]++;\n            if(!v[i].spc)\n                cnt[id(v[i].s[v[i].len])][id(v[i].s[1])][v[i].len]++;\n        }\n        T.insert(v[i].s + 1);\n    }\n    for(int i = 3; i <= 10; i++) solve(i);\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57829107": {
    "code": "#include <iostream>\n#include <string>\n#include <stdio.h>\n#include <string.h>\n#include <vector>\n#include <ctime>\n#include <set>\n#include <map>\n#include <unordered_map>\n#include <queue>\n#include <algorithm>\n#include <cmath>\n#include <assert.h>\n#include <iomanip>\nusing namespace std;\n#define vi vector<int>\n#define pii pair<int,int>\n#define x first\n#define y second\n#define all(x) x.begin(),x.end()\n#define pb push_back\n#define mp make_pair\n#define SZ(x) (int)x.size()\n#define rep(i,a,b) for(int i=a;i<b;i++)\n#define per(i,a,b) for(int i=b-1;i>=a;i--)\n#define pi acos(-1)\n#define mod 998244353 //1000000007\n#define inf 1000000007\n#define ll long long\n#define ull unsigned long long\n#define DBG(x) cerr<<(#x)<<\"=\"<<x<<\"\\n\";\n#define N 200005\n#define _DEBUG\ntemplate <class U,class T> void Max(U &x, T y){if(x<y)x=y;}\ntemplate <class U,class T> void Min(U &x, T y){if(x>y)x=y;}\ntemplate <class T> void add(int &a,T b){a=(a+b)%mod;}\ninline int gcd(int a,int b){return b==0?a:gcd(b,a%b);}\ninline ll gcd(ll a,ll b){return b==0?a:gcd(b,a%b);}\n\nint pow(int a,int b){\n    int ans=1;\n    while(b){\n        if(b&1)ans=1LL*ans*a%mod;\n        a=1LL*a*a%mod;b>>=1;\n    }\n    return ans;\n}\nint pow(int a,int b,int c){\n    int ans=1;\n    while(b){\n        if(b&1)ans=1LL*ans*a%c;\n        a=1LL*a*a%c;b>>=1;\n    }\n    return ans;\n}\n\nconst int M = 62;\nint get(char c){\n    if(c >= 'a' && c <= 'z')return c - 'a';\n    else if(c >= 'A' && c <= 'Z')return c - 'A' + 26;\n    return c - '0' + 52;\n}\nint v[8][M][M];\nll f[M][M][M];\nll solve(int cnt[M][M]){\n    ll ans = 0;\n    memset(f, 0, sizeof(f));\n    rep(i, 0, M){\n        rep(j, 0, M)if(cnt[i][j]){\n            rep(k, j, M)if(cnt[i][k]){\n                ll w = cnt[i][j] * (ll)cnt[i][k] % mod;\n                rep(l, k, M)if(cnt[i][l]){\n                    (f[j][k][l] += w * cnt[i][l]) %= mod; \n                }\n            }\n        }\n    }\n    rep(i, 0, M){\n        rep(j, i, M){\n            rep(k, j, M)if(f[i][j][k]){\n                ll w = 0;\n                bool f1 = i == j && j == k;\n                bool f2 = i == j;\n                bool f3 = j == k;\n                rep(l, k, M){\n                    int K = 24;\n                    if(f1){\n                        if(l > k)K /= 6;\n                        else K = 1;\n                    }\n                    else if(f2){\n                        K /= 2;\n                        if(l == k)K /= 2;\n                    }\n                    else if(f3){\n                        if(l == k)K /= 6;\n                        else K /= 2;\n                    }\n                    else if(l == k)K /= 2;\n                    w += f[i][j][l] * f[i][k][l] % mod * f[j][k][l] % mod * K;\n                }\n                ans += w % mod * f[i][j][k] % mod;\n            }\n        }\n    }\n    return ans % mod;\n}\nint main(){\n    int T, ca=0,k,i,j,K = 0, m, n;\n    scanf(\"%d\", &n);\n    char s[11];\n    set<string>g;\n    rep(i, 0, n){\n        scanf(\"%s\", s);\n        m = strlen(s);\n        g.insert(s);\n        reverse(s,s + m);\n        g.insert(s);\n    }\n    for(auto &s : g){\n        m = SZ(s);\n        v[m-3][get(s[0])][get(s[m-1])]++;\n    }\n    ll ans = 0;\n    rep(i, 0, 8)ans += solve(v[i]);\n    ans %= mod;\n    printf(\"%lld\\n\", ans);\n}\n",
    "ext": "cpp"
  },
  "57827664": {
    "code": "//\n// Created by Danny Mittal on 7/26/19.\n//\n\n#include <iostream>\n#include <unordered_set>\n#include <cstring>\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst uint64_t MOD = 998244353;\n\nstruct mint {\n    uint64_t val;\n\n    mint(): val(0) {}\n    mint(uint64_t val): val(val) {}\n};\n\nistream& operator >>(istream& in, mint& k) {\n    in >> k.val;\n    k.val %= MOD;\n    return in;\n}\n\nostream& operator <<(ostream& out, mint k) {\n    out << k.val;\n    return out;\n}\n\nmint operator +(mint a, mint b) {\n    return mint((a.val + b.val) % MOD);\n}\n\nmint operator -(mint k) {\n    return mint((MOD - k.val) % MOD);\n}\n\nmint operator -(mint a, mint b) {\n    return mint((MOD + a.val - b.val) % MOD);\n}\n\nmint operator *(mint a, mint b) {\n    return mint((a.val * b.val) % MOD);\n}\n\nvoid operator +=(mint& a, mint b) {\n    a.val += b.val;\n    a.val %= MOD;\n}\n\nvoid operator -=(mint& a, mint b) {\n    a.val += MOD - b.val;\n    a.val %= MOD;\n}\n\nvoid operator *=(mint& a, mint b) {\n    a.val *= b.val;\n    a.val %= MOD;\n}\n\nmint operator^(mint b, int64_t e) {\n    e %= MOD - 1;\n    if (e < 0) {\n        e += MOD - 1;\n    }\n    mint res(1);\n    for (; e; e >>= 1) {\n        if (e & 1) {\n            res *= b;\n        }\n        b *= b;\n    }\n    return res;\n}\n\nvoid operator ^=(mint& b, int64_t e) {\n    b = b ^ e;\n}\n\nmint operator /(mint a, mint b) {\n    return a * (b ^ -1);\n}\n\nvoid operator /=(mint& a, mint b) {\n    a *= b ^ -1;\n}\n\nconst mint M0 = mint(0);\nconst mint M1 = mint(1);\nconst mint M2 = mint(2);\nconst mint M4 = mint(4);\nconst mint M8 = mint(8);\n\nint charIx(char chara) {\n    if (chara <= '9') {\n        return chara - '0';\n    } else if (chara <= 'Z') {\n        return 10 + (chara - 'A');\n    } else {\n        return 36 + (chara - 'a');\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    unordered_set<string> words;\n    for (int i = 0; i < n; i++) {\n        string word;\n        cin >> word;\n        words.insert(word);\n        reverse(word.begin(), word.end());\n        words.insert(word);\n    }\n    mint answer = M0;\n    for (int l = 3; l <= 10; l++) {\n        mint edges[62][62];\n        for (string word : words) {\n            if (word.length() == l) {\n                edges[charIx(word[0])][charIx(word[word.length() - 1])] += M1;\n            }\n        }\n        mint tris[62][62][62];\n        for (int a = 0; a < 62; a++) {\n            for (int b = a; b < 62; b++) {\n                for (int c = 0; c < 62; c++) {\n                    mint res;\n                    for (int d = 0; d < 62; d++) {\n                        res += edges[a][d] * edges[b][d] * edges[c][d];\n                    }\n                    tris[a][b][c] = res;\n                    tris[c][a][b] = res;\n                    tris[b][c][a] = res;\n                    tris[a][c][b] = res;\n                    tris[c][b][a] = res;\n                    tris[b][a][c] = res;\n                }\n            }\n        }\n        for (int k = 0; k < 62; k++) for (int x = k + 1; x < 62; x++)\n            for (int p = k + 1; p < 62; p++) for (int q = x + 1; q < 62; q++) {\n                if (p == x || p == q) {\n                    continue;\n                }\n                answer += M8 * tris[k][x][p] * tris[x][p][q] * tris[p][q][k] * tris[q][k][x];\n            }\n        for (int k = 0; k < 62; k++) for (int x = 0; x < 62; x++) for (int q = x + 1; q < 62; q++) {\n            if (x == k || q == k) {\n                continue;\n            }\n            answer += M4 * tris[k][x][k] * tris[x][k][q] * tris[k][q][k] * tris[q][k][x];\n        }\n        for (int k = 0; k < 62; k++) for (int p = 0; p < 62; p++) for (int q = p + 1; q < 62; q++) {\n            if (p == k || q == k) {\n                continue;\n            }\n            answer += M8 * tris[k][k][p] * tris[k][p][q] * tris[p][q][k] * tris[q][k][k];\n        }\n        for (int k = 0; k < 62; k++) for (int x = k + 1; x < 62; x++) {\n            answer += M4 * tris[k][x][k] * tris[x][k][x] * tris[k][x][k] * tris[x][k][x];\n        }\n        for (int k = 0; k < 62; k++) for (int p = k + 1; p < 62; p++) {\n            answer += M2 * tris[k][k][p] * tris[k][p][p] * tris[p][p][k] * tris[p][k][k];\n        }\n        for (int ka = 0; ka < 62; ka++) for (int p = 0; p < 62; p++) {\n            if (ka == p) {\n                continue;\n            }\n            answer += M4 * tris[ka][ka][ka] * (tris[ka][ka][p] ^ 3);\n        }\n        for (int k = 0; k < 62; k++) {\n            answer += tris[k][k][k] ^ 4;\n        }\n    }\n    cout << answer << endl;\n}",
    "ext": "cpp"
  },
  "57826117": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll,ll> ii;\n#define REP(i, n) for(int i = 0;i < n;i ++)\n#define REP1(i, n) for(int i = 1;i <= n;i ++)\n#define FILL(i, n) memset(i, n, sizeof(i))\n#define X first\n#define Y second\n#define pb push_back\n#define ALL(_a) (_a).begin(), (_a).end()\n#define SZ(_a) ((int)(_a).size())\n#ifdef brian\n#define IOS()\ntemplate<typename T>void _do(T &&x){cerr<<x<<endl;}\ntemplate<typename T, typename ...t>void _do(T &&x, t &&...X){cerr<<x<<\", \";_do(X...);}\n#define debug(...) {\\\n\tfprintf(stderr, \"%s - %d (%s) = \", __PRETTY_FUNCTION__, __LINE__, #__VA_ARGS__);\\\n\t_do(__VA_ARGS__);\\\n}\n#else\n#define IOS() ios_base::sync_with_stdio(0);cin.tie(0);\n#define endl '\\n'\n#define debug(...)\n#endif\n\nconst ll MAXn = 1e5 + 5;\nconst ll INF = ll(1e18);\nconst ll MOD = 998244353;\n\ninline int trans(char c)\n{\n\tif(islower(c))return c - 'a';\n\telse if(isupper(c))return c - 'A' + 26;\n\telse return c - '0' + 52;\n}\n\nll ct[70][70];\nll tct[70][70][70];\n\nll fac[2][2][2];\n\nint main(){\n\tIOS();\n\tll n;\n\tcin>>n;\n\tset<string> st;\n\tREP(i, n)\n\t{\n\t\t string s;\n\t\t cin>>s;\n\t\t st.insert(s);\n\t\t reverse(ALL(s));\n\t\t st.insert(s);\n\t}\n\tREP(a, 2)REP(b, 2)REP(c, 2)\n\t{\n\t\tll t = 24;\n\t\tif(a && b && c)t /= 24;\n\t\telse if(a && b)t /= 6;\n\t\telse if(b && c)t /= 6;\n\t\telse REP(i, a + b + c)t /= 2;\n\t\tfac[a][b][c] = t;\n\t}\n\tll tt = 0, C = 62;\n\tfor(int l = 3;l <= 10;l ++)\n\t{\n\t\tFILL(ct, 0);\n\t\tfor(auto s:st)if(SZ(s) == l)ct[trans(s[0])][trans(s.back())]++;\n\t\tFILL(tct, 0);\n\t\tfor(int a = 0;a < C;a ++)\n\t\t\tfor(int b = a;b < C;b ++)\n\t\t\t\tfor(int c = b;c < C;c ++)\n\t\t\t\t\tREP(d, C)\n\t\t\t\t\t\ttct[a][b][c] = (tct[a][b][c] + ct[a][d] * ct[b][d] * ct[c][d]) % MOD;\n\n\t\tfor(int a = 0;a < C;a ++)\n\t\t\tfor(int b = a;b < C;b ++)\n\t\t\t\tfor(int c = b;c < C;c ++)\n\t\t\t\t\tfor(int d = c;d < C;d ++)\n\t\t{\n\t\t\t\n\t\t\ttt = (tt + tct[a][b][c] * tct[a][b][d] % MOD * tct[a][c][d] % MOD * tct[b][c][d] % MOD * fac[a == b][b == c][c == d]) % MOD;\n\t\t}\n\t}\n\tcout<<tt<<endl;\n}",
    "ext": "cpp"
  },
  "57826089": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#ifdef DEBUG\n\t#define D(x...) printf(x)\n#else\n\t#define D(x...)\n#endif\ntypedef long long ll;\n#define mod 998244353\nll am[62][62][62], ans;\nll numwords[12][62][62];\nint mxchar, n;\nchar inp[20];\nset<vector<int> > words;\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\" %s\", inp);\n\t\tint l = strlen(inp);\n\t\tvector<int> w;\n\t\tfor (int j = 0; j < l; j++)\n\t\t{\n\t\t\tint is = 0;\n\t\t\tif ('a' <= inp[j] && inp[j] <= 'z') is = inp[j]-'a';\n\t\t\telse if ('A' <= inp[j] && inp[j] <= 'Z') is = inp[j]-'A'+26;\n\t\t\telse is = inp[j] - '0'+26+26;\n\t\t\tmxchar = max(mxchar, is);\n\t\t\tw.push_back(is);\n\t\t}\n\t\tif (words.find(w) != words.end()) continue;\n\t\tvector<int> w2 = w;\n\t\treverse(w2.begin(), w2.end());\n\t\twords.insert(w2);\n\t\tnumwords[w.size()][w[0]][w[w.size()-1]]++;\n\t\tif (w2 != w) numwords[w.size()][w[w.size()-1]][w[0]]++;\n\t}\n\tfor (int len = 3; len <= 10; len++)\n\t{\n\t\tfor (int a = 0; a <= mxchar; a++)\n\t\t{\n\t\t\tfor (int b = a; b <= mxchar; b++)\n\t\t\t{\n\t\t\t\tfor (int c = b; c <= mxchar; c++)\n\t\t\t\t{\n\t\t\t\t\tll am2 = 0;\n\t\t\t\t\tfor (int d = 0; d <= mxchar; d++)\n\t\t\t\t\t{\n\t\t\t\t\t\tam2 += (numwords[len][a][d]*numwords[len][b][d]*numwords[len][c][d])%mod;\n\t\t\t\t\t}\n\t\t\t\t\tam[a][b][c] = am2%mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int a = 0; a <= mxchar; a++)\n\t\t{\n\t\t\tfor (int b = a; b <= mxchar; b++)\n\t\t\t{\n\t\t\t\tfor (int c = b; c <= mxchar; c++)\n\t\t\t\t{\n\t\t\t\t\tfor (int d = c; d <= mxchar; d++)\n\t\t\t\t\t{\n\t\t\t\t\t\tll am2 = am[a][b][c];\n\t\t\t\t\t\tam2 *= am[a][b][d];\n\t\t\t\t\t\tam2 %= mod;\n\t\t\t\t\t\tam2 *= am[a][c][d];\n\t\t\t\t\t\tam2 %= mod;\n\t\t\t\t\t\tam2 *= am[b][c][d];\n\t\t\t\t\t\tam2 %= mod;\n\t\t\t\t\t\tif (a != b) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (b != c)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (c != d) am2 *= 24ll;\n\t\t\t\t\t\t\t\telse am2 *= 12ll;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (c != d) am2 *= 12ll;\n\t\t\t\t\t\t\t\telse am2 *= 4ll;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (b != c)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (c != d) am2 *= 12;\n\t\t\t\t\t\t\t\telse am2 *= 6;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (c != d) am2 *= 4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tans += am2%mod;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tans %= mod;\n\tprintf(\"%lld\\n\", ans);\n}\t",
    "ext": "cpp"
  },
  "57825726": {
    "code": "/*input\n2\nFLOW\nWOLF\n*/\n#include <bits/stdc++.h>\n#pragma GCC optimize(\"unroll-loops,no-stack-protector\")\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef pair<ld,ld> pdd;\n#define IOS ios_base::sync_with_stdio(0); cin.tie(0)\n#define ALL(a) a.begin(),a.end()\n#define SZ(a) ((int)a.size())\n#define F first\n#define S second\n#define REP(i,n) for(int i=0;i<((int)n);i++)\n#define pb emplace_back\n#define MP(a,b) make_pair(a,b)\n#define SORT_UNIQUE(c) (sort(c.begin(),c.end()), c.resize(distance(c.begin(),unique(c.begin(),c.end()))))\n#define GET_POS(c,x) (lower_bound(c.begin(),c.end(),x)-c.begin())\n#define EL cout<<'\\n'\ntemplate<typename T1,typename T2>\nostream& operator<<(ostream& out,pair<T1,T2> P){\n    out<<'('<<P.F<<','<<P.S<<')';\n    return out;\n}\ntemplate<typename T>\nostream& operator<<(ostream& out,vector<T> V){\n    REP(i,SZ(V)) out<<V[i]<<((i!=SZ(V)-1)?\" \":\"\");\n    return out;\n}\n#define version 20190726\n//}}}\nconst ll maxn=300005;\nconst ll maxlg=20;\nconst ll INF64=1e18;\nconst int INF=0x3f3f3f3f;\nconst ll MOD=998244353;\nconst ld PI=acos(-1);\nconst ld eps=1e-9;\n//const ll p=880301;\n//const ll P=31;\n \nll mypow(ll a,ll b){\n    ll res=1LL;\n    while(b){\n        if(b&1) res=res*a%MOD;\n        a=a*a%MOD;\n        b>>=1;\n    }\n    return res;\n}\n \nint cnt[12][64][64];\nint idx[256];\n \nvector<string> v[12];\n \nll dp[64][64][64]={0};\nint main(){\n    IOS;\n \n    REP(i,16) idx['a'+i]=i;\n    REP(i,16) idx['A'+i]=16+i;\n    for(int i=16;i<26;i++) idx['a'+i]=32+i-16;\n    for(int i=16;i<26;i++) idx['A'+i]=42+i-16;\n    REP(i,10) idx['0'+i]=52+i;\n \n    int n;\n    cin>>n;\n    REP(i,n){\n        string s;\n        cin>>s;\n        v[SZ(s)].pb(s);\n        reverse(ALL(s));\n        v[SZ(s)].pb(s);\n    }\n    int mx=0;\n    for(int len=3;len<=10;len++){\n        SORT_UNIQUE(v[len]);\n        for(string s:v[len]){\n            cnt[SZ(s)][idx[s[0]]][idx[s.back()]]++;\n            mx=max(mx,idx[s[0]]);\n            mx=max(mx,idx[s.back()]);\n        }\n    }\n    mx++;\n    ll ans=0;\n    for(int len=3;len<=10;len++){\n        REP(i,mx) for(int j=i;j<mx;j++) for(int k=j;k<mx;k++){\n            dp[i][j][k]=0;\n            REP(t,mx){\n                dp[i][j][k]+=cnt[len][i][t]*cnt[len][j][t]%MOD*cnt[len][k][t]%MOD;\n                if(dp[i][j][k]>=MOD) dp[i][j][k]-=MOD;\n            }\n        }\n        REP(i,mx) for(int j=i;j<mx;j++) for(int k=j;k<mx;k++) for(int l=k;l<mx;l++){\n            const ll tmp=dp[i][j][k]*dp[i][j][l]%MOD*dp[i][k][l]%MOD*dp[j][k][l]%MOD;\n            if(i<j&&j<k&&k<l) ans+=tmp*24;\n            else if(i==j&&j<k&&k==l) ans+=tmp*6;\n            else if(i==j&&j==k&&k==l) ans+=tmp;\n            else if(i==j&&j==k) ans+=tmp*4;\n            else if(j==k&&k==l) ans+=tmp*4;\n            else ans+=tmp*12;\n            ans%=MOD;\n        }\n    }   \n    cout<<ans<<'\\n';\n    return 0;\n}",
    "ext": "cpp"
  },
  "57823371": {
    "code": "#pragma GCC optimize(\"Ofast,unroll-loops,no-stack-protector,fast-math\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx2,tune=native\")\n//#pragma comment(linker, \"/stack:200000000\")\n \n#include <bits/stdc++.h>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double ld;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef pair<ld,ld> pdd;\n \n#define X first\n#define Y second\n \n//#include <boost/unordered_map.hpp>\n//using namespace boost;\n \n/*\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> rbtree;\nrbtree T;\n*/\n \nusing i32 = int;\nusing i64 = long long;\nusing u8 = unsigned char;\nusing u32 = unsigned;\nusing u64 = unsigned long long;\nusing f64 = double;\nusing f80 = long double;\n//using i128 = __int128_t;\n//using u128 = __uint128_t;\nusing i128 = i64;\nusing u128 = u64;\n \nll power(ll a, ll b, ll p)\n{\n\tif (!b) return 1;\n\tll t = power(a, b/2, p);\n\tt = t*t%p;\n\tif (b&1) t = t*a%p;\n\treturn t;\n}\n \nll exgcd(ll a, ll b, ll &x, ll &y)\n{\n\tif (b == 0)\n\t{\n\t\tx = 1;\n\t\ty = 0;\n\t\treturn a;\n\t}\n\tll px, py;\n\tll d = exgcd(b, a%b, px, py);\n\tx = py;\n\ty = px-a/b*py;\n\treturn d;\n}\n \ntemplate<class T>\ninline void freshmin(T &a, const T &b)\n{\n\tif (a > b) a = b;\n}\n \ntemplate<class T>\ninline void freshmax(T &a, const T &b)\n{\n\tif (a < b) a = b;\n}\n \n//#define getchar getchar_unlocked\n//#define putchar putchar_unlocked\n \nint inp() {\n\tint x = 0, f = 0; char ch;\n\tfor(ch = getchar(); !isdigit(ch); ch = getchar())\n\t\tif(ch == '-') f = 1;\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn f ? -x : x;\n}\n \nll inp_ll() {\n\tll x = 0; int f = 0; char ch;\n\tfor(ch = getchar(); !isdigit(ch); ch = getchar())\n\t\tif(ch == '-') f = 1;\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn f ? -x : x;\n}\n \ntemplate<class T>\nbool read(T &x)\n{\n\tx = 0;\n\tchar ch = getchar();\n\tif (ch == EOF) return 0;\n\tfor(; !isdigit(ch); )\n\t{\n\t\tch = getchar();\n\t\tif (ch == EOF) return 0;\n\t}\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn 1;\n}\n \ntemplate<class T>\nvoid write(T x)\n{\n\tstatic char s[22];\n\tstatic char *it = s+20;\n\tstatic char *end = s+20;\n\tif (!x)\n\t\t*-- it = '0';\n\twhile (x)\n\t{\n\t\t*-- it = x%10+'0';\n\t\tx /= 10;\n\t}\n\tfor (; it < end; ++ it)\n\t\tputchar(*it);\n}\n \ntemplate<class T>\nvoid writeln(T x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\n \nconst int MAXN = 200010;\nconst int INF = 1000000000;\nconst int MOD = 998244353;\n \nset<string> H[12];\n \nint id(char c)\n{\n\tif (islower(c)) return c-'a';\n\tif (isupper(c)) return c-'A'+26;\n\treturn c-'0'+52;\n}\n \nint w[63][63], F[63][63][63];\n \nint solve(int k)\n{\n\tmemset(w, 0, sizeof(w));\n\tmemset(F, 0, sizeof(F));\n\tint tot = 0;\n\tfor (auto s : H[k])\n\t{\n\t\tint x = id(s[0]), y = id(s[k-1]);\n\t\tw[x][y] ++;\n\t\tfreshmax(tot, max(x, y));\n\t}\n\tfor (int a = 0; a <= tot; ++ a)\n\t\tfor (int b = 0; b <= tot; ++ b)\n\t\t\tfor (int c = 0; c <= tot; ++ c)\n\t\t\t{\n\t\t\t\ti64 tmp = 0;\n\t\t\t\tfor (int d = 0; d <= tot; ++ d)\n\t\t\t\t\ttmp += (i64)w[d][a]*w[d][b]*w[d][c];\n\t\t\t\tF[a][b][c] = tmp%MOD;\n\t\t\t}\n\ti64 ret = 0;\n\tfor (int a = 0; a <= tot; ++ a)\n\t\tfor (int b = 0; b <= tot; ++ b)\n\t\t\tfor (int c = 0; c <= tot; ++ c)\n\t\t\t{\n\t\t\t\ti64 tmp = 0;\n\t\t\t\tfor (int d = 0; d <= tot; ++ d)\n\t\t\t\t\ttmp += (i64)F[a][b][d]*F[a][c][d]%MOD*F[b][c][d];\n\t\t\t\tret += tmp%MOD*F[a][b][c]%MOD;\n\t\t\t}\n\treturn ret%MOD;\n}\n \nint main()\n{\n\t\n\tint T;\n\tscanf(\"%d\", &T);\n\tfor (int i = 1; i <= T; ++ i)\n\t{\n\t\tstatic char s[12];\n\t\tscanf(\"%s\", s);\n\t\tint n = strlen(s);\n\t\tH[n].insert(s);\n\t\treverse(s, s+n);\n\t\tH[n].insert(s);\n\t}\n\tll ans = 0;\n\tfor (int k = 3; k <= 10; ++ k)\n\t\tans += solve(k);\n\tans %= MOD;\n\tcout << ans << endl;\n\t\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57823338": {
    "code": "#pragma GCC optimize(\"Ofast,unroll-loops,no-stack-protector,fast-math\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx2,tune=native\")\n//#pragma comment(linker, \"/stack:200000000\")\n \n#include <bits/stdc++.h>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double ld;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef pair<ld,ld> pdd;\n \n#define X first\n#define Y second\n \n//#include <boost/unordered_map.hpp>\n//using namespace boost;\n \n/*\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> rbtree;\nrbtree T;\n*/\n \nusing i32 = int;\nusing i64 = long long;\nusing u8 = unsigned char;\nusing u32 = unsigned;\nusing u64 = unsigned long long;\nusing f64 = double;\nusing f80 = long double;\n//using i128 = __int128_t;\n//using u128 = __uint128_t;\nusing i128 = i64;\nusing u128 = u64;\n \nll power(ll a, ll b, ll p)\n{\n\tif (!b) return 1;\n\tll t = power(a, b/2, p);\n\tt = t*t%p;\n\tif (b&1) t = t*a%p;\n\treturn t;\n}\n \nll exgcd(ll a, ll b, ll &x, ll &y)\n{\n\tif (b == 0)\n\t{\n\t\tx = 1;\n\t\ty = 0;\n\t\treturn a;\n\t}\n\tll px, py;\n\tll d = exgcd(b, a%b, px, py);\n\tx = py;\n\ty = px-a/b*py;\n\treturn d;\n}\n \ntemplate<class T>\ninline void freshmin(T &a, const T &b)\n{\n\tif (a > b) a = b;\n}\n \ntemplate<class T>\ninline void freshmax(T &a, const T &b)\n{\n\tif (a < b) a = b;\n}\n \n//#define getchar getchar_unlocked\n//#define putchar putchar_unlocked\n \nint inp() {\n\tint x = 0, f = 0; char ch;\n\tfor(ch = getchar(); !isdigit(ch); ch = getchar())\n\t\tif(ch == '-') f = 1;\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn f ? -x : x;\n}\n \nll inp_ll() {\n\tll x = 0; int f = 0; char ch;\n\tfor(ch = getchar(); !isdigit(ch); ch = getchar())\n\t\tif(ch == '-') f = 1;\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn f ? -x : x;\n}\n \ntemplate<class T>\nbool read(T &x)\n{\n\tx = 0;\n\tchar ch = getchar();\n\tif (ch == EOF) return 0;\n\tfor(; !isdigit(ch); )\n\t{\n\t\tch = getchar();\n\t\tif (ch == EOF) return 0;\n\t}\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn 1;\n}\n \ntemplate<class T>\nvoid write(T x)\n{\n\tstatic char s[22];\n\tstatic char *it = s+20;\n\tstatic char *end = s+20;\n\tif (!x)\n\t\t*-- it = '0';\n\twhile (x)\n\t{\n\t\t*-- it = x%10+'0';\n\t\tx /= 10;\n\t}\n\tfor (; it < end; ++ it)\n\t\tputchar(*it);\n}\n \ntemplate<class T>\nvoid writeln(T x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\n \nconst int MAXN = 200010;\nconst int INF = 1000000000;\nconst int MOD = 998244353;\n \nset<string> H[12];\n \nint id(char c)\n{\n\tif (islower(c)) return c-'a';\n\tif (isupper(c)) return c-'A'+26;\n\treturn c-'0'+52;\n}\n \nint w[63][63], F[63][63][63];\n \nint solve(int k)\n{\n\tmemset(w, 0, sizeof(w));\n\tmemset(F, 0, sizeof(F));\n\tint tot = 0;\n\tfor (auto s : H[k])\n\t{\n\t\tint x = id(s[0]), y = id(s[k-1]);\n\t\tw[x][y] ++;\n\t\tfreshmax(tot, max(x, y));\n\t}\n\tfor (int a = 0; a <= tot; ++ a)\n\t\tfor (int b = a; b <= tot; ++ b)\n\t\t\tfor (int c = b; c <= tot; ++ c)\n\t\t\t{\n\t\t\t\ti64 tmp = 0;\n\t\t\t\tfor (int d = 0; d <= tot; ++ d)\n\t\t\t\t\ttmp += (i64)w[d][a]*w[d][b]*w[d][c];\n\t\t\t\tF[a][b][c] = tmp%MOD;\n\t\t\t}\n\ti64 ret = 0;\n\tfor (int a = 0; a <= tot; ++ a)\n\t\tfor (int b = a; b <= tot; ++ b)\n\t\t\tfor (int c = b; c <= tot; ++ c)\n\t\t\t{\n\t\t\t\ti64 tmp = 0;\n\t\t\t\tfor (int d = c; d <= tot; ++ d)\n\t\t\t\t{\n\t\t\t\t\tint num = 0;\n\t\t\t\t\tif (a == b && b == c && c == d)\n\t\t\t\t\t\tnum = 1;\n\t\t\t\t\telse if (a == b && c == d)\n\t\t\t\t\t\tnum = 6;\n\t\t\t\t\telse if (b == c && (a == b || c == d))\n\t\t\t\t\t\tnum = 4;\n\t\t\t\t\telse if (a == b || b == c || c == d)\n\t\t\t\t\t\tnum = 12;\n\t\t\t\t\telse\n\t\t\t\t\t\tnum = 24;\n\t\t\t\t\ttmp += (i64)F[a][b][d]*F[a][c][d]%MOD*F[b][c][d]%MOD*num;\n\t\t\t\t}\n\t\t\t\tret += tmp%MOD*F[a][b][c]%MOD;\n\t\t\t}\n\treturn ret%MOD;\n}\n \nint main()\n{\n\t\n\tint T;\n\tscanf(\"%d\", &T);\n\tfor (int i = 1; i <= T; ++ i)\n\t{\n\t\tstatic char s[12];\n\t\tscanf(\"%s\", s);\n\t\tint n = strlen(s);\n\t\tH[n].insert(s);\n\t\treverse(s, s+n);\n\t\tH[n].insert(s);\n\t}\n\tll ans = 0;\n\tfor (int k = 3; k <= 10; ++ k)\n\t\tans += solve(k);\n\tans %= MOD;\n\tcout << ans << endl;\n\t\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57823290": {
    "code": "#pragma GCC optimize(\"Ofast,unroll-loops,no-stack-protector,fast-math\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n//#pragma comment(linker, \"/stack:200000000\")\n \n#include <bits/stdc++.h>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double ld;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef pair<ld,ld> pdd;\n \n#define X first\n#define Y second\n \n//#include <boost/unordered_map.hpp>\n//using namespace boost;\n \n/*\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> rbtree;\nrbtree T;\n*/\n \nusing i32 = int;\nusing i64 = long long;\nusing u8 = unsigned char;\nusing u32 = unsigned;\nusing u64 = unsigned long long;\nusing f64 = double;\nusing f80 = long double;\n//using i128 = __int128_t;\n//using u128 = __uint128_t;\nusing i128 = i64;\nusing u128 = u64;\n \nll power(ll a, ll b, ll p)\n{\n\tif (!b) return 1;\n\tll t = power(a, b/2, p);\n\tt = t*t%p;\n\tif (b&1) t = t*a%p;\n\treturn t;\n}\n \nll exgcd(ll a, ll b, ll &x, ll &y)\n{\n\tif (b == 0)\n\t{\n\t\tx = 1;\n\t\ty = 0;\n\t\treturn a;\n\t}\n\tll px, py;\n\tll d = exgcd(b, a%b, px, py);\n\tx = py;\n\ty = px-a/b*py;\n\treturn d;\n}\n \ntemplate<class T>\ninline void freshmin(T &a, const T &b)\n{\n\tif (a > b) a = b;\n}\n \ntemplate<class T>\ninline void freshmax(T &a, const T &b)\n{\n\tif (a < b) a = b;\n}\n \n//#define getchar getchar_unlocked\n//#define putchar putchar_unlocked\n \nint inp() {\n\tint x = 0, f = 0; char ch;\n\tfor(ch = getchar(); !isdigit(ch); ch = getchar())\n\t\tif(ch == '-') f = 1;\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn f ? -x : x;\n}\n \nll inp_ll() {\n\tll x = 0; int f = 0; char ch;\n\tfor(ch = getchar(); !isdigit(ch); ch = getchar())\n\t\tif(ch == '-') f = 1;\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn f ? -x : x;\n}\n \ntemplate<class T>\nbool read(T &x)\n{\n\tx = 0;\n\tchar ch = getchar();\n\tif (ch == EOF) return 0;\n\tfor(; !isdigit(ch); )\n\t{\n\t\tch = getchar();\n\t\tif (ch == EOF) return 0;\n\t}\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn 1;\n}\n \ntemplate<class T>\nvoid write(T x)\n{\n\tstatic char s[22];\n\tstatic char *it = s+20;\n\tstatic char *end = s+20;\n\tif (!x)\n\t\t*-- it = '0';\n\twhile (x)\n\t{\n\t\t*-- it = x%10+'0';\n\t\tx /= 10;\n\t}\n\tfor (; it < end; ++ it)\n\t\tputchar(*it);\n}\n \ntemplate<class T>\nvoid writeln(T x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\n \nconst int MAXN = 200010;\nconst int INF = 1000000000;\nconst int MOD = 998244353;\n \nset<string> H[12];\n \nint id(char c)\n{\n\tif (islower(c)) return c-'a';\n\tif (isupper(c)) return c-'A'+26;\n\treturn c-'0'+52;\n}\n \nint w[63][63], F[63][63][63];\n \nint solve(int k)\n{\n\tmemset(w, 0, sizeof(w));\n\tmemset(F, 0, sizeof(F));\n\tint tot = 0;\n\tfor (auto s : H[k])\n\t{\n\t\tint x = id(s[0]), y = id(s[k-1]);\n\t\tw[x][y] ++;\n\t\tfreshmax(tot, max(x, y));\n\t}\n\tfor (int a = 0; a <= tot; ++ a)\n\t\tfor (int b = a; b <= tot; ++ b)\n\t\t\tfor (int c = b; c <= tot; ++ c)\n\t\t\t{\n\t\t\t\ti64 tmp = 0;\n\t\t\t\tfor (int d = 0; d <= tot; ++ d)\n\t\t\t\t\ttmp += (i64)w[d][a]*w[d][b]*w[d][c];\n\t\t\t\tF[a][b][c] = tmp%MOD;\n\t\t\t}\n\ti64 ret = 0;\n\tfor (int a = 0; a <= tot; ++ a)\n\t\tfor (int b = a; b <= tot; ++ b)\n\t\t\tfor (int c = b; c <= tot; ++ c)\n\t\t\t{\n\t\t\t\ti64 tmp = 0;\n\t\t\t\tfor (int d = c; d <= tot; ++ d)\n\t\t\t\t{\n\t\t\t\t\tint num = 0;\n\t\t\t\t\tif (a == b && b == c && c == d)\n\t\t\t\t\t\tnum = 1;\n\t\t\t\t\telse if (a == b && c == d)\n\t\t\t\t\t\tnum = 6;\n\t\t\t\t\telse if (b == c && (a == b || c == d))\n\t\t\t\t\t\tnum = 4;\n\t\t\t\t\telse if (a == b || b == c || c == d)\n\t\t\t\t\t\tnum = 12;\n\t\t\t\t\telse\n\t\t\t\t\t\tnum = 24;\n\t\t\t\t\ttmp += (i64)F[a][b][d]*F[a][c][d]%MOD*F[b][c][d]%MOD*num;\n\t\t\t\t}\n\t\t\t\tret += tmp%MOD*F[a][b][c]%MOD;\n\t\t\t}\n\treturn ret%MOD;\n}\n \nint main()\n{\n\t\n\tint T;\n\tscanf(\"%d\", &T);\n\tfor (int i = 1; i <= T; ++ i)\n\t{\n\t\tstatic char s[12];\n\t\tscanf(\"%s\", s);\n\t\tint n = strlen(s);\n\t\tH[n].insert(s);\n\t\treverse(s, s+n);\n\t\tH[n].insert(s);\n\t}\n\tll ans = 0;\n\tfor (int k = 3; k <= 10; ++ k)\n\t\tans += solve(k);\n\tans %= MOD;\n\tcout << ans << endl;\n\t\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57821670": {
    "code": "#include <algorithm>  \n#include <iostream>  \n#include <sstream>  \n#include <string>  \n#include <vector>  \n#include <queue>  \n#include <set>  \n#include <map>  \n#include <cstdio>  \n#include <cstdlib>  \n#include <cctype>  \n#include <cmath>  \n#include <cstring>\n#include <list>  \n#include <cassert>\n#include <climits>\n#include <bitset>\nusing namespace std;  \n\n#define PB push_back  \n#define MP make_pair  \n#define SZ(v) ((int)(v).size())  \n#define FOR(i,a,b) for(int i=(a);i<(b);++i)  \n#define REP(i,n) FOR(i,0,n)  \n#define FORE(i,a,b) for(int i=(a);i<=(b);++i)  \n#define REPE(i,n) FORE(i,0,n)  \n#define FORSZ(i,a,v) FOR(i,a,SZ(v))  \n#define REPSZ(i,v) REP(i,SZ(v))  \ntypedef long long ll;  \nll gcd(ll a,ll b) { return b==0?a:gcd(b,a%b); }\n\nconst int MAXWORD=100000;\nconst int MOD=998244353;\nconst int MAXLEN=10;\nconst int MAXALPH=26+26+10;\nvoid inc(int &a,int b) { if((a+=b)>=MOD) a-=MOD; }\n\nint nword;\nchar word[MAXWORD][MAXLEN+1];\n\nvector<string> bylen[MAXLEN+1];\nchar alph[4*MAXWORD+1]; int nalph;\n\nint cnt[MAXALPH][MAXALPH];\nint dp[MAXALPH][MAXALPH][MAXALPH];\n\nint calc(int len) {\n\tif(SZ(bylen[len])==0) return 0;\n\t//printf(\"%d:\",len); REPSZ(i,bylen[len]) printf(\" %s\",bylen[len][i].c_str()); puts(\"\");\n\tnalph=0; REPSZ(i,bylen[len]) alph[nalph++]=bylen[len][i][0],alph[nalph++]=bylen[len][i][SZ(bylen[len][i])-1]; sort(alph,alph+nalph); nalph=unique(alph,alph+nalph)-alph; alph[nalph]='\\0'; assert(nalph<=MAXALPH);\n\t//printf(\"alph=%s nalph=%d MAXALPH=%d\\n\",alph,nalph,MAXALPH);\n\tmemset(cnt,0,sizeof(cnt));\n\tREPSZ(i,bylen[len]) {\n\t\tint a=lower_bound(alph,alph+nalph,bylen[len][i][0])-alph,b=lower_bound(alph,alph+nalph,bylen[len][i][SZ(bylen[len][i])-1])-alph;\n\t\t++cnt[a][b];\n\t}\n\tint ret=0;\n\tREP(a,nalph) FOR(b,a,nalph) FOR(c,b,nalph) { dp[a][b][c]=0; REP(i,nalph) dp[a][b][c]=(dp[a][b][c]+(ll)cnt[i][a]*cnt[i][b]*cnt[i][c])%MOD; }\n\tREP(a,nalph) FOR(b,a,nalph) FOR(c,b,nalph) FOR(d,c,nalph) {\n\t\tint cur=(ll)dp[a][b][c]*dp[a][b][d]%MOD*dp[a][c][d]%MOD*dp[b][c][d]%MOD;\n\t\tint ways=a==d?1:a==c||b==d?4:a==b&&c==d?6:a==b||b==c||c==d?12:24;\n\t\tret=(ret+(ll)cur*ways)%MOD;\n\t}\n\treturn ret;\n}\n\nint solve() {\n\tREPE(i,MAXLEN) bylen[i].clear();\n\tREP(i,nword) { string s=word[i]; bylen[SZ(s)].PB(s); reverse(s.begin(),s.end()); bylen[SZ(s)].PB(s); }\n\tREPE(i,MAXLEN) { sort(bylen[i].begin(),bylen[i].end()); bylen[i].erase(unique(bylen[i].begin(),bylen[i].end()),bylen[i].end()); }\n\tint ret=0;\n\tREPE(i,MAXLEN) inc(ret,calc(i));\n\treturn ret;\n}\n\nvoid run() {\n\tscanf(\"%d\",&nword);\n\tREP(i,nword) scanf(\"%s\",word[i]);\n\tprintf(\"%d\\n\",solve());\n}\n\nint main() {\n\trun();\n\treturn 0;\n}\n",
    "ext": "cpp"
  },
  "57818027": {
    "code": "#include <bits/stdc++.h>\n/*#pragma GCC optimize(\"O3\")\n#pragma GCC target(\"avx2\")\n#pragma GCC optimize(\"unroll-loops\")*/\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nconst int MOD = 998244353;\n\nint add(int a, int b){\n    return (a+b)%MOD;\n}\n\nint mul(int a, int b){\n    return ((ll)a * b)%MOD;\n}\n\nint br[11][70][70];\nint dp[70][70][70];\n\nint koji(char c){\n    if('a' <= c && c <= 'z') return c-'a';\n    if('A' <= c && c <= 'Z') return 26 + (c-'A');\n    return 52 + (c-'0');\n}\n\nint perm(int a, int b, int c, int d){\n    if(a == b && b == c && c == d) return 1;\n    if(a == b && b == c) return 4;\n    if(b == c && c == d) return 4;\n    if(a == b && c == d) return 6;\n    if(a == b) return 12;\n    if(b == c) return 12;\n    if(c == d) return 12;\n    return 24;\n}\n\nint main(){\n    ios_base::sync_with_stdio(false);\n\tcout.precision(10);\n\tcout << fixed;\n\n    int n;\n    cin >> n;\n    set <string> q;\n    while(n--){\n        string s;\n        cin >> s;\n        q.insert(s);\n        reverse(s.begin(), s.end());\n        q.insert(s);\n    }\n    for(auto s : q){\n        br[s.size()][koji(s[0])][koji(s[s.size()-1])]++;\n    }\n    int res = 0;\n    for(int sz=3; sz<=10; sz++){\n        for(int i=0; i<62; i++){\n            for(int j=i; j<62; j++){\n                for(int k=j; k<62; k++){\n                    dp[i][j][k] = 0;\n                    for(int l=0; l<62; l++){\n                        dp[i][j][k] = add(dp[i][j][k], mul(br[sz][i][l], mul(br[sz][j][l], br[sz][k][l])));\n                    }\n                }\n            }\n        }\n        for(int i=0; i<62; i++){\n            for(int j=i; j<62; j++){\n                for(int k=j; k<62; k++){\n                    for(int l=k; l<62; l++){\n                        res = add(res, mul(perm(i, j, k, l), mul(dp[i][j][k], mul(dp[i][j][l], mul(dp[i][k][l], dp[j][k][l])))));\n                    }\n                }\n            }\n        }\n    }\n    cout << res;\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57817647": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst LL MOD=998244353; \nint n,w;\nstring s;\nmap<string, bool> MX;\nLL ans,a[11][65][65],dp[65][65][65]; \n \nbool check_p(string s1){\n\tint m=s1.size();\n\tbool fg=false;\n\tfor(int i=0;i<m;i++){\n\t\tif(s1[i]!=s1[m-1-i]) fg=true;\n\t}\n\tif(fg==true) return false;\n\telse return true;\t\t\n}\n \nstring reverse(string s1){\n\tint m=s1.size();\n\tint st=0, ed=m-1;\n\twhile(st<ed){\n\t\tswap(s1[st],s1[ed]);\n\t\tst++,ed--;\n\t}\n\treturn s1;\n}\n \ninline int trans(char c){\n\tif(c>='a'&&c<='z') return c-'a'+1;\n\tif(c>='A'&&c<='Z') return c-'A'+27;\n\tif(c>='0'&&c<='9') return c-'0'+53;\n} \nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>s;\t\t\t\t\n\t\tif(MX[s]==false){\n\t\t\tMX[s]=true;\n\t\t\tMX[reverse(s)]=true;\n\t\n\t\tint m1=s.size();\n\t\tint sx=trans(s[0]), ex=trans(s[m1-1]);\t\t\n\t\tw=max(w,sx);\n\t\tw=max(w,ex);\n\t\tif(check_p(s)==true) a[m1][sx][ex]++;\n\t\telse{\n\t\t\ta[m1][sx][ex]++;\n\t\t\ta[m1][ex][sx]++;\n\t\t}\n\t}\n\telse if (MX[s]==true) continue;\n}\n\tfor(int i=3;i<=10;i++){\n\t\tmemset(dp,0,sizeof(dp));\t\t\n\t\tfor(int a1=1;a1<=w;a1++)\n\t\tfor(int a2=1;a2<=w;a2++)\n\t\tfor(int a3=1;a3<=a2;a3++)\n\t\tfor(int a4=1;a4<=a3;a4++){\t\t\n\t\t\tdp[a2][a3][a4]=(dp[a2][a3][a4]+a[i][a1][a2]*a[i][a1][a3]%MOD*a[i][a1][a4]%MOD)%MOD;\n\t\t}\t\n\t\t\n\t\tfor(int b1=1;b1<=w;b1++)\n\t\tfor(int b2=1;b2<=b1;b2++)\n\t\tfor(int b3=1;b3<=b2;b3++)\n\t\tfor(int b4=1;b4<=b3;b4++){\n\t\t\tLL tmp=dp[b1][b2][b3]*dp[b1][b2][b4]%MOD*dp[b1][b3][b4]%MOD*dp[b2][b3][b4]%MOD;\n\t\t\tint c1=b1-b2, c2=b2-b3,c3=b3-b4, c=0;\n\t\t\tif(c1) c++;\n\t\t\tif(c2) c++;\n\t\t\tif(c3) c++;\n\t\t\tif(c==3) tmp=(24*tmp)%MOD;\n\t\t\telse if(c==2) tmp=(12*tmp)%MOD;\n\t\t\telse if(c==1&&c2>0) tmp=(6*tmp)%MOD;\n\t\t\telse if(c==1&&c2==0) tmp=(4*tmp)%MOD;\t\t\t\n\t\t\tans=(ans+tmp)%MOD;\n\t\t}\n}\n\tcout<<ans<<endl;\n\treturn 0;\t\t\t\n}\n\n",
    "ext": "cpp"
  },
  "57816638": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\n\nint A[11][70][70];\nconst int Q = 62;\nconst int MOD = 998244353;\n\nint cyph(char x){\n\tif( x >= 'a' && x <= 'z') return x - 'a';\n\tif( x >= 'A' && x <= 'Z') return x - 'A' + 26;\n\tif( x >= '0' && x <= '9') return x - '0' + 52;\n}\n\nint C[4];\nint R[11][Q][Q][Q];\n\nint push( ){\n\tfor(int i = 2;i>=0;i--){\n\t\tif( C[i] + 1 < Q){\n\t\t\tC[i]++;\n\t\t\tfor(int j=i+1;j<3;j++){\n\t\t\t\tC[j] = C[i];\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint push2( ){\n\tfor(int i = 3;i>=0;i--){\n\t\tif( C[i] + 1 < Q){\n\t\t\tC[i]++;\n\t\t\tfor(int j=i+1;j<4;j++){\n\t\t\t\tC[j] = C[i];\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint F[5] = {1,1,2,6,24};\n\nset <string> Z[11][Q][Q];\n\nint main(){\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tint n;\n\tcin >> n;\n\tfor(int i = 0;i<n;i++){\n\t\tstring s;\n\t\tcin >> s;\n\t\tint l = s.size();\n\t\tint a = cyph(s[0]);\n\t\tint b = cyph(s[l-1]);\n\t\tZ[l][a][b].insert(s);\n\t\treverse(s.begin(),s.end());\n\t\tZ[l][b][a].insert(s);\n\t}\n\tfor(int l=3;l<=10;l++){\n\t\tfor(int a = 0;a<Q;a++){\n\t\t\tfor(int b=0;b<Q;b++){\n\t\t\t\tA[l][a][b] = Z[l][a][b].size(); \n\t\t\t}\n\t\t}\n\t}\n\tint cont = 0;\n\twhile( cont == 0 || push() ){\n\t\tcont = 1;\n\t\tfor(int l = 3;l<=10;l++){\n\t\t\tfor(int i = 0;i<Q;i++){\n\t\t\t\tll sumand = 1;\n\t\t\t\tfor(int j = 0;j<3;j++){\n\t\t\t\t\tsumand = (sumand*A[l][i][C[j]])%MOD;\n\t\t\t\t}\n\t\t\t\tR[l][C[0]][C[1]][C[2]] = (R[l][C[0]][C[1]][C[2]] + sumand)%MOD;\n\t\t\t}\n\t\t}\n\t}\n\tfill(C,C+4,0);\n\tcont = 0;\n\tll res = 0;\n\twhile( cont == 0 || push2() ){\n\t\tcont = 1;\n\t\tint multiplier = F[4];\n\t\tint q = 1;\n\t\tfor(int i=1;i<4;i++){\n\t\t\tif( C[i] == C[i-1]) q++;\n\t\t\telse{\n\t\t\t\tmultiplier /= F[q];\n\t\t\t\tq = 1;\n\t\t\t}\n\t\t}\n\t\tmultiplier/= F[q];\n\t\tfor(int l = 3;l<=10;l++){\n\t\t\tll sum = multiplier;\n\t\t\tsum = (sum * R[l][C[1]][C[2]][C[3]])%MOD;\n\t\t\tsum = (sum * R[l][C[0]][C[2]][C[3]])%MOD;\n\t\t\tsum = (sum * R[l][C[0]][C[1]][C[3]])%MOD;\n\t\t\tsum = (sum * R[l][C[0]][C[1]][C[2]])%MOD;\n\t\t\tres = (res + sum)%MOD;\n\t\t}\n\t}\n\tcout << res << \"\\n\";\n}\n",
    "ext": "cpp"
  },
  "57808533": {
    "code": "#ifdef _LOCAL\n//#include \"debug.h\"\n#else\n//#pragma GCC optimize(\"unroll-loops\")\n//#pragma GCC optimize(\"-O3\")\n//#pragma GCC optimize(\"Ofast\")\n#endif\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/rope>\n#define sz(x) int(x.size())\n#define all(x) x.begin(),x.end()\n#define pii pair<int,int>\n#define PB push_back\n#define MP make_pair\n#define pll pair<ll,ll>\n#define F first\n#define S second\nusing namespace std;\nusing namespace __gnu_cxx;\nusing namespace __gnu_pbds;\ntypedef long long ll;\ntypedef long double ld;\ntemplate<class T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\nconst int N = 100;\nconst int K = 10100;\nconst int oo = 2e9;\nconst ll OO = 1e18;\nconst int PW = 16;\nconst int md = 998244353;\nint kol[N][N][N],ans=0,n,f[N][N][N];\nunordered_set<string> st;\nstring s,t,p=\"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM0123456789\";\n\nint sum(int x,int y) { return (x+y)%md; }\nint mult(int x,int y) { return (1ll*x*y)%md; }\n\nint main() {\n#ifndef _LOCAL\n//    freopen(\"cardgame.in\",\"r\",stdin); freopen(\"cardgame.out\",\"w\",stdout); FULL\n\tios_base::sync_with_stdio(0); cin.tie(0);\n#else\n\tfreopen(\"input.txt\",\"r\",stdin);\n#endif\n    cin>>n; st.clear();\n    for (int i=0;i<n;i++){\n        cin>>s; t=s; reverse(t.begin(),t.end());\n        if (t<s) swap(s,t);\n        if (st.find(s)!=st.end()) continue;\n        st.insert(s);\n        int p1=p.find(s[0]),p2=p.find(s.back());\n        kol[sz(s)][p1][p2]++;\n        if (s!=t) kol[sz(s)][p2][p1]++;\n    }\n    for (int len=3;len<11;len++){\n        for (int i1=0;i1<sz(p);i1++)\n        for (int i2=0;i2<sz(p);i2++)\n        for (int i3=0;i3<sz(p);i3++)\n            f[i1][i2][i3]=0;\n        for (int i0=0;i0<sz(p);i0++)\n        for (int i1=0;i1<sz(p);i1++)\n        for (int i2=i1;i2<sz(p);i2++)\n        for (int i3=i2;i3<sz(p);i3++)\n            f[i1][i2][i3]=sum(f[i1][i2][i3],mult(mult(kol[len][i0][i1],kol[len][i0][i2]),kol[len][i0][i3]));\n        for (int i0=0;i0<sz(p);i0++)\n        for (int i1=i0;i1<sz(p);i1++)\n        for (int i2=i1;i2<sz(p);i2++)\n        for (int i3=i2;i3<sz(p);i3++){\n            int res=mult(mult(f[i0][i1][i2],f[i0][i1][i3]),mult(f[i0][i2][i3],f[i1][i2][i3]));\n            int eq=bool(i0==i1)+bool(i1==i2)+bool(i2==i3);\n            if (eq==0) res=mult(res,24);\n            if (eq==1) res=mult(res,12);\n            if (eq==2){\n                if (i0==i1 && i2==i3)\n                    res=mult(res,6);\n                else res=mult(res,4);\n            }\n            ans=sum(ans,res);\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57808390": {
    "code": "#ifdef _LOCAL\n//#include \"debug.h\"\n#else\n//#pragma GCC optimize(\"unroll-loops\")\n//#pragma GCC optimize(\"-O3\")\n//#pragma GCC optimize(\"Ofast\")\n#endif\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/rope>\n#define sz(x) int(x.size())\n#define all(x) x.begin(),x.end()\n#define pii pair<int,int>\n#define PB push_back\n#define MP make_pair\n#define pll pair<ll,ll>\n#define F first\n#define S second\nusing namespace std;\nusing namespace __gnu_cxx;\nusing namespace __gnu_pbds;\ntypedef long long ll;\ntypedef long double ld;\ntemplate<class T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\nconst int N = 100;\nconst int K = 10100;\nconst int oo = 2e9;\nconst ll OO = 1e18;\nconst int PW = 16;\nconst int md = 998244353;\nint kol[N][N][N],ans=0,n,f[N][N][N];\nunordered_set<string> st;\nstring s,t,p=\"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM0123456789\";\n\nint sum(int x,int y) { return (x+y)%md; }\nint mult(int x,int y) { return (1ll*x*y)%md; }\n\nint main() {\n#ifndef _LOCAL\n//    freopen(\"cardgame.in\",\"r\",stdin); freopen(\"cardgame.out\",\"w\",stdout);\n\tios_base::sync_with_stdio(0); cin.tie(0);\n#else\n\tfreopen(\"input.txt\",\"r\",stdin);\n#endif\n    cin>>n; st.clear();\n    for (int i=0;i<n;i++){\n        cin>>s; t=s; reverse(t.begin(),t.end());\n        if (t<s) swap(s,t);\n        if (st.find(s)!=st.end()) continue;\n        st.insert(s);\n        int p1=p.find(s[0]),p2=p.find(s.back());\n        kol[sz(s)][p1][p2]++;\n        if (s!=t) kol[sz(s)][p2][p1]++;\n    }\n    for (int len=3;len<11;len++){\n        for (int i1=0;i1<sz(p);i1++)\n        for (int i2=0;i2<sz(p);i2++)\n        for (int i3=0;i3<sz(p);i3++)\n            f[i1][i2][i3]=0;\n        for (int i0=0;i0<sz(p);i0++)\n        for (int i1=0;i1<sz(p);i1++)\n        for (int i2=i1;i2<sz(p);i2++)\n        for (int i3=i2;i3<sz(p);i3++)\n            f[i1][i2][i3]=sum(f[i1][i2][i3],mult(mult(kol[len][i0][i1],kol[len][i0][i2]),kol[len][i0][i3]));\n        for (int i0=0;i0<sz(p);i0++)\n        for (int i1=i0;i1<sz(p);i1++)\n        for (int i2=i1;i2<sz(p);i2++)\n        for (int i3=i2;i3<sz(p);i3++){\n            int res=mult(mult(f[i0][i1][i2],f[i0][i1][i3]),mult(f[i0][i2][i3],f[i1][i2][i3]));\n            int eq=bool(i0==i1)+bool(i1==i2)+bool(i2==i3);\n            if (eq==0) res=mult(res,24);\n            if (eq==1) res=mult(res,12);\n            if (eq==2){\n                if (i0==i1 && i2==i3)\n                    res=mult(res,6);\n                else res=mult(res,4);\n            }\n            ans=sum(ans,res);\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57807715": {
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <set>\n\nusing namespace std;\n\nset<string> w[11];\n\nconst int MOD = 998244353;\n\nconst int sigma = 2 * 26 + 10;\nint L[sigma][sigma];\nint T[sigma][sigma][sigma];\n\nint ch_to_ix(char ch) {\n    if (ch >= 'a' && ch <= 'z') return ch - 'a';\n    else if (ch >= 'A' && ch <= 'Z') return ch - 'A' + 26;\n    else return ch - '0' + 52;\n}\n\nint coef[2][2][2] = {\n{\n  {24, 12},\n  {12, 4}\n},\n{\n  {12, 6},\n  {4, 1}\n}\n};\n\nint main() {\n//    freopen(\"input.txt\", \"r\", stdin);\n\n    int n;\n    cin >> n;\n\n    for (int i = 0; i < n; i++) {\n        string s;\n        cin >> s;\n        w[s.size()].insert(s);\n        for (int j = 0; j * 2 < s.size(); j++)\n            swap(s[j], s[s.size() - j - 1]);\n        w[s.size()].insert(s);\n    }\n\n    long long ans = 0;\n    for (int q = 2; q <= 10; q++) {\n        if (!w[q].size())\n            continue;\n\n        memset(L, 0, sizeof(L));\n        for (string s : w[q])\n            L[ch_to_ix(s[0])][ch_to_ix(s.back())]++;\n\n        for (int a = 0; a < sigma; a++)\n            for (int b = a; b < sigma; b++)\n                for (int c = b; c < sigma; c++) {\n                    long long r = 0;\n                    for (int x = 0; x < sigma; x++)\n                        r += 1LL * L[a][x] * L[b][x] * L[c][x];\n                    T[a][b][c] = T[a][c][b] = T[b][a][c] = T[b][c][a] = T[c][a][b] = T[c][b][a] = r % MOD;\n                }\n\n        for (int a = 0; a < sigma; a++)\n            for (int b = a; b < sigma; b++)\n                for (int c = b; c < sigma; c++)\n                    for (int d = c; d < sigma; d++)\n                        ans += 1LL * T[a][b][c] * T[a][b][d] % MOD * T[a][c][d] % MOD * T[b][c][d] % MOD * coef[a==b][b==c][c==d];\n\n        ans %= MOD;\n    }\n\n    cout << ans;\n\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57807526": {
    "code": "#pragma GCC optimize(\"Ofast,unroll-loops,no-stack-protector,fast-math\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//#pragma comment(linker, \"/stack:200000000\")\n \n#include <bits/stdc++.h>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double ld;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef pair<ld,ld> pdd;\n \n#define X first\n#define Y second\n \n//#include <boost/unordered_map.hpp>\n//using namespace boost;\n \n/*\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> rbtree;\nrbtree T;\n*/\n \nusing i32 = int;\nusing i64 = long long;\nusing u8 = unsigned char;\nusing u32 = unsigned;\nusing u64 = unsigned long long;\nusing f64 = double;\nusing f80 = long double;\n//using i128 = __int128_t;\n//using u128 = __uint128_t;\nusing i128 = i64;\nusing u128 = u64;\n \nll power(ll a, ll b, ll p)\n{\n\tif (!b) return 1;\n\tll t = power(a, b/2, p);\n\tt = t*t%p;\n\tif (b&1) t = t*a%p;\n\treturn t;\n}\n \nll exgcd(ll a, ll b, ll &x, ll &y)\n{\n\tif (b == 0)\n\t{\n\t\tx = 1;\n\t\ty = 0;\n\t\treturn a;\n\t}\n\tll px, py;\n\tll d = exgcd(b, a%b, px, py);\n\tx = py;\n\ty = px-a/b*py;\n\treturn d;\n}\n \ntemplate<class T>\ninline void freshmin(T &a, const T &b)\n{\n\tif (a > b) a = b;\n}\n \ntemplate<class T>\ninline void freshmax(T &a, const T &b)\n{\n\tif (a < b) a = b;\n}\n \n//#define getchar getchar_unlocked\n//#define putchar putchar_unlocked\n \nint inp() {\n\tint x = 0, f = 0; char ch;\n\tfor(ch = getchar(); !isdigit(ch); ch = getchar())\n\t\tif(ch == '-') f = 1;\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn f ? -x : x;\n}\n \nll inp_ll() {\n\tll x = 0; int f = 0; char ch;\n\tfor(ch = getchar(); !isdigit(ch); ch = getchar())\n\t\tif(ch == '-') f = 1;\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn f ? -x : x;\n}\n \ntemplate<class T>\nbool read(T &x)\n{\n\tx = 0;\n\tchar ch = getchar();\n\tif (ch == EOF) return 0;\n\tfor(; !isdigit(ch); )\n\t{\n\t\tch = getchar();\n\t\tif (ch == EOF) return 0;\n\t}\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn 1;\n}\n \ntemplate<class T>\nvoid write(T x)\n{\n\tstatic char s[22];\n\tstatic char *it = s+20;\n\tstatic char *end = s+20;\n\tif (!x)\n\t\t*-- it = '0';\n\twhile (x)\n\t{\n\t\t*-- it = x%10+'0';\n\t\tx /= 10;\n\t}\n\tfor (; it < end; ++ it)\n\t\tputchar(*it);\n}\n \ntemplate<class T>\nvoid writeln(T x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\n \nconst int MAXN = 200010;\nconst int INF = 1000000000;\nconst int MOD = 998244353;\n \nset<string> H[12];\n \nint id(char c)\n{\n\tif (islower(c)) return c-'a';\n\tif (isupper(c)) return c-'A'+26;\n\treturn c-'0'+52;\n}\n \nint w[63][63], F[63][63][63];\n \nint solve(int k)\n{\n\tmemset(w, 0, sizeof(w));\n\tmemset(F, 0, sizeof(F));\n\tint tot = 0;\n\tfor (auto s : H[k])\n\t{\n\t\tint x = id(s[0]), y = id(s[k-1]);\n\t\tw[x][y] ++;\n\t\tfreshmax(tot, max(x, y));\n\t}\n\tfor (int a = 0; a <= tot; ++ a)\n\t\tfor (int b = a; b <= tot; ++ b)\n\t\t\tfor (int c = b; c <= tot; ++ c)\n\t\t\t{\n\t\t\t\ti64 tmp = 0;\n\t\t\t\tfor (int d = 0; d <= tot; ++ d)\n\t\t\t\t\ttmp += (i64)w[d][a]*w[d][b]*w[d][c];\n\t\t\t\tF[a][b][c] = tmp%MOD;\n\t\t\t}\n\ti64 ret = 0;\n\tfor (int a = 0; a <= tot; ++ a)\n\t\tfor (int b = a; b <= tot; ++ b)\n\t\t\tfor (int c = b; c <= tot; ++ c)\n\t\t\t{\n\t\t\t\ti64 tmp = 0;\n\t\t\t\tfor (int d = c; d <= tot; ++ d)\n\t\t\t\t{\n\t\t\t\t\tint num = 0;\n\t\t\t\t\tif (a == b && b == c && c == d)\n\t\t\t\t\t\tnum = 1;\n\t\t\t\t\telse if (a == b && c == d)\n\t\t\t\t\t\tnum = 6;\n\t\t\t\t\telse if (b == c && (a == b || c == d))\n\t\t\t\t\t\tnum = 4;\n\t\t\t\t\telse if (a == b || b == c || c == d)\n\t\t\t\t\t\tnum = 12;\n\t\t\t\t\telse\n\t\t\t\t\t\tnum = 24;\n\t\t\t\t\ttmp += (i64)F[a][b][d]*F[a][c][d]%MOD*F[b][c][d]%MOD*num;\n\t\t\t\t}\n\t\t\t\tret += tmp%MOD*F[a][b][c]%MOD;\n\t\t\t}\n\treturn ret%MOD;\n}\n \nint main()\n{\n\t\n\tint T;\n\tscanf(\"%d\", &T);\n\tfor (int i = 1; i <= T; ++ i)\n\t{\n\t\tstatic char s[12];\n\t\tscanf(\"%s\", s);\n\t\tint n = strlen(s);\n\t\tH[n].insert(s);\n\t\treverse(s, s+n);\n\t\tH[n].insert(s);\n\t}\n\tll ans = 0;\n\tfor (int k = 3; k <= 10; ++ k)\n\t\tans += solve(k);\n\tans %= MOD;\n\tcout << ans << endl;\n\t\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57807149": {
    "code": "#pragma GCC optimize(\"Ofast,unroll-loops,no-stack-protector,fast-math\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//#pragma comment(linker, \"/stack:200000000\")\n \n#include <bits/stdc++.h>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double ld;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef pair<ld,ld> pdd;\n \n#define X first\n#define Y second\n \n//#include <boost/unordered_map.hpp>\n//using namespace boost;\n \n/*\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> rbtree;\nrbtree T;\n*/\n \nusing i32 = int;\nusing i64 = long long;\nusing u8 = unsigned char;\nusing u32 = unsigned;\nusing u64 = unsigned long long;\nusing f64 = double;\nusing f80 = long double;\n//using i128 = __int128_t;\n//using u128 = __uint128_t;\nusing i128 = i64;\nusing u128 = u64;\n \nll power(ll a, ll b, ll p)\n{\n\tif (!b) return 1;\n\tll t = power(a, b/2, p);\n\tt = t*t%p;\n\tif (b&1) t = t*a%p;\n\treturn t;\n}\n \nll exgcd(ll a, ll b, ll &x, ll &y)\n{\n\tif (b == 0)\n\t{\n\t\tx = 1;\n\t\ty = 0;\n\t\treturn a;\n\t}\n\tll px, py;\n\tll d = exgcd(b, a%b, px, py);\n\tx = py;\n\ty = px-a/b*py;\n\treturn d;\n}\n \ntemplate<class T>\ninline void freshmin(T &a, const T &b)\n{\n\tif (a > b) a = b;\n}\n \ntemplate<class T>\ninline void freshmax(T &a, const T &b)\n{\n\tif (a < b) a = b;\n}\n \n//#define getchar getchar_unlocked\n//#define putchar putchar_unlocked\n \nint inp() {\n\tint x = 0, f = 0; char ch;\n\tfor(ch = getchar(); !isdigit(ch); ch = getchar())\n\t\tif(ch == '-') f = 1;\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn f ? -x : x;\n}\n \nll inp_ll() {\n\tll x = 0; int f = 0; char ch;\n\tfor(ch = getchar(); !isdigit(ch); ch = getchar())\n\t\tif(ch == '-') f = 1;\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn f ? -x : x;\n}\n \ntemplate<class T>\nbool read(T &x)\n{\n\tx = 0;\n\tchar ch = getchar();\n\tif (ch == EOF) return 0;\n\tfor(; !isdigit(ch); )\n\t{\n\t\tch = getchar();\n\t\tif (ch == EOF) return 0;\n\t}\n\tfor(; isdigit(ch); x = x * 10 + ch - '0', ch = getchar());\n\treturn 1;\n}\n \ntemplate<class T>\nvoid write(T x)\n{\n\tstatic char s[22];\n\tstatic char *it = s+20;\n\tstatic char *end = s+20;\n\tif (!x)\n\t\t*-- it = '0';\n\twhile (x)\n\t{\n\t\t*-- it = x%10+'0';\n\t\tx /= 10;\n\t}\n\tfor (; it < end; ++ it)\n\t\tputchar(*it);\n}\n \ntemplate<class T>\nvoid writeln(T x)\n{\n\twrite(x);\n\tputchar('\\n');\n}\n \nconst int MAXN = 200010;\nconst int INF = 1000000000;\nconst int MOD = 998244353;\n \nset<string> H[12];\n \nint id(char c)\n{\n\tif (islower(c)) return c-'a';\n\tif (isupper(c)) return c-'A'+26;\n\treturn c-'0'+52;\n}\n \nint w[63][63], F[63][63][63];\n \nint solve(int k)\n{\n\tmemset(w, 0, sizeof(w));\n\tmemset(F, 0, sizeof(F));\n\tint tot = 0;\n\tfor (auto s : H[k])\n\t{\n\t\tint x = id(s[0]), y = id(s[k-1]);\n\t\tw[x][y] ++;\n\t\tfreshmax(tot, max(x, y));\n\t}\n\tfor (int a = 0; a <= tot; ++ a)\n\t\tfor (int b = 0; b <= tot; ++ b)\n\t\t\tfor (int c = 0; c <= tot; ++ c)\n\t\t\t{\n\t\t\t\ti64 tmp = 0;\n\t\t\t\tfor (int d = 0; d <= tot; ++ d)\n\t\t\t\t\ttmp += (i64)w[d][a]*w[d][b]*w[d][c];\n\t\t\t\tF[a][b][c] = tmp%MOD;\n\t\t\t}\n\ti64 ret = 0;\n\tfor (int a = 0; a <= tot; ++ a)\n\t\tfor (int b = 0; b <= tot; ++ b)\n\t\t\tfor (int c = 0; c <= tot; ++ c)\n\t\t\t{\n\t\t\t\ti64 tmp = 0;\n\t\t\t\tfor (int d = 0; d <= tot; ++ d)\n\t\t\t\t\ttmp += (i64)F[a][b][d]*F[a][c][d]%MOD*F[b][c][d];\n\t\t\t\tret += tmp%MOD*F[a][b][c]%MOD;\n\t\t\t}\n\treturn ret%MOD;\n}\n \nint main()\n{\n\t\n\tint T;\n\tscanf(\"%d\", &T);\n\tfor (int i = 1; i <= T; ++ i)\n\t{\n\t\tstatic char s[12];\n\t\tscanf(\"%s\", s);\n\t\tint n = strlen(s);\n\t\tH[n].insert(s);\n\t\treverse(s, s+n);\n\t\tH[n].insert(s);\n\t}\n\tll ans = 0;\n\tfor (int k = 3; k <= 10; ++ k)\n\t\tans += solve(k);\n\tans %= MOD;\n\tcout << ans << endl;\n\t\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57806805": {
    "code": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\", \"unroll-loops\", \"fast-math\")\n#define fi first\n#define se second\n#define pb push_back\n#define eb emplace_back\nusing namespace std;\ntypedef long long LL;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef pair<char,char> pch;\n \nconst int mxsz = 1e5 + 5;\nint n;\nstring ALL[mxsz];\nmap<pch, int> mp[15];\nmap<char, int> idx;\n \ninline void read(){\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++){\n\t\tcin >> ALL[i];\n\t\tstring t = ALL[i]; reverse(t.begin(), t.end());\n\t\tif (t < ALL[i]) ALL[i] = t;\n\t}\n\tsort(ALL+1, ALL+n+1);\n\tn = unique(ALL+1, ALL+n+1) - (ALL + 1);\n\tfor (int i = 1; i <= n; i++){\n\t\tint t = ALL[i].size();\n\t\tbool pal = 1;\n\t\tfor (int j = 0; j < t; j++){\n\t\t\tpal &= (ALL[i][j] == ALL[i][t-j-1]);\n\t\t}\n\t\tchar c = ALL[i][0], d = ALL[i][t-1];\n\t\tif (pal) mp[t][make_pair(c,d)]++;\n\t\telse {\n\t\t\tmp[t][make_pair(c,d)]++;\n\t\t\tmp[t][make_pair(d,c)]++;\n\t\t}\n\t}\n\tint cntr = 0;\n\tfor (char i = 'a'; i <= 'z'; i++) idx[i] = ++cntr;\n\tfor (char i = 'A'; i <= 'Z'; i++) idx[i] = ++cntr;\n\tfor (char i = '0'; i <= '9'; i++) idx[i] = ++cntr;\n}\n \nconst int MXC = 62;\nconst LL mod = 998244353;\nint c[65][65];\nLL w[65][65][65]; // ways for 3-set\n \ninline LL solve(int t){\n\tmemset(c, 0, sizeof(c));\n\tmemset(w, 0, sizeof(w));\n\tfor (pair<pch, int> P : mp[t]){\n\t\tint x = idx[P.fi.fi], y = idx[P.fi.se];\n\t\tc[x][y] += P.se;\n\t}\n\tfor (int i = 1; i <= MXC; i++){\n\t\tfor (int j = i; j <= MXC; j++){\n\t\t\tfor (int k = j; k <= MXC; k++){\n\t\t\t\tfor (int x = 1; x <= MXC; x++){\n\t\t\t\t\tw[i][j][k] += ((1LL * c[i][x] * c[j][x] % mod) * c[k][x] % mod);\n\t\t\t\t\tw[i][j][k] %= mod;\n\t\t\t\t}\n\t\t\t\tw[i][k][j] = w[j][i][k] = w[j][k][i] = w[k][i][j] = w[k][j][i] = w[i][j][k];\n\t\t\t}\n\t\t}\n\t}\n\tLL tot = 0;\n\tfor (int i = 1; i <= MXC; i++) for (int j = i; j <= MXC; j++){\n\t\tfor (int k = j; k <= MXC; k++) for (int l = k; l <= MXC; l++){\n\t\t\tLL tmp = w[i][j][k] * w[j][k][l] % mod;\n\t\t\tLL tmp2 = w[k][l][i] * w[l][i][j] % mod;\n\t\t\tLL now = (tmp * tmp2) % mod;\n\t\t\tLL mult = 1;\n\t\t\tif (i == k && k < l) mult = 4; // 3 1\n\t\t\telse if (i < j && j == l) mult = 4; // 1 3\n\t\t\telse if (i < j && j < k && k == l) mult = 12; // 1 1 2\n\t\t\telse if (i < j && j == k && k < l) mult = 12; // 1 2 1\n\t\t\telse if (i == j && j < k && k < l) mult = 12; // 2 1 1\n\t\t\telse if (i == j && j < k && k == l) mult = 6; // 2 2\n\t\t\telse if (i < j && j < k && k < l) mult = 24;\n\t\t\t(tot += (now * mult % mod)) %= mod;\n\t\t\tif (tot >= mod) tot -= mod;\n\t\t}\n\t}\n\treturn tot;\n}\nint main(){\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tread();\n\tLL ans = 0;\n\tfor (int i = 3; i <= 10; i++){\n\t\tif (mp[i].size())\n\t\t\t(ans += solve(i)) %= mod;\n\t}\n\tcout << ans << '\\n';\n\treturn 0;\n}\n",
    "ext": "cpp"
  },
  "57806516": {
    "code": "#include <bits/stdc++.h>\n//#pragma GCC optimize(\"O3\", \"unroll-loops\", \"fast-math\")\n#define fi first\n#define se second\n#define pb push_back\n#define eb emplace_back\nusing namespace std;\ntypedef long long LL;\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef pair<char,char> pch;\n \nconst int mxsz = 1e5 + 5;\nint n;\nstring ALL[mxsz];\nmap<pch, int> mp[15];\nmap<char, int> idx;\n \ninline void read(){\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++){\n\t\tcin >> ALL[i];\n\t\tstring t = ALL[i]; reverse(t.begin(), t.end());\n\t\tif (t < ALL[i])\n\t\t\tALL[i] = t;\n\t}\n\tsort(ALL+1, ALL+n+1);\n\tn = unique(ALL+1, ALL+n+1) - (ALL + 1);\n//\tcout << n << '\\n';\n\tfor (int i = 1; i <= n; i++){\n\t\tint t = ALL[i].size();\n//\t\tif (ALL[i] == ALL[i-1]) continue;\n\t\tbool pal = 1;\n\t\tfor (int j = 0; j < t; j++){\n\t\t\tpal &= (ALL[i][j] == ALL[i][t-j-1]);\n\t\t}\n\t\tchar c = ALL[i][0], d = ALL[i][t-1];\n\t\tif (pal){\n\t\t\tmp[t][make_pair(c,d)]++;\n\t\t} else {\n\t\t\tmp[t][make_pair(c,d)]++;\n\t\t\tmp[t][make_pair(d,c)]++;\n\t\t}\n\t}\n\tint cntr = 0;\n\tfor (char i = 'a'; i <= 'z'; i++) idx[i] = ++cntr;\n\tfor (char i = 'A'; i <= 'Z'; i++) idx[i] = ++cntr;\n\tfor (char i = '0'; i <= '9'; i++) idx[i] = ++cntr;\n//\tcout << cntr << '\\n';\n}\n \nconst int MXC = 62;\nconst LL mod = 998244353;\nint c[65][65];\nLL w[65][65][65]; // ways for 3-set\n \ninline LL solve(int t){\n\tmemset(c, 0, sizeof(c));\n\tmemset(w, 0, sizeof(w));\n\tfor (pair<pch, int> P : mp[t]){\n\t\tint x = idx[P.fi.fi], y = idx[P.fi.se];\n//\t\tcout << x << ' ' << y << ' ' << P.se << '\\n';\n\t\tc[x][y] += P.se;\n\t}\n//\tfor (int i = 1; i <= MXC; i++)\n//\t\tfor (int j = 1; j <= MXC; j++)\n//\t\t\tif (c[i][j]) cout << c[i][j] << \" \\n\"[j==MXC];\n//\t\t\telse cout << ' ' << \" \\n\"[j==MXC];\n\tfor (int i = 1; i <= MXC; i++){\n\t\tfor (int j = i; j <= MXC; j++){\n\t\t\tfor (int k = j; k <= MXC; k++){\n\t\t\t\tfor (int x = 1; x <= MXC; x++){\n\t\t\t\t\tw[i][j][k] += ((1LL * c[i][x] * c[j][x] % mod) * c[k][x] % mod);\n\t\t\t\t\tw[i][j][k] %= mod;\n\t\t\t\t}\n\t\t\t\tw[i][k][j] = w[j][i][k] = w[j][k][i] = w[k][i][j] = w[k][j][i] = w[i][j][k];\n\t\t\t}\n\t\t}\n\t}\n\tLL tot = 0;\n//\tint CNTCNT = 0;\n//\tmap<vi, int> MAP;\n\tfor (int i = 1; i <= MXC; i++) for (int j = i; j <= MXC; j++){\n\t\tfor (int k = j; k <= MXC; k++) for (int l = k; l <= MXC; l++){\n//\tfor (int i = 1; i <= MXC; i++) for (int j = 1; j <= MXC; j++){\n//\t\tfor (int k = 1; k <= MXC; k++) for (int l = 1; l <= MXC; l++){\n\t\t\tLL tmp = w[i][j][k] * w[j][k][l] % mod;\n\t\t\tLL tmp2 = w[k][l][i] * w[l][i][j] % mod;\n\t\t\tLL now = (tmp * tmp2) % mod;\n\t\t\tLL mult = 1;\n\t\t\tif (i == k && k < l) mult = 4; // 3 1\n\t\t\telse if (i < j && j == l) mult = 4; // 1 3\n\t\t\telse if (i < j && j < k && k == l) mult = 12; // 1 1 2\n\t\t\telse if (i < j && j == k && k < l) mult = 12; // 1 2 1\n\t\t\telse if (i == j && j < k && k < l) mult = 12; // 2 1 1\n\t\t\telse if (i == j && j < k && k == l) mult = 6; // 2 2\n\t\t\telse if (i < j && j < k && k < l) mult = 24;\n//\t\t\tif (tmp > 0 && tmp2 > 0){\n//\t\t\t\tcout << i << ' ' << j << ' ' << k << ' ' << l << ' ';\n//\t\t\t\tcout << \" :: \" << tmp << ' ' << tmp2 << ' ' << mult << '\\n';\n//\t\t\t\tvi tmp = {i,j,k,l};\n//\t\t\t\tsort(tmp.begin(), tmp.end());\n//\t\t\t\tMAP[tmp]++;\n//\t\t\t\tCNTCNT+=mult;\n//\t\t\t}\n\t\t\t(tot += (now * mult % mod)) %= mod;\n\t\t\tif (tot >= mod) tot -= mod;\n\t\t}\n\t}\n//\tcout << CNTCNT << '\\n';\n//\tfor (auto it : MAP){\n//\t\tfor (int i = 0; i < 4; i++) cout << it.fi[i] << ' ';\n//\t\tcout << \" : \" << it.se << '\\n';\n//\t}\n//\tcout << tot << '\\n';\n\treturn tot;\n}\nint main(){\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\tread();\n\tLL ans = 0;\n\tfor (int i = 3; i <= 10; i++){\n\t\tif (mp[i].size())\n\t\t\t(ans += solve(i)) %= mod;\n\t}\n//\tprintf(\"%lld\\n\", ans);\n\tcout << ans << '\\n';\n\treturn 0;\n}\n",
    "ext": "cpp"
  },
  "57805934": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define finish(x) return cout << x << endl, 0\n#define ll long long\n \nint n, mod = 998244353;\nvector <string> a;\n \nint id(char x){\n    if('a' <= x && x <= 'z') return x - 'a';\n    if('A' <= x && x <= 'Z') return 26 + x - 'A';\n    return 52 + x - '0';\n}\nint fact(int x){\n    if(x == 1) return 1;\n    if(x == 2) return 2;\n    if(x == 3) return 6;\n    if(x == 4) return 24;\n    assert(false);\n}\nint solve(vector <string> &a){\n    int n = a.size();\n    int cnt[11][62][62];\n    memset(cnt, 0, sizeof cnt);\n    for(auto &s : a){\n        string t = s;\n        reverse(t.begin(), t.end());\n        cnt[s.size()][id(s[0])][id(s.back())]++;\n        if(s != t){\n            cnt[s.size()][id(s.back())][id(s[0])]++;\n        }\n    }\n    int g[11][62][62][62];\n    memset(g, 0, sizeof g);\n    for(int k = 3 ; k <= 10 ; k++){\n        for(int a = 0 ; a < 62 ; a++){\n            for(int b = a ; b < 62 ; b++){\n                for(int c = b ; c < 62 ; c++){\n                    for(int d = 0 ; d < 62 ; d++){\n                        g[k][a][b][c] = (g[k][a][b][c] + 1LL * cnt[k][a][d] * cnt[k][b][d] % mod * cnt[k][c][d]) % mod;\n                    }\n                }\n            }\n        }\n    }\n    vector <int> res(11, 0);\n    for(int a = 0 ; a < 62 ; a++){\n        for(int b = a ; b < 62 ; b++){\n            for(int c = b ; c < 62 ; c++){\n                for(int d = c ; d < 62 ; d++){\n                    int f = 24;\n                    vector <int> cur = {a, b, c, d, -1};\n                    int las = 0;\n                    for(int i = 1 ; i < 5 ; i++){\n                        if(cur[i] == cur[i - 1]) continue;\n                        f /= fact(i - las);\n                        las = i;\n                    }\n                    vector <int> add(11, f);\n                    for(int k = 3 ; k <= 10 ; k++){\n                        add[k] = 1LL * add[k] * g[k][a][b][c] % mod;\n                        add[k] = 1LL * add[k] * g[k][a][b][d] % mod;\n                        add[k] = 1LL * add[k] * g[k][a][c][d] % mod;\n                        add[k] = 1LL * add[k] * g[k][b][c][d] % mod;\n                    }\n                    for(int i = 3 ; i <= 10 ; i++){\n                        res[i] += add[i];\n                        if(res[i] >= mod) res[i] -= mod;\n                    }\n                }\n            }\n        }\n    }\n    int ret = 0;\n    for(int i = 3 ; i <= 10 ; i++){\n        ret += res[i];\n        if(ret >= mod) ret -= mod;\n    }\n    return ret;\n}\nint main(){\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cin >> n;\n    for(int i = 0 ; i < n ; i++){\n        string s;\n        cin >> s;\n        string t = s;\n        reverse(t.begin(), t.end());\n        a.push_back(min(s, t));\n    }\n    sort(a.begin(), a.end());\n    a.resize(unique(a.begin(), a.end()) - a.begin());\n    n = a.size();\n    cout << solve(a) << endl;\n}\n",
    "ext": "cpp"
  },
  "57801696": {
    "code": "#ifdef _LOCAL\n//#include \"debug.h\"\n#else\n//#pragma GCC optimize(\"unroll-loops\")\n//#pragma GCC optimize(\"-O3\")\n//#pragma GCC optimize(\"Ofast\")\n#endif\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/rope>\n#define sz(x) int(x.size())\n#define all(x) x.begin(),x.end()\n#define pii pair<int,int>\n#define PB push_back\n#define MP make_pair\n#define pll pair<ll,ll>\n#define F first\n#define S second\nusing namespace std;\nusing namespace __gnu_cxx;\nusing namespace __gnu_pbds;\ntypedef long long ll;\ntypedef long double ld;\ntemplate<class T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\nconst int N = 100;\nconst int K = 10100;\nconst int oo = 2e9;\nconst ll OO = 1e18;\nconst int PW = 16;\nconst int md = 998244353;\nint kol[N][N][N],ans=0,n,f[N][N][N];\nunordered_set<string> st;\nstring s,t,p=\"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM0123456789\";\n\nint sum(int x,int y) { return (x+y)%md; }\nint mult(int x,int y) { return (1ll*x*y)%md; }\n\nint main() {\n#ifndef _LOCAL\n//    freopen(\"cardgame.in\",\"r\",stdin); freopen(\"cardgame.out\",\"w\",stdout);\n\tios_base::sync_with_stdio(0); cin.tie(0);\n#else\n\tfreopen(\"input.txt\",\"r\",stdin);\n#endif\n    cin>>n; st.clear();\n    for (int i=0;i<n;i++){\n        cin>>s; t=s; reverse(t.begin(),t.end());\n        if (t<s) swap(s,t);\n        if (st.find(s)!=st.end()) continue;\n        st.insert(s);\n        int p1=p.find(s[0]),p2=p.find(s.back());\n        kol[sz(s)][p1][p2]++;\n        if (s!=t) kol[sz(s)][p2][p1]++;\n    }\n    for (int len=3;len<11;len++){\n        for (int i1=0;i1<sz(p);i1++)\n        for (int i2=0;i2<sz(p);i2++)\n        for (int i3=0;i3<sz(p);i3++)\n            f[i1][i2][i3]=0;\n        for (int i0=0;i0<sz(p);i0++)\n        for (int i1=0;i1<sz(p);i1++)\n        for (int i2=0;i2<sz(p);i2++)\n        for (int i3=0;i3<sz(p);i3++)\n            f[i1][i2][i3]=sum(f[i1][i2][i3],mult(mult(kol[len][i0][i1],kol[len][i0][i2]),kol[len][i0][i3]));\n        for (int i0=0;i0<sz(p);i0++)\n        for (int i1=i0;i1<sz(p);i1++)\n        for (int i2=i1;i2<sz(p);i2++)\n        for (int i3=i2;i3<sz(p);i3++){\n            int res=mult(mult(f[i0][i1][i2],f[i0][i1][i3]),mult(f[i0][i2][i3],f[i1][i2][i3]));\n            int eq=bool(i0==i1)+bool(i1==i2)+bool(i2==i3);\n            if (eq==0) res=mult(res,24);\n            if (eq==1) res=mult(res,12);\n            if (eq==2){\n                if (i0==i1 && i2==i3)\n                    res=mult(res,6);\n                else res=mult(res,4);\n            }\n            ans=sum(ans,res);\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57801446": {
    "code": "#include<iostream>\n#include<stdio.h>\n#include<vector>\n#include<cmath>\n#include<queue>\n#include<string.h>\n#include<unordered_map>\n#include<unordered_set>\n#include<algorithm>\n#define ll long long\n#define pi pair < ll,ll >\n#define mp(a,b) make_pair(a,b)\n#define rep(i,a,b) for(int i = a;i < b;i++)\n#define ALPHABET 62\n\nusing namespace std;\n\nll n,ans;\nconst ll mod=998244353;\nll words[ALPHABET][ALPHABET];\nll combinations[ALPHABET][ALPHABET][ALPHABET];\nunordered_map < char,int > unordered_mapper;\nstring x;\n\nll combos(ll a,ll b,ll c,ll d)\n{\n    if(a == b)\n        if(b == c)\n            if(c == d)\n                return 1;\n            else\n                return 4;\n        else if(c == d)\n            return 6;\n        else\n            return 12;\n    else if(b == c)\n        if(c == d)\n            return 4;\n        else\n            return 12;\n    else if(c == d)\n        return 12;\n    else\n        return 24;\n}\n\nvoid solve()\n{\n    rep(a,0,ALPHABET)\n        rep(b,a,ALPHABET)\n            rep(c,b,ALPHABET)\n                rep(d,c,ALPHABET)\n                    ans = (ans+(combinations[a][b][c]*combinations[a][b][d])%mod*(((combinations[a][c][d]*combinations[b][c][d])%mod*combos(a,b,c,d))%mod))%mod;\n\n    return;\n}\n\nvoid precalc(vector < string > ar)\n{\n    unordered_set < string > s;\n    s.clear();\n\n    rep(i,0,ALPHABET)\n        rep(j,0,ALPHABET)\n        {\n            words[i][j] = 0;\n\n            rep(k,0,ALPHABET)\n                combinations[i][j][k] = 0;\n        }\n\n    rep(i,0,ar.size())\n    {\n        s.insert(ar[i]);\n        reverse(ar[i].begin(),ar[i].end());\n        s.insert(ar[i]);\n    }\n\n    ar.clear();\n\n    for(auto it = s.begin();it != s.end();it++)\n        ar.push_back(*it);\n\n    rep(i,0,26)\n        unordered_mapper[i+'a'] = i;\n    rep(i,0,26)\n        unordered_mapper[i+'A']=i+26;\n    rep(i,0,10)\n        unordered_mapper[i+'0'] = i+52;\n\n    rep(i,0,ar.size())\n        words[unordered_mapper[ar[i][0]]][unordered_mapper[ar[i][ar[i].size()-1]]]++;\n\n    rep(i,0,ALPHABET)\n        rep(j,0,ALPHABET)\n            rep(k,0,ALPHABET)\n                rep(let,0,ALPHABET)\n                    combinations[i][j][k] = (combinations[i][j][k] + words[let][i]*words[let][j]*words[let][k])%mod;\n    return;\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n\n    cin >> n;\n\n    vector < vector < string > > input(11);\n\n    rep(i,0,n)\n    {\n        cin >> x;\n        input[x.size()].push_back(x);\n    }\n\n    rep(i,1,11)\n    {\n        if(input[i].empty())\n            continue;\n\n        precalc(input[i]);\n        solve();\n    }\n\n    cout << ans << \"\\n\";\n\n    return 0;\n}\n\n",
    "ext": "cpp"
  },
  "57800499": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst long long MOD = 998244353LL;\nlong long cnt[11][66][66], C[66][66][66], ans;\nset<string> st[11][66][66];\n\nint ch(char c) {\n\tif('a' <= c && c <= 'z') return c - 'a';\n\tif('A' <= c && c <= 'Z') return c - 'A' + 'z' - 'a' + 1;\n\tif('0' <= c && c <= '9') return c - '0' + 'Z' - 'A' + 'z' - 'a' + 2;\n}\n\nvoid solve(int id) {\n\tfor(int i=0; i<62; i++) for(int j=i; j<62; j++) for(int k=j; k<62; k++) {\n\t\tC[i][j][k] = 0;\n\t\tfor(int l=0; l<62; l++) {\n\t\t\tC[i][j][k] += cnt[id][l][i] * cnt[id][l][j] % MOD * cnt[id][l][k] % MOD;\n\t\t\tC[i][j][k] %= MOD;\n\t\t}\n\t}\n\tfor(int i=0; i<62; i++) for(int j=i; j<62; j++) for(int k=j; k<62; k++) for(int l=k; l<62; l++) {\n\t\tint c = 0;\n\t\tif(i == j) ++c;\n\t\tif(j == k) ++c;\n\t\tif(k == l) ++c;\n\t\tlong long s;\n\t\tif(c == 0) s = 24;\n\t\tif(c == 1) s = 12;\n\t\tif(c == 2) {\n\t\t\tif(j != k) s = 6;\n\t\t\telse s = 4;\n\t\t}\n\t\tif(c == 3) s = 1;\n\t\ts *= C[i][j][k]; s %= MOD;\n\t\ts *= C[i][j][l]; s %= MOD;\n\t\ts *= C[i][k][l]; s %= MOD;\n\t\ts *= C[j][k][l]; s %= MOD;\n\t\tans += s; ans %= MOD;\n\t}\n}\n\nint main() {\n\tcin.tie(0); cout.tie(0);\n\tios::sync_with_stdio(0);\n\n\tint N; cin >> N;\n\tfor(int i=1; i<=N; i++) {\n\t\tstring S; cin >> S;\n\t\tst[S.size()][ch(S[0])][ch(S.back())].insert(S);\n\t\treverse(S.begin(), S.end());\n\t\tst[S.size()][ch(S[0])][ch(S.back())].insert(S);\n\t}\n\tfor(int i=0; i<62; i++) for(int j=0; j<62; j++) for(int k=3; k<=10; k++) cnt[k][i][j] = st[k][i][j].size();\n\tfor(int i=3; i<=10; i++) solve(i);\n\tcout << ans;\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57797733": {
    "code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<string> vs;\ntypedef vector<vs> vvs;\ntypedef vector<ll> vi;\ntypedef vector<vi> vvi;\ntypedef vector<vvi> vvvi;\n\nconst ll mod = 998244353;\n\nll solve(vs V) {\n  int n = (int)V.size();\n  if (!n) return 0;\n  \n  int l = 0;\n  unordered_map<char, int> M;\n  for (auto s : V) {\n    char a = s[0];\n    if (M.count(a) == 0) {\n      M[a] = l++;\n    }\n    a = s.back();\n    if (M.count(a) == 0) {\n      M[a] = l++;\n    }\n  }\n  set<string> S;\n  for (auto s : V) {\n    S.insert(s);\n    reverse(s.begin(), s.end());\n    S.insert(s);\n  }\n  vvi P(l, vi(l, 0));\n  for (auto s : S) {\n    int a = M[s[0]];\n    int b = M[s.back()];\n    ++P[a][b];\n  }\n  vvvi D(l, vvi(l, vi(l, 0)));\n  for (int a = 0; a < l; ++a) {\n    for (int b = a; b < l; ++b) {\n      for (int c = b; c < l; ++c) {\n        for (int d = 0; d < l; ++d) {\n          D[a][b][c] = (D[a][b][c] + P[a][d]*P[b][d]%mod*P[c][d])%mod;\n        }\n        D[a][c][b] = D[b][a][c] = D[b][c][a] = D[c][a][b] = D[c][b][a] = D[a][b][c];\n      }\n    }\n  }\n  ll res = 0;\n  for (int a = 0; a < l; ++a) {\n    for (int b = a; b < l; ++b) {\n      for (int c = b; c < l; ++c) {\n        for (int d = c; d < l; ++d) {\n          ll val = D[a][b][c]*D[b][c][d]%mod*D[a][b][d]%mod*D[a][c][d]%mod;\n          ll cont = 24;\n          if (a == b) {\n            if (b == c) {\n              if (c == d) cont = 1;\n              else cont = 4;\n            }\n            else if (c == d) cont = 6;\n            else cont = 12;\n          }\n          else if (b == c) {\n            if (c == d) cont = 4;\n            else cont = 12;\n          }\n          else if (c == d) cont = 12;\n          res = (res + cont*val)%mod;\n        }\n      }\n    }\n  }\n  return res;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  vvs V(11);\n  for (int i = 0; i < n; ++i) {\n    string a;\n    cin >> a;\n    V[a.size()].push_back(a);\n  }\n  ll res = 0;\n  for (int i = 3; i <= 10; ++i) {\n    res = (res + solve(V[i]))%mod;\n  }\n  cout << res << '\\n';\n}\n",
    "ext": "cpp"
  },
  "57796805": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 100005;\nconst int mod = 998244353;\nconst int N = 62;\nusing lint = long long;\nusing pi = pair<int, int>;\n\nint sgn(char c){\n\tif(islower(c)) return c - 'a';\n\tif(isupper(c)) return c - 'A' + 26;\n\treturn c - '0' + 52;\n}\n\nint cnt[62][62], prec[62][62][62];\nint v[12][62][62];\n\nlint solve(int l){\n\tmemcpy(cnt, v[l], sizeof(cnt));\n\tmemset(prec, 0, sizeof(prec));\n\tfor(int i=0; i<N; i++){\n\t\tfor(int j=0; j<=i; j++){\n\t\t\tfor(int k=0; k<N; k++){\n\t\t\t\tfor(int l=0; l<N; l++){\n\t\t\t\t\tprec[i][j][k] += cnt[i][l] * (1ll * cnt[j][l] * cnt[k][l] % mod) % mod;\n\t\t\t\t\tif(prec[i][j][k] >= mod) prec[i][j][k] -= mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlint ret = 0;\n\tfor(int i=0; i<N; i++){\n\t\tfor(int j=0; j<=i; j++){\n\t\t\tfor(int k=0; k<N; k++){\n\t\t\t\tfor(int l=0; l<=k; l++){\n\t\t\t\t\tlint fuck = (1ll * prec[i][j][k] * prec[i][j][l] % mod) * (1ll * prec[k][l][i] * prec[k][l][j] % mod) % mod;\n\t\t\t\t\tif(i != j) fuck <<= 1;\n\t\t\t\t\tif(k != l) fuck <<= 1;\n\t\t\t\t\tret += fuck;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ret % mod;\n}\n\nvector<string> vec[11];\nchar buf[22];\n\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%s\", buf);\n\t\tstring s = buf;\n\t\tint l = s.size();\n\t\tvec[l].push_back(s);\n\t\tstring t = s; reverse(t.begin(), t.end());\n\t\tvec[l].push_back(t);\n\t}\n\tlint ret = 0;\n\tfor(int i=3; i<=10; i++){\n\t\tsort(vec[i].begin(), vec[i].end());\n\t\tvec[i].resize(unique(vec[i].begin(), vec[i].end()) - vec[i].begin());\n\t\tfor(auto &j : vec[i]){\n\t\t\tint st = sgn(j[0]), ed = sgn(j.back());\n\t\t\tv[i][st][ed]++;\n\t\t}\n\t}\n\tfor(int i=3; i<=10; i++){\n\t\tret += solve(i);\n\t}\n\tcout << ret % mod << endl;\n}\n",
    "ext": "cpp"
  },
  "57794453": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing lld = long long int;\n\nconst int E = 63;\nconst lld mod = 998244353;\n\nlld res = 0;\n\nint f(char c){\n\tif('a' <= c && c <= 'z')\n\t\treturn c-'a';\n\tif('A' <= c && c <= 'Z')\n\t\treturn 26+c-'A';\n\treturn 52+c-'0';\n}\n\nlld X[E+5][E+5];\nlld P[E+5][E+5][E+5];\nlld PR[E+5][E+5][E+5][E+5];\n\nlld perm(vector<int> p){\n\tint res = 0;\n\tdo{\n\t\tres++;\n\t}while(next_permutation(p.begin(), p.end()));\n\treturn res;\n}\n\nvoid clear(void){\n\tmemset(&X[0][0], 0, sizeof(X));\n\tmemset(&P[0][0][0], 0, sizeof(P));\n}\n\nvoid prepare(vector<string>& t){\n\tint n = t.size();\n\tt.resize(2*n);\n\n\tfor(int i=n;i<2*n;i++){\n\t\tt[i] = t[i-n];\n\t\treverse(t[i].begin(), t[i].end());\n\t}\n\n\tsort(t.begin(), t.end());\n\tt.resize(unique(t.begin(), t.end()) - t.begin());\n}\n\nvoid add(int a, int b){\n\tX[a][b]++;\n}\n\nvoid add(char a, char b){\n\tadd(f(a), f(b));\n}\n\nvoid initP(void){\n\tfor(int i=0;i<E;i++)\n\t\tfor(int j=i;j<E;j++)\n\t\t\tfor(int k=j;k<E;k++){\n\t\t\t\tfor(int l=0;l<E;l++)\n\t\t\t\t\tP[i][j][k] += X[i][l] * X[j][l] * X[k][l];\n\t\t\t\tP[i][j][k] %= mod;\n\t\t\t\tP[i][k][j] = P[j][i][k] = P[j][k][i] = P[k][i][j] = P[k][j][i] = P[i][j][k];\n\t\t\t}\n}\n\nvoid solve(vector<string>& t){\n\tif(t.empty())\n\t\treturn;\n\tclear();\n\n\tint n = t[0].length();\n\tprepare(t);\n\n\tfor(auto& s : t)\n\t\tadd(s[0], s[n-1]);\n\n\tinitP();\n\n\tfor(int i=0;i<E;i++)\n\t\tfor(int j=i;j<E;j++)\n\t\t\tfor(int k=j;k<E;k++)\n\t\t\t\tfor(int l=k;l<E;l++){\n\t\t\t\t\tlld x = ((P[i][j][k] * P[i][j][l]) % mod) * ((P[i][k][l] * P[j][k][l]) % mod);\n\t\t\t\t\tx %= mod;\n\n\t\t\t\t\tres += x * PR[i][j][k][l];\n\t\t\t\t\tres %= mod;\n\t\t\t\t}\n}\n\nint main(void){\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\n\tfor(int i=0;i<E;i++)\n\t\tfor(int j=i;j<E;j++)\n\t\t\tfor(int k=j;k<E;k++)\n\t\t\t\tfor(int l=k;l<E;l++)\n\t\t\t\t\tPR[i][j][k][l] = perm({i,j,k,l});\n\n\tint n;\n\tcin >> n;\n\n\tvector<vector<string> > t(11);\n\tfor(int i=0;i<n;i++){\n\t\tstring s;\n\t\tcin >> s;\n\n\t\tt[s.length()].push_back(s);\n\t}\n\n\tfor(auto& i : t)\n\t\tsolve(i);\n\n\tcout << res << \"\\n\";\n\n\treturn 0;\n}\n",
    "ext": "cpp"
  },
  "57794014": {
    "code": "#undef _GLIBCXX_DEBUG\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\") // codeforces\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\nusing ull = unsigned long long;\nusing fl = long double;\ntemplate<typename T>\nusing min_heap = priority_queue<T, vector<T>, greater<T>>;\ntemplate<typename S, typename T>\nvoid xmin(S&a, T const&b){if(b<a) a=b;}\ntemplate<typename S, typename T>\nvoid xmax(S&a, T const&b){if(b>a) a=b;}\n\ntemplate<bool enabled>\nstruct Debug{\n    template<typename S, typename T = void> struct Tag_Printable : false_type {};\n    template<typename S> struct Tag_Printable<S, decltype((void)(cerr << declval<S>()))> : true_type {};\n    template<typename S, typename T = void> struct Tag_Iterable: false_type {};\n    template<typename S> struct Tag_Iterable<S, decltype((void)(begin(declval<S>()), end(declval<S>())))> : true_type {};\n    template<typename T, typename... Args>\n    Debug& print(T const&x, true_type, Args...){\n        #ifdef LOCAL_RUN\n        if(enabled){\n            cerr << boolalpha << x;\n        }\n        #endif // LOCAL_RUN\n        return *this;\n    }\n    template<typename T>\n    Debug& print(T const&x, false_type, true_type){\n        *this << \"[\";\n        bool first = true;\n        for(auto &e:x){\n            if(!first) *this << \", \";\n            *this << e;\n            first = false;\n        }\n        return *this << \"]\";\n    }\n    template<typename S, typename T>\n    Debug& print(pair<S, T> const&x, false_type, false_type){\n        return *this << \"(\" << x.first << \", \" << x.second << \")\";\n    }\n    template<typename T>\n    Debug& operator<<(T const&x){\n        return print(x, Tag_Printable<T>{}, Tag_Iterable<T>{});\n    }\n};\n Debug<true> debug;\n// Debug<false> debug; // disable debug printing\n#define named(x) string(#x) << \" : \" <<  x\n\n\ntemplate<typename traits>\nclass Mod_Int{\npublic:\n    using int_t = typename traits::int_t;\n    using long_t = typename traits::long_t;\n    static constexpr int_t mod(){ return traits::get_mod(); };\n\n\n    Mod_Int() : value(0) {}\n    Mod_Int(int_t value_) : value(value_) {}\n\n    friend ostream& operator<<(ostream&o, Mod_Int const&val){\n        return o << val.value;\n    }\n    friend istream& operator>>(istream&i, Mod_Int &val){\n         i >> val.value;\n         val.value = mod_full(val.value);\n         return i;\n    }\n    int_t const& get_value (){\n        return value;\n    }\n\n    Mod_Int operator+(Mod_Int const&o) const {\n        Mod_Int ret(mod_step(value + o.value));\n        return ret;\n    }\n    Mod_Int& operator+=(Mod_Int const&o){\n        return *this = *this + o;\n    }\n    Mod_Int& operator++(){\n        return operator+=(int_t{1});\n    }\n    Mod_Int operator-() const{\n        Mod_Int ret(mod_step(mod() - value));\n        return ret;\n    }\n    Mod_Int operator-(Mod_Int const&o) const {\n        return operator+(-o);\n    }\n    Mod_Int& operator-=(Mod_Int const&o){\n        return operator+=(-o);\n    }\n    Mod_Int& operator--(){\n        return operator-=(int_t{1});\n    }\n    Mod_Int operator*(Mod_Int const&o) const {\n        Mod_Int ret(mod_full(value * static_cast<long_t>(o.value)));\n        return ret;\n    }\n    Mod_Int& operator*=(Mod_Int const&o){\n        return *this = *this * o;\n    }\n    Mod_Int inv() const {\n        return inv_impl(value);\n    }\n    Mod_Int operator/(Mod_Int const&o) const {\n        return operator*(o.inv());\n    }\n    Mod_Int& operator/=(Mod_Int const&o) {\n        return *this = *this / o;\n    }\n\n    bool operator==(Mod_Int const&o) const {\n        return value == o.value;\n    }\n    bool operator!=(Mod_Int const&o) const {\n        return !(*this == o);\n    }\n    bool operator!() const {\n        return !value;\n    }\n\nprivate:\n    static int_t mod_step(int_t const& val){\n        return val >= mod() ? val-mod() : val;\n    }\n    static int_t mod_full(long_t const&val){\n        return mod() ? val%mod() : val;\n    }\n    static Mod_Int inv_impl(Mod_Int const& val){\n        if(mod() == 0){\n            assert(val*val == 1);\n            return val;\n        }\n        int_t value = val.value;\n        constexpr size_t cache_size = traits::inv_cache_size()+1;\n        static_assert(cache_size > 1);\n        static array<Mod_Int, cache_size> cache = [](){\n            array<Mod_Int, cache_size> ret;\n            ret[1] = 1;\n            for(int_t i=2;i<cache_size && i < mod();++i){\n                ret[i] = -ret[mod()%i] * (mod()/i);\n            }\n            return ret;\n        } ();\n        assert(value != 0);\n        Mod_Int factor = 1;\n        while(value >= cache_size){\n            factor *= - Mod_Int(mod() / value);\n            value = mod() % value;\n        }\n        assert(value != 0);\n        assert(factor != 0  && value != 0);\n        return factor * cache[value];\n    }\n\n    int_t value;\n};\n\ntemplate<uint32_t mod>\nstruct fixed_mod{\n    using int_t = uint32_t;\n    using long_t = uint64_t;\n    static_assert(mod != 0, \"Negative numbers won't work.\");\n    static_assert(numeric_limits<int_t>::max()/2 >= mod, \"Addition might overflow.\");\n    static constexpr size_t inv_cache_size(){ return 30000; }\n    static constexpr int_t get_mod(){ return mod; }\n};\n#ifdef __SIZEOF_INT128__\ntemplate<uint64_t mod>\nstruct fixed_mod_long{\n    using int_t = uint64_t;\n    using long_t = __int128;\n    static_assert(mod != 0, \"Negative numbers won't work.\");\n    static_assert(numeric_limits<int_t>::max()/2 >= mod, \"Addition might overflow.\");\n    static constexpr size_t inv_cache_size(){ return 30000; }\n    static constexpr int_t get_mod(){ return mod; }\n};\n#endif // __SIZEOF_INT128__\nstruct no_mod{\n    using int_t  = int64_t;\n    using long_t = int_t;\n    static constexpr size_t inv_cache_size(){ return 1; }\n    static constexpr int_t get_mod(){ return 0; }\n};\nstruct mutable_mod{\n    using int_t = uint32_t;\n    using long_t = uint64_t;\n    static int_t mod;\n    // can't use cache if mod is changing\n    static constexpr size_t inv_cache_size(){ return 1; }\n    static int_t get_mod(){ return mod; }\n};\nmutable_mod::int_t mutable_mod::mod = 1000000007;\n\nusing num = Mod_Int<fixed_mod<998244353>>;\n\nconst int S = 62;\narray<array<array<num, S>, S>, 11> pool;\narray<array<num, S>, S> cnt;\n\narray<array<array<num, S>, S>, S> tri;\n\nnum dp_0(){\n    for(int b=0;b<S;++b){\n        for(int c=0;c<=b;++c){\n            for(int d=0;d<=c;++d){\n                tri[b][c][d] = 0;\n                for(int a=0;a<S;++a){\n                    tri[b][c][d] += cnt[b][a] * cnt[c][a] * cnt[d][a];\n                }\n            }\n        }\n    }\n    array<num, 8> perm;\n    for(int i=0;i<8;++i){\n        array<int, 4> tmp;\n        for(int j=0;j<3;++j){\n            tmp[j+1] = tmp[j] + !((i>>j)&1);\n        }\n        perm[i] = 0;\n        do{\n            ++perm[i];\n        }while(next_permutation(tmp.begin(), tmp.end()));\n    }\n    num ret;\n    for(int a=0;a<S;++a){\n        for(int b=0;b<=a;++b){\n            for(int c=0;c<=b;++c){\n                const int i = (a==b)<<2 | (b==c)<<1;\n                for(int d=0;d<=c;++d){\n                    ret += perm[i|(c==d)]*tri[a][b][c]*tri[a][b][d]*tri[a][c][d]*tri[b][c][d];\n                }\n            }\n        }\n    }\n\n    return ret;\n}\n\n\nvoid solve(){\n    /// SOLVE HERE\n\n    for(auto &e:pool) for(auto &f:e) fill(f.begin(), f.end(), 0);\n\n    int n;\n    cin >> n;\n    vector<string> v;\n    for(int i=0;i<n;++i){\n        string s;\n        cin >> s;\n        v.push_back(s);\n        reverse(s.begin(), s.end());\n        v.push_back(s);\n        //pool[s.size()][s[0]-'a'][s.back()-'a'] += 1;\n    }\n    sort(v.begin(), v.end());\n    v.erase(unique(v.begin(), v.end()), v.end());\n    auto decode = [](char const& c){\n        if (c >= 'a') return c-'a';\n        if(c >= 'A') return c-'A' + ('z'-'a'+1);\n        return 52 + c-'0';\n    };\n    for(auto const&s:v){\n        pool[s.size()][decode(s[0])][decode(s.back())] += 1;\n    }\n    num ans = 0;\n    for(int l=3;l<11;++l){\n        cnt = pool[l];\n        num now = dp_0();\n        ans += now;\n    }\n    cout << ans << \"\\n\";\n\n\n\n\n}\n\nsigned gen(int T){\n    mt19937 rng(43151);\n    auto get_rand = [&](int64_t l, int64_t r){\n        return uniform_int_distribution<int64_t>(l, r)(rng);\n    }; (void) get_rand;\n    auto get_double = [&](double l, double r){\n        return uniform_real_distribution<double>(l, r)(rng);\n    };  (void) get_double;\n    ofstream o(\"gen.txt\");\n    o << T << \"\\n\";\n    for(int cas=0;cas<T;++cas){\n        /// GEN HERE\n\n        o << \"\\n\";\n    }\n    o << endl;\n    o.close();\n    return 0;\n}\n\nsigned main()\n{\n    #ifdef LOCAL_RUN\n    freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    cin.exceptions(ios::badbit | ios::eofbit | ios::failbit);\n    cin.tie(0); ios_base::sync_with_stdio(false);\n    int TTT; cin >> TTT;\n\tif(TTT < 0) return gen(-TTT);\n\twhile(TTT--){\n    #else\n    cin.tie(0); ios_base::sync_with_stdio(false);\n    #endif // LOCAL_RUN\n\n    solve();\n\n    #ifdef LOCAL_RUN\n    cout << flush;\n    }\n    #endif // LOCAL_RUN\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57793821": {
    "code": "#undef _GLIBCXX_DEBUG\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\") // codeforces\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\nusing ull = unsigned long long;\nusing fl = long double;\ntemplate<typename T>\nusing min_heap = priority_queue<T, vector<T>, greater<T>>;\ntemplate<typename S, typename T>\nvoid xmin(S&a, T const&b){if(b<a) a=b;}\ntemplate<typename S, typename T>\nvoid xmax(S&a, T const&b){if(b>a) a=b;}\n\ntemplate<bool enabled>\nstruct Debug{\n    template<typename S, typename T = void> struct Tag_Printable : false_type {};\n    template<typename S> struct Tag_Printable<S, decltype((void)(cerr << declval<S>()))> : true_type {};\n    template<typename S, typename T = void> struct Tag_Iterable: false_type {};\n    template<typename S> struct Tag_Iterable<S, decltype((void)(begin(declval<S>()), end(declval<S>())))> : true_type {};\n    template<typename T, typename... Args>\n    Debug& print(T const&x, true_type, Args...){\n        #ifdef LOCAL_RUN\n        if(enabled){\n            cerr << boolalpha << x;\n        }\n        #endif // LOCAL_RUN\n        return *this;\n    }\n    template<typename T>\n    Debug& print(T const&x, false_type, true_type){\n        *this << \"[\";\n        bool first = true;\n        for(auto &e:x){\n            if(!first) *this << \", \";\n            *this << e;\n            first = false;\n        }\n        return *this << \"]\";\n    }\n    template<typename S, typename T>\n    Debug& print(pair<S, T> const&x, false_type, false_type){\n        return *this << \"(\" << x.first << \", \" << x.second << \")\";\n    }\n    template<typename T>\n    Debug& operator<<(T const&x){\n        return print(x, Tag_Printable<T>{}, Tag_Iterable<T>{});\n    }\n};\n Debug<true> debug;\n// Debug<false> debug; // disable debug printing\n#define named(x) string(#x) << \" : \" <<  x\n\n\ntemplate<typename traits>\nclass Mod_Int{\npublic:\n    using int_t = typename traits::int_t;\n    using long_t = typename traits::long_t;\n    static constexpr int_t mod(){ return traits::get_mod(); };\n\n\n    Mod_Int() : value(0) {}\n    Mod_Int(int_t value_) : value(value_) {}\n\n    friend ostream& operator<<(ostream&o, Mod_Int const&val){\n        return o << val.value;\n    }\n    friend istream& operator>>(istream&i, Mod_Int &val){\n         i >> val.value;\n         val.value = mod_full(val.value);\n         return i;\n    }\n    int_t const& get_value (){\n        return value;\n    }\n\n    Mod_Int operator+(Mod_Int const&o) const {\n        Mod_Int ret(mod_step(value + o.value));\n        return ret;\n    }\n    Mod_Int& operator+=(Mod_Int const&o){\n        return *this = *this + o;\n    }\n    Mod_Int& operator++(){\n        return operator+=(1);\n    }\n    Mod_Int operator-() const{\n        Mod_Int ret(mod_step(mod() - value));\n        return ret;\n    }\n    Mod_Int operator-(Mod_Int const&o) const {\n        return operator+(-o);\n    }\n    Mod_Int operator-=(Mod_Int const&o){\n        return operator+=(-o);\n    }\n    Mod_Int operator*(Mod_Int const&o) const {\n        Mod_Int ret(mod_full(value * static_cast<long_t>(o.value)));\n        return ret;\n    }\n    Mod_Int& operator*=(Mod_Int const&o){\n        return *this = *this * o;\n    }\n    Mod_Int inv() const {\n        return inv_impl(value);\n    }\n    Mod_Int operator/(Mod_Int const&o) const {\n        return operator*(o.inv());\n    }\n    Mod_Int& operator/=(Mod_Int const&o) {\n        return *this = *this / o;\n    }\n\n    bool operator==(Mod_Int const&o) const {\n        return value == o.value;\n    }\n    bool operator!=(Mod_Int const&o) const {\n        return !(*this == o);\n    }\n    bool operator!() const {\n        return !value;\n    }\n\nprivate:\n    static int_t mod_step(int_t const& val){\n        return val >= mod() ? val-mod() : val;\n    }\n    static int_t mod_full(long_t const&val){\n        return mod() ? val%mod() : val;\n    }\n    static Mod_Int inv_impl(Mod_Int const& val){\n        if(mod() == 0){\n            assert(val*val == 1);\n            return val;\n        }\n        int_t value = val.value;\n        constexpr size_t cache_size = traits::inv_cache_size()+1;\n        static_assert(cache_size > 1);\n        static array<Mod_Int, cache_size> cache = [](){\n            array<Mod_Int, cache_size> ret;\n            ret[1] = 1;\n            for(int_t i=2;i<cache_size && i < mod();++i){\n                ret[i] = -ret[mod()%i] * (mod()/i);\n            }\n            return ret;\n        } ();\n        assert(value != 0);\n        Mod_Int factor = 1;\n        while(value >= cache_size){\n            factor *= - Mod_Int(mod() / value);\n            value = mod() % value;\n        }\n        assert(value != 0);\n        assert(factor != 0  && value != 0);\n        return factor * cache[value];\n    }\n\n    int_t value;\n};\n\ntemplate<uint32_t mod>\nstruct fixed_mod{\n    using int_t = uint32_t;\n    using long_t = uint64_t;\n    static_assert(mod != 0, \"Negative numbers won't work.\");\n    static_assert(numeric_limits<int_t>::max()/2 >= mod, \"Addition might overflow.\");\n    static constexpr size_t inv_cache_size(){ return 30000; }\n    static constexpr int_t get_mod(){ return mod; }\n};\n#ifdef __SIZEOF_INT128__\ntemplate<uint64_t mod>\nstruct fixed_mod_long{\n    using int_t = uint64_t;\n    using long_t = __int128;\n    static_assert(mod != 0, \"Negative numbers won't work.\");\n    static_assert(numeric_limits<int_t>::max()/2 >= mod, \"Addition might overflow.\");\n    static constexpr size_t inv_cache_size(){ return 30000; }\n    static constexpr int_t get_mod(){ return mod; }\n};\n#endif // __SIZEOF_INT128__\nstruct no_mod{\n    using int_t  = int64_t;\n    using long_t = int_t;\n    static constexpr size_t inv_cache_size(){ return 1; }\n    static constexpr int_t get_mod(){ return 0; }\n};\nstruct mutable_mod{\n    using int_t = uint32_t;\n    using long_t = uint64_t;\n    static int_t mod;\n    // can't use cache if mod is changing\n    static constexpr size_t inv_cache_size(){ return 1; }\n    static int_t get_mod(){ return mod; }\n};\nmutable_mod::int_t mutable_mod::mod = 1000000007;\n\nusing num = Mod_Int<fixed_mod<998244353>>;\n\nconst int S = 62;\narray<array<array<num, S>, S>, 11> pool;\narray<array<num, S>, S> cnt;\n\narray<array<array<num, S>, S>, S> tri;\n\nnum dp_0(){\n    for(int b=0;b<S;++b){\n        for(int c=0;c<=b;++c){\n            for(int d=0;d<=c;++d){\n                tri[b][c][d] = 0;\n                for(int a=0;a<S;++a){\n                    tri[b][c][d] += cnt[b][a] * cnt[c][a] * cnt[d][a];\n                }\n            }\n        }\n    }\n    array<num, 8> perm;\n    for(int i=0;i<8;++i){\n        array<int, 4> tmp;\n        for(int j=0;j<3;++j){\n            tmp[j+1] = tmp[j] + !((i>>j)&1);\n        }\n        perm[i] = 0;\n        do{\n            ++perm[i];\n        }while(next_permutation(tmp.begin(), tmp.end()));\n    }\n    num ret;\n    for(int a=0;a<S;++a){\n        for(int b=0;b<=a;++b){\n            for(int c=0;c<=b;++c){\n                const int i = (a==b)<<2 | (b==c)<<1;\n                for(int d=0;d<=c;++d){\n                    ret += perm[i|(c==d)]*tri[a][b][c]*tri[a][b][d]*tri[a][c][d]*tri[b][c][d];\n                }\n            }\n        }\n    }\n\n    return ret;\n}\n\n\nvoid solve(){\n    /// SOLVE HERE\n\n    for(auto &e:pool) for(auto &f:e) fill(f.begin(), f.end(), 0);\n\n    int n;\n    cin >> n;\n    vector<string> v;\n    for(int i=0;i<n;++i){\n        string s;\n        cin >> s;\n        v.push_back(s);\n        reverse(s.begin(), s.end());\n        v.push_back(s);\n        //pool[s.size()][s[0]-'a'][s.back()-'a'] += 1;\n    }\n    sort(v.begin(), v.end());\n    v.erase(unique(v.begin(), v.end()), v.end());\n    auto decode = [](char const& c){\n        if (c >= 'a') return c-'a';\n        if(c >= 'A') return c-'A' + ('z'-'a'+1);\n        return 52 + c-'0';\n    };\n    for(auto const&s:v){\n        pool[s.size()][decode(s[0])][decode(s.back())] += 1;\n    }\n    num ans = 0;\n    for(int l=3;l<11;++l){\n        cnt = pool[l];\n        num now = dp_0();\n        ans += now;\n    }\n    cout << ans << \"\\n\";\n\n\n\n\n}\n\nsigned gen(int T){\n    mt19937 rng(43151);\n    auto get_rand = [&](int64_t l, int64_t r){\n        return uniform_int_distribution<int64_t>(l, r)(rng);\n    }; (void) get_rand;\n    auto get_double = [&](double l, double r){\n        return uniform_real_distribution<double>(l, r)(rng);\n    };  (void) get_double;\n    ofstream o(\"gen.txt\");\n    o << T << \"\\n\";\n    for(int cas=0;cas<T;++cas){\n        /// GEN HERE\n\n        o << \"\\n\";\n    }\n    o << endl;\n    o.close();\n    return 0;\n}\n\nsigned main()\n{\n    #ifdef LOCAL_RUN\n    freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    cin.exceptions(ios::badbit | ios::eofbit | ios::failbit);\n    cin.tie(0); ios_base::sync_with_stdio(false);\n    int TTT; cin >> TTT;\n\tif(TTT < 0) return gen(-TTT);\n\twhile(TTT--){\n    #else\n    cin.tie(0); ios_base::sync_with_stdio(false);\n    #endif // LOCAL_RUN\n\n    solve();\n\n    #ifdef LOCAL_RUN\n    cout << flush;\n    }\n    #endif // LOCAL_RUN\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57793789": {
    "code": "///x\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXL = 10;\nconst int SIGMA = 62;\nconst int MOD = 998244353;\n\nint fr[MAXL + 5][SIGMA + 5][SIGMA + 5];\nchar s[MAXL + 5];\nint p[SIGMA + 5][SIGMA + 5][SIGMA + 5];\n\nint toInt(char c) {\n  if ('a' <= c && c <= 'z')\n    return c - 'a';\n  if ('A' <= c && c <= 'Z')\n    return 26 + c - 'A';\n  return 52 + c - '0';\n}\n\nbool pal(int len) {\n  for (int i = 1, j = len; i < j; ++i, --j)\n    if (s[i] != s[j])\n      return 0;\n  return 1;\n}\n\nint mod(int a, int b) {\n  a += b;\n  if (a >= MOD)\n    a -= MOD;\n  return a;\n}\n\nint perm(int a, int b, int c, int d) {\n  if (a == b && b == c && c == d) {\n    return 1;\n  }\n  if (a == b && b == c) {\n    return 4;\n  }\n  if (b == c && c == d) {\n    return 4;\n  }\n  if (a == b && c == d) {\n    return 6;\n  }\n  if (a == b || b == c || c == d) {\n    return 12;\n  }\n  return 24;\n}\n\nint solve(int len) {\n  memset(p, 0, sizeof(p));\n  for (int i = 0; i < SIGMA; ++i)\n    for (int j = i; j < SIGMA; ++j)\n      for (int k = j; k < SIGMA; ++k)\n        for (int l = 0; l < SIGMA; ++l)\n          p[i][j][k] = (p[i][j][k] + 1LL * fr[len][l][i] * fr[len][l][j] % MOD * fr[len][l][k]) % MOD;\n  int ans = 0;\n  for (int i1 = 0; i1 < SIGMA; ++i1)\n    for (int i3 = i1; i3 < SIGMA; ++i3)\n      for (int i6 = i3; i6 < SIGMA; ++i6)\n        for (int i8 = i6; i8 < SIGMA; ++i8)\n          ans = (ans + 1LL * perm(i1, i3, i6, i8) * p[i1][i3][i6] % MOD * p[i1][i6][i8] % MOD * p[i1][i3][i8] % MOD * p[i3][i6][i8]) % MOD;\n  return ans;\n}\n\nmap<string, bool>mp;\nint main() {\n  //freopen(\"date.in\", \"r\", stdin);\n  //freopen(\"date.out\", \"w\", stdout);\n\n  int n;\n  scanf(\"%d \", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%s\", s + 1);\n    int m = strlen(s + 1);\n    string s1, s2;\n    for (int j = 1; j <= m; ++j)\n      s1 = s1 + s[j], s2 = s2 + s[m - j + 1];\n    if (mp[s1])\n      continue;\n    mp[s1] = mp[s2] = 1;\n    fr[m][toInt(s[1])][toInt(s[m])]++;\n    if (!pal(m))\n      fr[m][toInt(s[m])][toInt(s[1])]++;\n  }\n\n  int ans = 0;\n  for (int i = 3; i <= 10; ++i)\n    ans = mod(ans, solve(i));\n  printf(\"%d\\n\", ans);\n\n  return 0;\n}\n",
    "ext": "cpp"
  },
  "57793511": {
    "code": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/rope>\n\n#define ll long long\n#define pb push_back\n#define sz(x) (int)(x).size()\n#define mp make_pair\n#define f first\n#define s second\n#define all(x) x.begin(), x.end()\n#define D(x) cerr << #x << \" is \" << (x) << \"\\n\";\n\nusing namespace std;\nusing namespace __gnu_pbds;\nusing namespace __gnu_cxx;\n\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\ntemplate<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>; ///find_by_order(),order_of_key()\ntemplate<class T1, class T2> ostream& operator<<(ostream& os, const pair<T1,T2>& a) { os << '{' << a.f << \", \" << a.s << '}'; return os; }\ntemplate<class T> ostream& operator<<(ostream& os, const vector<T>& a){os << '{';for(int i=0;i<sz(a);i++){if(i>0&&i<sz(a))os << \", \";os << a[i];}os<<'}';return os;}\ntemplate<class T> ostream& operator<<(ostream& os, const set<T>& a) {os << '{';int i=0;for(auto p:a){if(i>0&&i<sz(a))os << \", \";os << p;i++;}os << '}';return os;}\ntemplate<class T> ostream& operator<<(ostream& os, const multiset<T>& a) {os << '{';int i=0;for(auto p:a){if(i>0&&i<sz(a))os << \", \";os << p;i++;}os << '}';return os;}\ntemplate<class T1,class T2> ostream& operator<<(ostream& os, const map<T1,T2>& a) {os << '{';int i=0;for(auto p:a){if(i>0&&i<sz(a))os << \", \";os << p;i++;}os << '}';return os;}\nconst int S=62,mod=998244353,L=11;\nint get(char c){\n    if(c>='a'&&c<='z')return c-'a';\n    if(c>='A'&&c<='Z')return c-'A'+26;\n    return c-'0'+52;\n}\nint cnt[L][S][S],dp[S][S][S];\nint get(int a,int b,int c,int d){if(a==b&&b==c&&c==d)return 1;if(a==b&&b==c)return 4;if(b==c&&c==d)return 4;if(a==b&&c==d)return 6;if(a==b||b==c||c==d)return 12;return 24;}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int n,sol=0;\n    cin >> n;\n    map<string,bool> was;\n    for(int i=0;i<n;i++)\n    {\n        string s;\n        cin >> s;\n        string t=s;\n        reverse(all(t));\n        if(!was[s])\n            cnt[s.size()][get(s.front())][get(s.back())]++,was[s]=1;\n        if(!was[t])\n            cnt[t.size()][get(t.front())][get(t.back())]++,was[t]=1;\n    }\n    for(int o=3;o<=10;o++){\n        for(int i=0;i<S;i++)for(int j=i;j<S;j++)for(int k=j;k<S;k++)dp[i][j][k]=0;\n        for(int i=0;i<S;i++)for(int j=i;j<S;j++)for(int k=j;k<S;k++)for(int w=0;w<S;w++)dp[i][j][k]=(dp[i][j][k]+(ll)cnt[o][i][w]*cnt[o][j][w]%mod*cnt[o][k][w]%mod)%mod;\n        for(int i=0;i<S;i++)for(int j=i;j<S;j++)for(int k=j;k<S;k++)for(int w=k;w<S;w++)sol=(sol+(ll)dp[i][j][k]*dp[i][j][w]%mod*dp[i][k][w]%mod*dp[j][k][w]%mod*get(i,j,k,w)%mod)%mod;\n    }\n    cout << sol;\n}\n",
    "ext": "cpp"
  },
  "57793218": {
    "code": "#pragma GCC optimize (\"Ofast\")\n#pragma GCC push_options\n#pragma GCC optimize (\"unroll-loops\")\n#include<bits/stdc++.h>\n#define pb push_back\n#define __V vector\n#define all(x) x.begin(), x.end()\n#define oit ostream_iterator\n#define mod 998244353ll\nusing namespace std;\nvoid doin() {\n\tcin.tie();\n\tcout.tie();\n\tios::sync_with_stdio(0);\n#ifndef ONLINE_JUDGE\n//\tfreopen(\"input.txt\", \"r\", stdin);\n//\tfreopen(\"output.txt\", \"w\", stdout);\n#endif\n}\ntemplate<typename X, typename Y>\nistream& operator>>(istream& in, pair<X, Y> &a) {\n\tin >> a.first >> a.second;\n\treturn in;\n}\ntemplate<typename T>\nvoid getv(T& i) {\n\tcin >> i;\n}\ntemplate<typename T, typename ... Ns>\nvoid getv(vector<T>& v, int n, Ns ... ns) {\n\tv.resize(n);\n\tfor (auto& i : v)\n\t\tgetv(i, ns...);\n}\ntemplate<typename T>\nvoid getv1(T& i) {\n\tcin >> i;\n}\ntemplate<typename T, typename ... Ns>\nvoid getv1(vector<T>& v, int n, Ns ... ns) {\n\tv.resize(n + 1);\n\tfor (int i = 1; i <= n; i++)\n\t\tgetv(v[i], ns...);\n}\n#ifdef _WIN32\n#define getchar_unlocked() _getchar_nolock()\n#define _CRT_DISABLE_PERFCRIT_LOCKS\n#endif\ninline void getch(char &x) {\n\twhile (x = getchar_unlocked(), x < 33) {\n\t\t;\n\t}\n}\ninline void getstr(string &str) {\n\tstr.clear();\n\tchar cur;\n\twhile (cur = getchar_unlocked(), cur < 33) {\n\t\t;\n\t}\n\twhile (cur > 32) {\n\t\tstr += cur;\n\t\tcur = getchar_unlocked();\n\t}\n}\ntemplate<typename T> inline bool sc(T &num) {\n\tbool neg = 0;\n\tint c;\n\tnum = 0;\n\twhile (c = getchar_unlocked(), c < 33) {\n\t\tif (c == EOF)\n\t\t\treturn false;\n\t}\n\tif (c == '-') {\n\t\tneg = 1;\n\t\tc = getchar_unlocked();\n\t}\n\tfor (; c > 47; c = getchar_unlocked())\n\t\tnum = num * 10 + c - 48;\n\tif (neg)\n\t\tnum *= -1;\n\treturn true;\n}\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef float ld;\ntypedef int _I;\ntypedef pair<_I, _I> pi;\ntypedef pair<ld, ld> pd;\ntypedef map<_I, _I> mii;\ntypedef __V <_I> vi;\ntypedef __V <char> vc;\ntypedef __V <ld> vd;\ntypedef __V <vd> vvd;\ntypedef __V <pi> vpi;\ntypedef __V <__V<_I>> vvi;\ntypedef __V <__V<char>> vvc;\ntypedef __V <__V<pi>> vvpi;\nusing AntonTsypko = void;\nusing arsijo = AntonTsypko;\nusing god = arsijo;\nuniform_real_distribution<double> double_dist(0, 1);\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nmt19937_64 rng64(chrono::steady_clock::now().time_since_epoch().count());\nint n;\nmap<string, int> used;\n\nint id(char c) {\n\tif (c >= 'a' && c <= 'z')\n\t\treturn c - 'a';\n\tif (c >= 'A' && c <= 'Z')\n\t\treturn 26 + c - 'A';\n\treturn 52 + c - '0';\n}\n\ninline int sym(int res[4]) {\n\tint a = 24;\n\tif (res[0] == res[1] && res[2] == res[1] && res[3] == res[2])\n\t\ta /= 24;\n\telse if (res[0] == res[1] && res[2] == res[1])\n\t\ta /= 6;\n\telse if (res[0] == res[1])\n\t\ta /= 2;\n\tif (res[0] != res[1]) {\n\t\tif (res[1] == res[2] && res[2] == res[3])\n\t\t\ta /= 6;\n\t\telse if (res[1] == res[2])\n\t\t\ta /= 2;\n\t}\n\tif (res[2] != res[1]) {\n\t\tif (res[2] == res[3])\n\t\t\ta /= 2;\n\t}\n\treturn a;\n}\n\nint main() {\n//\tll dp3[8][32][32][32];\n\tvector<vector<vector<vector<ll>>>> dp3(8,\n\t\t\tvector<vector<vector<ll>>>(62,\n\t\t\t\t\tvector<vector<ll>>(62, vector<ll>(62))));\n\tll cnt[8][70][70], ans = 0;\n\tmemset(cnt, 0, sizeof cnt);\n\tdoin();\n\tcin >> n;\n\tstring s;\n\twhile (n--) {\n\t\tcin >> s;\n\t\tif (!used[s]) {\n\t\t\tused[s] = 1;\n\t\t\tcnt[s.size() - 3][id(s[0])][id(s.back())]++;\n\t\t}\n\t\treverse(all(s));\n\t\tif (!used[s]) {\n\t\t\tused[s] = 1;\n\t\t\tcnt[s.size() - 3][id(s[0])][id(s.back())]++;\n\t\t}\n\t}\n\tint res[4];\n\tmemset(res, 0, sizeof res);\n\twhile (true) {\n\t\tbool inc = true;\n\t\tfor (int i = 0; inc && i < 3; i++) {\n\t\t\tif (++res[i] == 62)\n\t\t\t\tres[i] = 0;\n\t\t\telse\n\t\t\t\tinc = 0;\n\t\t}\n\t\tfor (int i = 1; i >= 0; i--)\n\t\t\tres[i] = max(res[i], res[i + 1]);\n\t\tfor (res[3] = 0; res[3] < 62; res[3]++)\n\t\t\tfor (int l = 0; l < 8; l++) {\n\t\t\t\tll t = cnt[l][res[3]][res[1]];\n\t\t\t\tt *= cnt[l][res[3]][res[2]];\n\t\t\t\tif (t >= mod)\n\t\t\t\t\tt %= mod;\n\t\t\t\tt *= cnt[l][res[0]][res[3]];\n\t\t\t\tif (t >= mod)\n\t\t\t\t\tt %= mod;\n\t\t\t\tdp3[l][res[0]][res[1]][res[2]] += t;\n\t\t\t\tif (dp3[l][res[0]][res[1]][res[2]])\n\t\t\t\t\tdp3[l][res[0]][res[1]][res[2]] %= mod;\n\t\t\t}\n\t\tif (inc)\n\t\t\tbreak;\n\t}\n\tmemset(res, 0, sizeof res);\n\tint F = 0;\n\twhile (true) {\n\t\tbool inc = true;\n\t\tfor (int i = 0; inc && i < 4; i++) {\n\t\t\tif (++res[i] == 62)\n\t\t\t\tres[i] = 0;\n\t\t\telse\n\t\t\t\tinc = 0;\n\t\t}\n\t\tfor (int i = 2; i >= 0; i--)\n\t\t\tres[i] = max(res[i], res[i + 1]);\n\t\tfor (int l = 0; l < 8; l++) {\n\t\t\tll t = dp3[l][res[0]][res[1]][res[2]];\n\t\t\tt *= dp3[l][res[1]][res[2]][res[3]];\n\t\t\tif (t >= mod)\n\t\t\t\tt %= mod;\n\n//\t\t\tcout << res[0] << \" \" << res[1] << \" \" << res[3] << \" \" << dp3[l][res[0]][res[1]][res[3]] << \"\\n\";\n\t\t\tll t2 = dp3[l][res[0]][res[1]][res[3]];\n\t\t\tt2 *= dp3[l][res[0]][res[2]][res[3]];\n\t\t\tif (t2 >= mod)\n\t\t\t\tt2 %= mod;\n\t\t\tt *= t2;\n\t\t\tif (t >= mod)\n\t\t\t\tt %= mod;\n\t\t\tif (t)\n\t\t\t\tt *= sym(res);\n\t\t\tif (t >= mod)\n\t\t\t\tt %= mod;\n\t\t\tans += t;\n\t\t\tif (ans >= mod)\n\t\t\t\tans %= mod;\n\t\t}\n\t\tif (inc)\n\t\t\tbreak;\n\t}\n\tcout << ans;\n\treturn 0;\n}\n",
    "ext": "cpp"
  },
  "57793173": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long lint;\n\nconst int MAXN = 100005;\nconst lint MOD = 998244353;\nconst int ALPH = 62;\n\nstring inp[MAXN];\nvector<string> str[11];\nvector<lint> I[ALPH], Y[ALPH][ALPH];\n//lint I[ALPH][ALPH], Y[ALPH][ALPH][ALPH];\n\nint tonum(char c) {\n\tif('a' <= c && c <= 'z') return c - 'a';\n\telse if('A' <= c && c <= 'Z') return c - 'A' + 26;\n\telse return c - '0' + 52;\n}\n\nvoid addnum(lint &a, lint b) { a = (a + b) % MOD; }\n\nlint multf(lint a, lint b, lint c, lint d = 1ll, int e = 1) { return a * b % MOD * c % MOD * d % MOD * e % MOD; }\n\nint main() {\n\tios::sync_with_stdio(0); cin.tie(0);\n\tint N;\n\tlint ans = 0;\n\n\tcin >> N;\n\tfor(int i = 0; i < N; i++) cin >> inp[i];\n\t//for(int i = 0; i < N; i++) cout << \"[\" << inp[i] << \"]\";\n\n\tfor(int i = 0; i < N; i++) str[inp[i].size()].push_back(inp[i]);\n\tfor(int i = 0; i < ALPH; i++) I[i].resize(ALPH);\n\tfor(int i = 0; i < ALPH; i++) for(int j = 0; j < ALPH; j++) Y[i][j].resize(ALPH);\n\tfor(int i = 3; i <= 10; i++) if(!str[i].empty()) {\n\t\tfor(auto &a : str[i]) {\n\t\t\tstring rev = a;\n\t\t\tfor(int j = 0; j < rev.size() / 2; j++) swap(rev[j], rev[rev.size() - 1 - j]);\n\t\t\tif(rev < a) swap(a, rev);\n\t\t}\n\t\tsort(str[i].begin(), str[i].end());\n\t\tstr[i].resize(unique(str[i].begin(), str[i].end()) - str[i].begin());\n\t\t//for(auto a : str[i]) cout << \"[\" << a << \"]\\n\";\n\n\t\tfor(int j = 0; j < ALPH; j++) for(int k = 0; k < ALPH; k++) I[j][k] = 0;\n\t\tfor(int j = 0; j < str[i].size(); j++) {\n\t\t\taddnum(I[tonum(str[i][j][0])][tonum(str[i][j].back())], 1ll);\n\t\t\tbool b = true;\n\t\t\tfor(int k = 0; k < str[i][j].size() / 2; k++) if(str[i][j][k] != str[i][j][str[i][j].size() - 1 - k]) b = false;\n\t\t\tif(!b) addnum(I[tonum(str[i][j].back())][tonum(str[i][j][0])], 1ll);\n\t\t}\n\t\t//cout << \"*\\n\";\n\n\t\tfor(int j = 0; j < ALPH; j++) for(int k = j; k < ALPH; k++) for(int l = k; l < ALPH; l++) {\n\t\t\tY[j][k][l] = 0;\n\t\t\tfor(int m = 0; m < ALPH; m++) addnum(Y[j][k][l], multf(I[m][j], I[m][k], I[m][l]));\n\t\t}\n\t\t//for(int m = 0; m < ALPH; m++) for(int j = 0; j < ALPH; j++) for(int k = 0; k < ALPH; k++)\n\t\t\t//for(int l = 0; l < ALPH; l++) addnum(Y[j][k][l], I[m][j] * I[m][k] % MOD * I[m][l] % MOD);\n\t\t//cout << \"*\\n\";\n\t\tfor(int j = 0; j < ALPH; j++) addnum(ans, multf(Y[j][j][j], Y[j][j][j], Y[j][j][j], Y[j][j][j]));\n\t\tfor(int j = 0; j < ALPH; j++) for(int k = j + 1; k < ALPH; k++) {\n\t\t\taddnum(ans, multf(Y[j][j][j], Y[j][j][k], Y[j][j][k], Y[j][j][k], 4));\n\t\t\taddnum(ans, multf(Y[j][j][k], Y[j][j][k], Y[j][k][k], Y[j][k][k], 6));\n\t\t\taddnum(ans, multf(Y[j][k][k], Y[j][k][k], Y[j][k][k], Y[k][k][k], 4));\n\t\t}\n\t\tfor(int j = 0; j < ALPH; j++) for(int k = j + 1; k < ALPH; k++) for(int l = k + 1; l < ALPH; l++) {\n\t\t\taddnum(ans, multf(Y[j][j][k], Y[j][j][l], Y[j][k][l], Y[j][k][l], 12));\n\t\t\taddnum(ans, multf(Y[j][k][k], Y[j][k][l], Y[j][k][l], Y[k][k][l], 12));\n\t\t\taddnum(ans, multf(Y[j][k][l], Y[j][k][l], Y[j][l][l], Y[k][l][l], 12));\n\t\t}\n\t\tfor(int j = 0; j < ALPH; j++) for(int k = j + 1; k < ALPH; k++)\n\t\t\tfor(int l = k + 1; l < ALPH; l++) for(int m = l + 1; m < ALPH; m++)\n\t\t\t\taddnum(ans, multf(Y[j][k][l], Y[j][k][m], Y[j][l][m], Y[k][l][m], 24));\n\t}\n\n\tcout << ans;\n\treturn 0;\n}\n",
    "ext": "cpp"
  },
  "57791733": {
    "code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nlong long kut[65][65][65][11],d[300][300][11];\nlong long n,m,k,l,i,j,a,b,mod=998244353,res,p;\nchar c1,c2;\nstring s;\nset<string>st;\nvector<char>v;\n\nint perm(int i,int j,int t,int k){\n    if(i==k) return 1;\n    if(i==t) return 4;\n    if(i==j && t==k) return 6;\n    if(i==j) return 12;\n    if(j==k) return 4;\n    if(j==t) return 12;\n    if(k==t) return 12;\n    return 24;\n}\nmain(){\n\ncin>>n;\n\nfor(int i=0;i<n;i++){\n    cin>>s;\n    st.insert(s);\n    reverse(s.begin(),s.end());\n    st.insert(s);\n}\n\nfor(set<string> :: iterator it=st.begin();it!=st.end();it++){\n    s=*it;\n    m=s.size();\n    c1=s[0];\n    c2=s[m-1];\n    d[(int)c1][(int)c2][m]++;\n}\n\nfor(char c='a';c<='z';c++)\n    v.push_back(c);\nfor(char c='A';c<='Z';c++)\n    v.push_back(c);\nfor(char c='0';c<='9';c++)\n    v.push_back(c);\n\nfor(int l=3;l<=10;l++){\n    for(int i=0;i<62;i++){\n        int c1=(int)v[i];\n        for(int j=i;j<62;j++){\n            int c2=(int)v[j];\n            for(int t=j;t<62;t++){\n                int c3=(int)v[t];\n                for(int k=0;k<62;k++){\n                    int cc=(int)v[k];\n                    kut[i][j][t][l]=(kut[i][j][t][l]+(((d[c1][cc][l]*d[c2][cc][l])%mod)*d[c3][cc][l])%mod)%mod;\n                }\n            }\n        }\n    }\n}\n\n\nfor(int l=3;l<=10;l++)\n    for(int i=0;i<62;i++){\n        for(int j=i;j<62;j++){\n            for(int t=j;t<62;t++){\n                for(int k=t;k<62;k++){\n                    p=(((((kut[i][j][t][l]*kut[i][j][k][l])%mod)*kut[i][t][k][l])%mod)*kut[j][t][k][l])%mod;\n                    res=(res+p*perm(i,j,t,k))%mod;\n                }\n            }\n        }\n    }\n\n\ncout<<res;\n\n}\n",
    "ext": "cpp"
  },
  "57791491": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nconst int mod = 998244353;\n\nint n, cnt[11][62][62], dt[62][62][62];\nll ans;\n\nint convert (char T) {\n\tif('0' <= T && T <= '9') return T - '0';\n\tif('A' <= T && T <= 'Z') return T - 'A' + 10;\n\treturn T - 'a' + 36;\n}\n\nmap<string, bool> chk;\n\nll solve (int i, int j, int k, int l) {\n\treturn 1ll * dt[i][j][k] * dt[i][j][l] % mod * dt[i][k][l] % mod * dt[j][k][l] % mod;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) {\n\t\tstring tmp;\n\t\tcin >> tmp;\n\t\tint L = tmp.size(), A = convert(tmp[0]), B = convert(tmp.back());\n\t\tif(!chk[tmp]) {\n\t\t\tchk[tmp] = 1;\n\t\t\tcnt[L][A][B]++;\n\t\t}\n\t\treverse(tmp.begin(), tmp.end());\n\t\tif(!chk[tmp]) {\n\t\t\tchk[tmp] = 1;\n\t\t\tcnt[L][B][A]++;\n\t\t}\n\t}\n\tfor(int x=3;x<=10;x++) {\n\t\tfor(int i=0;i<62;i++) {\n\t\t\tfor(int j=i;j<62;j++) {\n\t\t\t\tfor(int k=j;k<62;k++) {\n\t\t\t\t\tdt[i][j][k] = 0;\n\t\t\t\t\tfor(int t=0;t<62;t++) {\n\t\t\t\t\t\tdt[i][j][k] += 1ll * cnt[x][i][t] * cnt[x][j][t] % mod * cnt[x][k][t] % mod;\n\t\t\t\t\t\tdt[i][j][k] %= mod;\n\t\t\t\t\t}\n\t\t\t\t\tdt[k][i][j] = dt[k][j][i] = dt[j][i][k] = dt[j][k][i] = dt[i][k][j] = dt[i][j][k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<62;i++) {\n\t\t\tans += 1 * solve(i, i, i, i);\n\t\t\tfor(int j=i+1;j<62;j++) {\n\t\t\t\tans += 4ll * solve(i, i, i, j) + 6ll * solve(i, i, j, j) + 4ll * solve(i, j, j, j);\n\t\t\t\tfor(int k=j+1;k<62;k++) {\n\t\t\t\t\tans += 12ll * solve(i, i, j, k) + 12ll * solve(j, j, i, k) + 12ll * solve(k, k, i, j);\n\t\t\t\t\tfor(int l=k+1;l<62;l++) {\n\t\t\t\t\t\tans += 24ll * solve(i, j, k, l);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tans %= mod;\n\t}\n\tprintf(\"%lld\\n\", ans);\n}\n",
    "ext": "cpp"
  },
  "57790605": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define SZ(a) (int)(a.size())\n#define PB push_back\n#define LL long long\n#define X first\n#define Y second\nint n;\nconst int mod = 998244353;\nconst int szAlp = 62;\nint add(int a , int b)\n{\n\treturn a + b >= mod ? a + b - mod : a + b;\n}\nint mult(int a , int b)\n{\n\treturn a * (LL)b % mod;\n}\nconst int LEN = 4;\nint fact[LEN + 1] = {1 , 1, 2 , 6 , 24};\nint arr[LEN];\nint cnt2[szAlp];\nint cntCnt[LEN + 1];\nint g()\n{\n\tmemset(cntCnt , 0 , sizeof cntCnt);\n\tmemset(cnt2 , 0 , sizeof cnt2);\n\tcntCnt[0] = 4;\n\tfor(int i = 0; i < LEN; i++)\n\t{\n\t\tcntCnt[cnt2[arr[i]]]--;\n\t\tcnt2[arr[i]]++;\n\t\tcntCnt[cnt2[arr[i]]]++;\n\t}\n\tint ans = 24;\n\tfor(int i = 1; i <= 4; i++)\n\t\tfor(int j = 0; j < cntCnt[i]; j++)\n\t\t\tans /= fact[i];\n\t\n\treturn ans;\n}\nint cnt[11][szAlp][szAlp];\nint D[szAlp][szAlp][szAlp];\nint f(char c)\n{\n\tif(c >= 'a' && c <= 'z')\n\t\treturn c - 'a';\n\tif(c >= 'A' && c <= 'Z')\n\t\treturn (c - 'A') + 26;\n\treturn (c - '0') + 52;\n}\nbool isPal(string s)\n{\n\tfor(int i = 0; i < SZ(s) / 2; i++)\n\t\tif(s[i] != s[SZ(s) - i - 1])\n\t\t\treturn false;\n\treturn true;\n}\nvoid Add(int &a , int b)\n{\n\ta = add(a , b);\n}\nint main()\n{\n\tcin >> n;\n\tset<string> words;\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\twords.insert(s);\n\t\treverse(s.begin() , s.end());\n\t\twords.insert(s);\n\t}\n\tfor(auto x : words)\n\t\tcnt[SZ(x)][f(x[0])][f(x.back())]++;\n\tint ans = 0; \n\tfor(int len = 3; len <= 10; len++)\n\t{\n\t\tmemset(D , 0 , sizeof D);\n\t\tfor(int a = 0; a < szAlp; a++)\n\t\t\tfor(int b = a; b < szAlp; b++)\n\t\t\t\tfor(int c = b; c < szAlp; c++)\n\t\t\t\t\tfor(int d = 0; d < szAlp; d++)\n\t\t\t\t\t\tAdd(D[a][b][c] , mult(cnt[len][a][d] , mult(cnt[len][b][d] , cnt[len][c][d])));\n\t\tfor(int a = 0; a < szAlp; a++)\n\t\t\tfor(int b = a; b < szAlp; b++)\n\t\t\t\tfor(int c = b; c < szAlp; c++)\n\t\t\t\t\tfor(int d = c; d < szAlp; d++)\n\t\t\t\t\t{\n\t\t\t\t\t\tarr[0] = a, arr[1] = b, arr[2] = c , arr[3] = d;\n\t\t\t\t\t\tAdd(ans ,\n\t\t\t\t\t\tmult(g() ,\n\t\t\t\t\t\tmult(mult(D[a][b][c] , D[a][b][d]) , mult(D[a][c][d] , D[b][c][d]))));\n\t\t\t\t\t}\n\t}\n\tcout << ans;\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57789482": {
    "code": "#include <bits/stdc++.h>\n#define int long long\n#define P(x) do {if(debug) cout << x << endl;} while(false)\n#define H(x) P(#x << \": \" << x)\n#define FR(i, a, b) for(int i = (a); i < (b); ++i)\n#define F(i, n) FR(i, 0, n)\n#define DR(i, a, b) for(int i = (b); i --> (a);)\n#define D(i, n) DR(i, 0, n)\n#define S(s) (int)(s).size()\n#define ALL(x) (x).begin(), (x).end()\n#define MI(x, a) (x) = min(x, a)\n#define MA(x, a) (x) = max(x, a)\n#define V vector\n#define pb push_back\n#define mp make_pair\n#define graph graphs[l]\nusing namespace std;\nconst bool debug = 1;\nconst int inf = 1e18;\nconst int mod = 998244353;\nconst int d = 62;\nint f(char c){\n\tif(c>='a'&&c<='z'){\n\t\treturn c-'a';\n\t}\n\tif(c>='A'&&c<='Z'){\n\t\treturn c-'A'+26;\n\t}\n\treturn c-'0'+52;\n}\n\n//graph[11][62][62];\nint fact[4] = {1,2,6,24};\ninline int g(int i, int j, int k, int l){\n\tint m = 0, n =  0, o = 0, p = 0;\n\tif(i == j) m++;\n\tif(i == k) m++;\n\tif(i == l) m++;\n\tif(i != j && j == k) n++;\n\tif(i != k && (i==j||j==k) && k == l) n++;\n\tif(j != k && i!=j && k == l) o++;\n\t//cout<<i<<\" \"<<j<<\" \"<<k<<\" \"<<l<<\"; \"<<fact[3] / fact[m] / fact[n] / fact[o] / fact[p]<<endl;\n\treturn fact[3] / fact[m] / fact[n] / fact[o] / fact[p]; \n}\n\nsigned main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tint N;\n\tvector<vector<vector<int > > > graphs(11, vector<vector<int> > (d,vector<int>(d, 0)));\n\tcin>>N;\n\tvector<string> words(2*N);\n\tfor(int i = 0; i<N; i++){\n\t\tstring a;\n\t\tcin>>a;\n\t\twords[2*i] = a;\n\t\treverse(a.begin(), a.end());\n\t\twords[2*i+1] = a;\n\t}\n\tsort(words.begin(), words.end());\n\twords.push_back(\"___\");\n\tfor(int i = 0; i<2*N; i++){\n\t\tif(words[i+1]!=words[i]){\n\t\t\tgraphs[words[i].size()][f(words[i][0])][f(words[i][words[i].size()-1])]++;\n\t\t}\n\t} \n\tint res = 0;\n\tfor(int l =3; l<=10; l++){\n\t\tvector<vector<vector<int> > > graph3(d, V<V<int> > (d, V<int>(d, 0)));\n\t\tF(i, d) FR(j, i, d) FR(k, j, d){\n\t\t\t\tF(m, d){\n\t\t\t\tgraph3[i][j][k] += graph[i][m]*graph[j][m]*graph[k][m];\n\t\t\t\t//graph3[i][j][k]%=mod;\n\t\t\t\t//if(graph3[i][j][k]!=0){cout<<i<<\" \"<<j<<\" \"<<k<<\" \"<<m<<endl;}\n\t\t\t}\n\t\t\tgraph3[i][j][k]%=mod;\n\t\t}\n\t\tint ans = 1;\n\t\tF(c1, d) FR(c2, c1, d) FR(c3, c2, d) FR(c4, c3, d){\n\t\t\tans = 1;\n\t\t\tans*=graph3[c1][c2][c3];\n\t\t\tans%=mod;\n\t\t\tans*=graph3[c1][c2][c4];\n\t\t\tans%=mod;\n\t\t\tans*=graph3[c1][c3][c4];\n\t\t\tans%=mod;\n\t\t\tans*=graph3[c2][c3][c4];\n\t\t\tans%=mod;\n\n\n\t\t\tres+=ans*g(c1,c2,c3,c4);\n\t\t\tres%=mod;\n\t\t\t//if(c1 == 17 && c2 == 17 && c3 == 17 && c4 == 17) cout<<graph3[c1][c2][c3]<<endl;\n\t\t}\n\t}\n\tcout<<res<<endl;\n\treturn 0;\n}\n",
    "ext": "cpp"
  },
  "57789101": {
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int Mod = 998244353;\nconst int sigma = 62;\n\ntypedef long long ll;\n\nint cnt[12][sigma][sigma], ways[sigma][sigma][sigma];\n\n\n    static int inm(int x, int y) { return (ll) x * y % Mod; }\n    static int inm(int x, int y, int z) { return (ll) x * y % Mod * z % Mod; }\n    static int inm(int x, int y, int z, int t) { return (ll) x * y % Mod * z % Mod * t % Mod; }\n\n    static void add_to(int &x, int y) { x += y; if(x >= Mod) x -= Mod; }\n\n\nstatic int code(char c)\n{\n    if(islower(c)) return c - 'a';\n    if(isupper(c)) return c - 'A' + 26;\n    return 52 + c - '0';\n}\n\nvoid prepare()\n{\n    int i, n;\n    string word;\n    vector<string> words;\n\n    cin >> n;\n    for(i=1; i<=n; ++i)\n    {\n        cin >> word;\n        words.push_back(word);\n        reverse(word.begin(), word.end());\n        words.push_back(word);\n    }\n\n    sort(words.begin(), words.end());\n    words.erase( unique(words.begin(), words.end()), words.end() );\n\n    for(auto &it : words)\n        ++cnt[it.size()][code(it.front())][code(it.back())];\n}\n\nstatic int solve(int cnt[sigma][sigma])\n{\n    int i, j, k, p;\n    int ans = 0;\n\n    for(i=0; i<sigma; ++i)\n        for(j=i; j<sigma; ++j)\n            for(k=j; k<sigma; ++k)\n            {\n                ways[i][j][k] = 0;\n                for(p=0; p<sigma; ++p)\n                    add_to(ways[i][j][k], inm(cnt[p][i], cnt[p][j], cnt[p][k]));\n            }\n\n    for(i=0; i<sigma; ++i)\n        for(j=i; j<sigma; ++j)\n            for(k=j; k<sigma; ++k)\n                for(p=k; p<sigma; ++p)\n                {\n                    int curr = inm(ways[i][j][k], ways[i][j][p], ways[i][k][p], ways[j][k][p]);\n\n                    if(i==p);\n                        else if(i==k || j==p) curr = inm(curr, 4);\n                            else if(i==j && k==p) curr = inm(curr, 6);\n                                else if(i==j || j==k || k==p) curr = inm(curr, 12);\n                                    else curr = inm(curr, 24);\n\n                    add_to(ans, curr);\n                }\n    return ans;\n}\n\nint main()\n{\n    #ifndef ONLINE_JUDGE\n    freopen(\"input\", \"r\", stdin);\n    #endif // ONLINE_JUDGE\n    cin.sync_with_stdio(false); cin.tie(0);\n\n    prepare();\n\n    int i, ans = 0;\n    for(i=3; i<=10; ++i)\n        add_to(ans, solve(cnt[i]));\n\n    cout << ans << '\\n';\n\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57788685": {
    "code": "#pragma GCC optimize(\"Ofast,no-stack-protector\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx\")\n#pragma GCC target(\"avx,tune=native\")\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int mod=998244353;\nint n;\nset<string>len[12];\nint cnt[64][64][64];\nint c[66][66];\nint ans=0;\nconst int _=62;\ninline int getid(char c){\n\tif(c<='z'&&c>='a')return c-'a';\n\tif(c<='Z'&&c>='A')return 26+c-'A';\n\treturn 52+c-'0';\n}\ninline int Calc3(int a,int b,int c){\n\tif(a==b&&b==c)return 1;\n\tif(a==b||b==c)return 3;\n\treturn 6;\n}\ninline int Calc4(int a,int b,int c,int d){\n\tif(a==b&&b==c&&c==d)return 1;\n\tif(b==c&&(a==b||c==d))return 4;\n\tif(a==b&&c==d)return 6;\n\tif(a==b||b==c||c==d)return 12;\n\treturn 24;\n}\nvoid calc(vector<string>v){\n\tif(!v.size())return;\n\tmemset(cnt,0,sizeof cnt);\n\tmemset(c,0,sizeof c);\n\tfor(auto s:v){\n//\t\tcerr<<s<<\" \"<<getid(s[0])<<\" \"<<getid(s.back())<<endl;\n\t\tc[getid(s[0])][getid(s.back())]++;\n\t}\n\tfor(int i=0;i<_;i++)for(int j=i;j<_;j++)for(int k=j;k<_;k++)for(int l=0;l<_;l++){\n\t\tcnt[i][j][k]=(cnt[i][j][k]+c[l][i]*c[l][j]%mod*c[l][k]%mod)%mod;\n\t}\n\tfor(int i=0;i<_;i++)for(int j=i;j<_;j++)for(int k=j;k<_;k++)for(int l=k;l<_;l++){\n\t\tlong long add=1;\n\t\tadd=add*cnt[i][j][k]%mod;\n\t\tadd=add*cnt[i][j][l]%mod;\n\t\tadd=add*cnt[i][k][l]%mod;\n\t\tadd=add*cnt[j][k][l]%mod;\n\t\tadd=add*Calc4(i,j,k,l)%mod;\n\t\t(ans+=add)%=mod;\n\t}\n}\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);cout.tie(0);\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tstring s;cin>>s;len[s.size()].insert(s);\n\t\treverse(s.begin(),s.end());len[s.size()].insert(s);\n\t}\n\tfor(int i=2;i<=10;i++){vector<string>vec(len[i].begin(),len[i].end());calc(vec);}\n\tcout<<ans<<endl;\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57788653": {
    "code": "#pragma GCC optimize(\"Ofast,no-stack-protector\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx\")\n#pragma GCC target(\"avx,tune=native\")\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int mod=998244353;\nint n;\nset<string>len[12];\nint cnt[64][64][64];\nint c[66][66];\nint ans=0;\nconst int _=62;\ninline int getid(char c){\n\tif(c<='z'&&c>='a')return c-'a';\n\tif(c<='Z'&&c>='A')return 26+c-'A';\n\treturn 52+c-'0';\n}\ninline int Calc3(int a,int b,int c){\n\tif(a==b&&b==c)return 1;\n\tif(a==b||b==c)return 3;\n\treturn 6;\n}\ninline int Calc4(int a,int b,int c,int d){\n\tif(a==b&&b==c&&c==d)return 1;\n\tif(b==c&&(a==b||c==d))return 4;\n\tif(a==b&&c==d)return 6;\n\tif(a==b||b==c||c==d)return 12;\n\treturn 24;\n}\nvoid calc(vector<string>v){\n\tif(!v.size())return;\n\tmemset(cnt,0,sizeof cnt);\n\tmemset(c,0,sizeof c);\n\tfor(auto s:v){\n//\t\tcerr<<s<<\" \"<<getid(s[0])<<\" \"<<getid(s.back())<<endl;\n\t\tc[getid(s[0])][getid(s.back())]++;\n\t}\n\tfor(int i=0;i<_;i++)for(int j=i;j<_;j++)for(int k=j;k<_;k++)for(int l=0;l<_;l++){\n\t\tcnt[i][j][k]=(cnt[i][j][k]+c[l][i]*c[l][j]%mod*c[l][k]%mod)%mod;\n\t}\n\tfor(int i=0;i<_;i++)for(int j=i;j<_;j++)for(int k=j;k<_;k++)for(int l=k;l<_;l++){\n\t\tlong long add=1;\n\t\tadd=add*cnt[i][j][k]%mod;\n\t\tadd=add*cnt[i][j][l]%mod;\n\t\tadd=add*cnt[i][k][l]%mod;\n\t\tadd=add*cnt[j][k][l]%mod;\n\t\tadd=add*Calc4(i,j,k,l)%mod;\n\t\t(ans+=add)%=mod;\n\t}\n}\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0);cout.tie(0);\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tstring s;cin>>s;len[s.size()].insert(s);\n\t\treverse(s.begin(),s.end());len[s.size()].insert(s);\n\t}\n\tfor(int i=2;i<=10;i++){vector<string>vec(len[i].begin(),len[i].end());calc(vec);}\n\tcout<<ans<<endl;\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57787782": {
    "code": "#include <bits/stdc++.h>\n#pragma GCC optimize (\"Ofast\")\n#define lsb(x) (x & (-x))\n#define ll long long\n#define ull unsigned long long\n// 217\n// 44\n\n\nconst int MOD = 998244353;\n\ninline int lgput(int a, int b) {\n    int ans = 1;\n    while(b > 0) {\n        if(b & 1) ans = (1LL * ans * a) % MOD;\n        b >>= 1;\n        a = (1LL * a * a) % MOD;\n    }\n    return ans;\n}\n\ninline void mod(int &x) {\n    if(x >= MOD)\n        x -= MOD;\n}\n\ninline void add(int &x, int y) {\n    x += y;\n    mod(x);\n}\n\ninline void sub(int &x, int y) {\n    x += MOD - y;\n    mod(x);\n}\n\ninline void mul(int &x, int y) {\n    x = (1LL * x * y) % MOD;\n}\n\n/*int fact[], invfact[];\n\ninline void prec(int n) {\n    fact[0] = 1;\n    for(int i = 1; i <= n; i++) {\n        fact[i] = (1LL * fact[i - 1] * i) % MOD;\n    }\n    invfact[n] = lgput(fact[n], MOD - 2);\n    for(int i = n - 1; i >= 0; i--) {\n        invfact[i] = (1LL * invfact[i + 1] * (i + 1)) % MOD;\n    }\n}\n\ninline int comb(int n, int k) {\n    if(n < k) return 0;\n    return (1LL * fact[n] * (1LL * invfact[k] * invfact[n - k] % MOD)) % MOD;\n}*/\n\nusing namespace std;\n\n\nint fr[11][62][62];\nint ways[62][62][62];\n\ninline int encode(char ch) {\n    if(ch >= 'a' && ch <= 'z') return ch - 'a';\n    if(ch >= 'A' && ch <= 'Z') return ch - 'A' + 26;\n    return ch - '0' + 52;\n}\n\nint main() {\n    //ifstream cin(\"A.in\");\n    //ofstream cout(\"A.out\");\n    int i, n;\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n\n    cin >> n;\n\n    vector <string> all;\n    for(i = 1; i <= n; i++) {\n        string str;\n        cin >> str;\n        all.push_back(str);\n        reverse(str.begin(), str.end());\n        all.push_back(str);\n    }\n\n    sort(all.begin(), all.end());\n    all.resize(unique(all.begin(), all.end()) - all.begin());\n\n    for(auto &it : all) {\n        fr[it.size()][encode(it[0])][encode(it.back())]++;\n    }\n\n    vector <int> fact(5, 1);\n    fact[2] = 2;\n    fact[3] = 6;\n    fact[4] = 24;\n\n    int ans = 0;\n\n    for(int len = 3; len <= 10; len++) {\n        for(int ch2 = 0; ch2 < 62; ch2++) {\n            for(int ch3 = ch2; ch3 < 62; ch3++) {\n                for(int ch4 = ch3; ch4 < 62; ch4++) {\n                    ways[ch2][ch3][ch4] = 0;\n                    for(int ch1 = 0; ch1 < 62; ch1++) {\n                        add(ways[ch2][ch3][ch4], (1LL * fr[len][ch1][ch2] * fr[len][ch1][ch3] * fr[len][ch1][ch4]) % MOD);\n                    }\n                }\n            }\n        }\n\n        for(int ch1 = 0; ch1 < 62; ch1++) {\n            for(int ch2 = ch1; ch2 < 62; ch2++) {\n                for(int ch3 = ch2; ch3 < 62; ch3++) {\n                    for(int ch4 = ch3; ch4 < 62; ch4++) {\n\n                        int cnt = 24, num = 1;\n                        if(ch2 != ch1) {\n                            cnt /= fact[num], num = 1;\n                        }\n                        else {\n                            num++;\n                        }\n\n                        if(ch3 != ch2) {\n                            cnt /= fact[num], num = 1;\n                        }\n                        else {\n                            num++;\n                        }\n\n                        if(ch4 != ch3) {\n                            cnt /= fact[num], num = 1;\n                        }\n                        else {\n                            num++;\n                        }\n\n                        cnt /= fact[num];\n\n                        int cur = (1LL * ways[ch1][ch2][ch3] * ways[ch1][ch2][ch4]) % MOD;\n                        mul(cur, ways[ch1][ch3][ch4]);\n                        mul(cur, ways[ch2][ch3][ch4]);\n                        mul(cur, cnt);\n                        add(ans, cur);\n\n                    }\n                }\n            }\n        }\n    }\n\n    cout << ans;\n\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57787111": {
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long r=998244353,idk=63;\ninline int change(char ch) {\n    if (ch>='a' && ch<='z')\n        return ch-'a'+1;\n    if (ch>='A' && ch<='Z')\n        return ch-'A'+27;\n    return ch-'0'+53;\n}\nchar ch;\nint n,i,j,a,b,c,d;\nlong long ans;\nstring s,ss;\nlong long pre[11][63][63],tri[11][63][63][63];\nunordered_map <string,bool> m;\ninline long long alo() {\n    if (a<b && b<c && c<d)\n        return 24;\n    if (a==b && b==c) {\n        if (c==d)\n            return 1;\n        if (c<d)\n            return 4;\n    }\n    if (b==c && c==d)\n        return 4;\n    if (a==b) {\n        if (c==d)\n            return 6;\n        return 12;\n    }\n    if (c==d)\n        return 12;\n    if (b==c)\n        return 12;\n}\nint main() {\n    //while (cin>>a>>b>>c>>d)cout<<alo()<<endl;\n    scanf(\"%d\\n\",&n);\n    for (i=1;i<=n;++i) {\n        s=\"\";\n        while (true) {\n            scanf(\"%c\",&ch);\n            if (ch<'0')\n                break;\n            s+=ch;\n        }\n        ss=\"\";\n        for (j=s.length()-1;j>=0;--j)\n            ss+=s[j];\n        if (!m[s])\n            pre[s.length()][change(s[0])][change(ss[0])]++;\n        m[s]=1;\n        if (!m[ss])\n            pre[s.length()][change(ss[0])][change(s[0])]++;\n        m[ss]=1;\n    }\n    for (a=1;a<idk;++a) for (j=3;j<11;++j) for (i=1;i<idk;++i)\n    if (pre[j][i][a])\n        for (b=1;b<idk;++b)\n        if (pre[j][i][b])\n            for (c=1;c<idk;++c)\n            if (pre[j][i][c])\n                        tri[j][a][b][c]=(tri[j][a][b][c]+pre[j][i][a]*pre[j][i][b]*pre[j][i][c])%r;;\n    for (i=3;i<11;++i)\n        for (a=1;a<idk;++a)\n            for (b=a;b<idk;++b)\n                for (c=b;c<idk;++c)\n                if (tri[i][a][b][c])\n                    for (d=c;d<idk;++d)\n                        ans=(((((tri[i][a][b][c]*tri[i][b][c][d])%r)*((tri[i][a][c][d]*tri[i][a][b][d])%r))%r)*alo()+ans)%r;\n    cout<<ans<<endl;\n}\n",
    "ext": "cpp"
  },
  "57787061": {
    "code": "#include <bits/stdc++.h>\n#define F first\n#define S second\n#define mp make_pair\n#define pb push_back\n//#define ll __int128\n#define ll long long\n#define LEFT(a) ((a)<<1)\n#define RIGHT(a) (LEFT(a) + 1)\n#define MID(a,b) ((a+b)>>1)\n#define MAX(a,b) ((a)>(b)?(a):(b))\n#define MIN(a,b) ((a)<(b)?(a):(b))\n/*\n#pragma GCC optimize (\"O3\")\n\n//#pragma comment(linker, \"/STACK: 20000000005\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx2,fma\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#pragma GCC target (\"avx2\")\n#pragma GCC optimization (\"unroll-loops\")\n*/\nusing namespace std;\n\n\nconst ll N = 100005, MOD = 998244353;\n\nll np, mas[65];\nll mass[N];\n\nmap < string, bool > S;\n\nll M[12][65][65];\n\nll D[65][65][65];\n\nll n, x, y, z;\n\nint m, a, b, c, d;\n\nint main()\n{\n    //freopen (\"in.txt\", \"r\", stdin);freopen (\"out.txt\", \"w\", stdout);\n    //ios_base::sync_with_stdio(0);\n    for (char ch = 'a'; ch <= 'z'; ch++){\n        mas[++np] = ch;\n        mass[ch] = np;\n    }\n    for (char ch = 'A'; ch <= 'Z'; ch++){\n        mas[++np] = ch;\n        mass[ch] = np;\n    }\n    for (char ch = '0'; ch <= '9'; ch++){\n        mas[++np] = ch;\n        mass[ch] = np;\n    }\n    scanf (\"%d\", &n);\n    char ch;\n    ch = getchar();\n    string s, ss;\n    while (n--){\n        s = \"\";\n        while (1){\n            ch = getchar();\n            if (ch == '\\n')\n                break;\n            s += ch;\n        }\n        if (S[s])\n            continue;\n        S[s] = 1;\n        m = (int)s.size();\n        x = s[0], y = s[m - 1];\n        x = mass[x];\n        y = mass[y];\n        ++M[m][x][y];\n        ss = \"\";\n        for (int i = m - 1; i >= 0; i--)\n            ss += s[i];\n        if (S[ss])\n            continue;\n        S[ss] = 1;\n        ++M[m][y][x];\n    }\n    ll ans = 0;\n    for (m = 3; m <= 10; ++m){\n        for (a = 1; a <= np; ++a)\n        for (b = 1; b <= np; ++b)\n        for (c = 1; c <= np; ++c)\n        D[a][b][c] = 0;\n        for (d = 1; d <= np; ++d)\n            for (a = 1; a <= np; ++a){\n                x = M[m][a][d];\n                if (x)\n                    for (b = 1; b <= np; ++b){\n                        y = x * M[m][b][d];\n                        if (y)\n                            for (c = 1; c <= np; ++c){\n                                z = y * M[m][c][d] % MOD;\n                                D[a][b][c] += z;\n                            }\n                    }\n                }\n        for (a = 1; a <= np; ++a)\n        for (b = 1; b <= np; ++b)\n        for (c = 1; c <= np; ++c)\n        D[a][b][c] %= MOD;\n        ll pas = 0;\n        for (a = 1; a <= np; ++a)\n        for (b = a; b <= np; ++b)\n        for (c = b; c <= np; ++c)\n        if (D[a][b][c])\n        for (d = c; d <= np; ++d){\n            x = D[a][b][c] * D[a][b][d] % MOD * D[a][c][d] % MOD * D[b][c][d] % MOD;\n            y = 24;\n            if (a == d){\n                y = 1;\n            }\n            else if (a == c || b == d){\n                y = 4;\n            }\n            else if (b == c){\n                y = 12;\n            }\n            else if (a == b && c == d){\n                y = 6;\n            }\n            else if (a == b || c == d){\n                y = 12;\n            }\n            ans += x * y;\n        }\n        ans %= MOD;\n    }\n    printf (\"%lld\\n\", ans);\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57784167": {
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int sz = 62;\nconst ll mod = 998244353;\n\nll D[66][66][66], K[66][66];\nvector <string> S[11];\nll n, ans;\n\nint getv(char c)\n{\n\tif('a' <= c && c <= 'z') return c - 'a';\n\telse if('A' <= c && c <= 'Z') return c - 'A' + 26;\n\telse return c - '0' + 52;\n}\n\nll calc()\n{\n\tint i, j, k, l;\n\tll ret = 0, v;\n\t\n\tfor(i=0; i<sz; i++) for(j=i; j<sz; j++){\n\t\tfor(k=j; k<sz; k++) for(D[i][j][k] = l = 0; l<sz; l++){\n\t\t\tD[i][j][k] = (D[i][j][k] + K[i][l] * K[j][l] % mod * K[k][l]) % mod;\n\t\t}\n\t}\n\t\n\tfor(i=0; i<sz; i++) for(j=i; j<sz; j++){\n\t\tfor(k=j; k<sz; k++) for(l=k; l<sz; l++){\n\t\t\tv = 24;\n\t\t\tif(i == l) v /= 24;\n\t\t\telse if(i == k) v /= 6;\n\t\t\telse if(i == j) v /= 2;\n\t\t\tif(i != j){\n\t\t\t\tif(j == l) v /= 6;\n\t\t\t\telse if(j == k) v /= 2;\n\t\t\t}\n\t\t\tif(j != k){\n\t\t\t\tif(k == l) v /= 2;\n\t\t\t}\n\t\t\t\n\t\t\tv = v * (D[i][j][k] * D[i][j][l] % mod) % mod;\n\t\t\tv = v * (D[i][k][l] * D[j][k][l] % mod) % mod;\n\t\t\t\n\t\t\tret = (ret + v) % mod;\n\t\t}\n\t}\n\t\n\treturn ret;\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\t\n\tstring s;\n\tint i, j, k;\n\t\n\tcin >> n;\n\t\n\tfor(i=0; i<n; i++){\n\t\tcin >> s;\n\t\tS[s.size()].push_back(s);\n\t\treverse(s.begin(), s.end());\n\t\tS[s.size()].push_back(s);\n\t}\n\t\n\tfor(i=3; i<=10; i++){\n\t\tsort(S[i].begin(), S[i].end());\n\t\tS[i].erase(unique(S[i].begin(), S[i].end()), S[i].end());\n\t\t\n\t\tfor(j=0; j<sz; j++){\n\t\t\tfor(k=0; k<sz; k++){\n\t\t\t\tK[j][k] = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(string &t: S[i]){\n\t\t\tK[getv(t[0])][getv(t[i - 1])] ++;\n\t\t}\n\t\t\n\t\tans = (ans + calc()) % mod;\n\t}\n\t\n\tcout << ans << \"\\n\";\n\t\n\treturn 0;\n}",
    "ext": "cpp"
  },
  "57783723": {
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nint al = 0;\nlong long f[109][109];\nlong long mod = 998244353;\nlong long F[266];\nlong long g[109][109][109];\nint G(int a, int b, int c , int d){\n    if(a < b && b < c&& c < d) return 24;\n    if(a ==b && b == c && c == d) return 1;\n    if(a ==b && b == c) return 4;\n    if(b==c && c==d) return 4;\n    if(a ==b && c == d) return 6;\n    return 12;\n}\nint solve(vector<string> v){\n    for(int i = 0; i < al; i++)\n        for(int j = 0; j < al; j++)\n            f[i][j] = 0;\n    for(int i = 0; i < al; i++)\n        for(int j = 0; j < al; j++)\n            for(int k= 0; k < al; k++)\n                g[i][j][k] = 0;\n    for(int i = 0; i < v.size(); i++){\n        int a = F[v[i][0]];\n        int b = F[v[i].back()];\n        string g = v[i]; reverse(g.begin(), g.end());\n        if(g == v[i]) f[a][a]++;\n        else f[a][b]++,f[b][a]++;\n    }\n    for(int i = 0; i < al; i++)\n        for(int j = i; j < al; j++)\n            for(int k = j; k < al; k++)\n                for(int x = 0; x < al; x++){\n                    g[i][j][k] = (g[i][j][k] + f[x][i] * f[x][j] * f[x][k]) % mod;}\n    long long ans = 0;\n    for(int i = 0; i < al; i++)\n        for(int j = i; j < al; j++)\n            for(int k = j; k < al; k++)\n                for(int x = k; x < al; x++)\n                    ans = (ans + g[i][j][k] * g[i][k][x] % mod * g[j][k][x] % mod * g[i][j][x] % mod * G(i,j,k,x) ) % mod;\n    return ans;\n}\nvector<string> u[12];\nmap<string, bool> M;\nmain(){\n    int n;\n    cin >> n;\n    for(int i = 'a'; i <= 'z'; i++)\n        F[i] = al++;\n    for(int i = 'A'; i <= 'Z'; i++)\n        F[i] = al++;\n    for(int i = '0'; i <= '9'; i++)\n        F[i] = al++;\n    for(int i = 1; i <= n; i++){\n        string s;\n        cin >> s;\n        string t = s;\n        reverse(t.begin(),t.end());\n        s = min(s, t);\n        if(M[s]) continue;\n        M[s] = 1;\n        u[s.size()].push_back(s);\n    }\n    long long ans = 0 ;\n    for(int i = 3; i <= 10; i++)\n        ans = (ans + solve(u[i])) % mod;\n    cout << ans << endl;\n}\n",
    "ext": "cpp"
  },
  "57782856": {
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 62;\nconst int mod = 998244353;\nconst int maxn = 1e5 + 5;\n\nint n, ans = 0, dp[N][N][N];\nstring a[maxn];\nint val[N][N][N];\nint cur[N];\nmap <string, bool> mm;\n\nvoid add (int &x, int y) {\n    x += y;\n    if (x >= mod) x -= mod;\n}\n\nint toInt (char c) {\n    if (c >= 'a' && c <= 'z') return c - 'a';\n    if (c >= 'A' && c <= 'Z') return c - 'A' + 26;\n    return c - '0' + 52;\n}\n\nint main(){\n    ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n    cin >> n;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    for (int i = 1; i <= n; i++) {\n        string t = a[i];\n        reverse(t.begin(), t.end());\n        if (!mm.count(a[i])) val[toInt(a[i][0])][toInt(a[i][a[i].length() - 1])][a[i].length()]++, mm[a[i]] = true;\n        if (!mm.count(t)) val[toInt(t[0])][toInt(t[t.length() - 1])][t.length()]++, mm[t] = true;\n    }\n\n    //for (int i = 0; i <= 61; i++) cout << val[toInt('r')][i][5] << \"\\n\";\n\n    for (int side = 3; side <= 10; side++) {\n        memset(dp, 0, sizeof(dp));\n        for (int s = 0; s <= 61; s++) {\n            for (int i = 0; i <= 61; i++) {\n                for (int j = i; j <= 61; j++) {\n                    for (int k = j; k <= 61; k++) {\n                        add(dp[i][j][k], 1LL * val[s][i][side] * val[s][j][side] % mod * val[s][k][side] % mod);\n                    }\n                }\n            }\n        }\n\n        for (int i = 0; i <= 61; i++) {\n            for (int j = i; j <= 61; j++) {\n                for (int k = j; k <= 61; k++) {\n                    for (int l = k; l <= 61; l++) {\n                        bool f1 = (i == j), f2 = (j == k), f3 = (k == l);\n                        if (!f1 && !f2 && !f3) add(ans, 24LL * dp[i][j][k] % mod * dp[i][j][l] % mod * dp[i][k][l] % mod * dp[j][k][l] % mod);\n                        else if (f1 && !f2 && !f3) add(ans, 12LL * dp[i][j][k] % mod * dp[i][j][l] % mod * dp[i][k][l] % mod * dp[j][k][l] % mod);\n                        else if (!f1 && f2 && !f3) add(ans, 12LL * dp[i][j][k] % mod * dp[i][j][l] % mod * dp[i][k][l] % mod * dp[j][k][l] % mod);\n                        else if (f1 && f2 && !f3) add(ans, 4LL * dp[i][j][k] % mod * dp[i][j][l] % mod * dp[i][k][l] % mod * dp[j][k][l] % mod);\n                        else if (!f1 && !f2 && f3) add(ans, 12LL * dp[i][j][k] % mod * dp[i][j][l] % mod * dp[i][k][l] % mod * dp[j][k][l] % mod);\n                        else if (f1 && !f2 && f3) add(ans, 6LL * dp[i][j][k] % mod * dp[i][j][l] % mod * dp[i][k][l] % mod * dp[j][k][l] % mod);\n                        else if (!f1 && f2 && f3) add(ans, 4LL * dp[i][j][k] % mod * dp[i][j][l] % mod * dp[i][k][l] % mod * dp[j][k][l] % mod);\n                        else if (f1 && f2 && f3) add(ans, 1LL * dp[i][j][k] * dp[i][j][l] % mod * dp[i][k][l] % mod * dp[j][k][l] % mod);\n                    }\n                }\n            }\n        }\n    }\n\n    cout << ans;\n    return 0;\n}\n",
    "ext": "cpp"
  },
  "57782656": {
    "code": "//============================================================================\n// Name        : q1.cpp\n// Author      : \n// Version     :\n// Copyright   : Your copyright notice\n// Description : Hello World in C++, Ansi-style\n//============================================================================\n\n#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <utility>\nusing namespace std;\n#define fori(i,n) for(int i=0;i<n;i++)\n#define forn(i,n) for(int i=1;i<n;i++)\n#define fort(i,m,n) for(int i=m;i<n;i++)\n#define maxi 998244353\n#define mod(x) ((x)%maxi)\ntypedef long long lol;\ntypedef vector<int> veci;\ntypedef vector<lol> vecl;\nstring reverse(string a){\n\tstring b;\n\twhile(a.size()){\n\t\tb.push_back(a.back());\n\t\ta.pop_back();\n\t}\n\treturn b;\n}\n#define num 62\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tint n;\n\tcin >> n;\n\tvector<vector<string>> arr(11);\n\tfori(i,n){\n\t\tstring line;\n\t\tcin >> line;\n\t\tarr[line.size()].push_back(line);\n\t\tarr[line.size()].push_back(reverse(line));\n\t}\n\tlol ans=0;\n\tvector<int> mapit(256);\n\tfori(i,26){\n\t\tmapit['a'+i]=i;\n\t\tmapit['A'+i]=i+26;\n\t}\n\tfori(i,10){\n\t\tmapit['0'+i]=52+i;\n\t}\n\tlol triple[num][num][num];\n\tfort(l,3,11){\n\t\tvector<vecl> doble(num,vecl(num));\n\t\tsort(arr[l].begin(),arr[l].end());\n\t\tfori(i,arr[l].size()){\n\t\t\tif(i>0&&arr[l][i]==arr[l][i-1]){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdoble[mapit[arr[l][i][0]]][mapit[arr[l][i].back()]]++;\n\t\t}\n\t\tfori(a,num){\n\t\t\tfort(b,a,num){\n\t\t\t\tfort(c,b,num){\n\t\t\t\t\ttriple[a][b][c]=0;\n\t\t\t\t\tfori(d,num){\n\t\t\t\t\t\tlol cur=1;\n\t\t\t\t\t\tcur=mod(cur*doble[a][d]);\n\t\t\t\t\t\tcur=mod(cur*doble[b][d]);\n\t\t\t\t\t\tcur=mod(cur*doble[c][d]);\n\t\t\t\t\t\ttriple[a][b][c]=mod(cur+triple[a][b][c]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfori(a,num){\n\t\t\tfort(b,a,num){\n\t\t\t\tfort(c,b,num){\n\t\t\t\t\tfort(d,c,num){\n\t\t\t\t\t\tlol cur=24;\n\t\t\t\t\t\tif(a==b){\n\t\t\t\t\t\t\tcur/=2;\n\t\t\t\t\t\t\tif(b==c){\n\t\t\t\t\t\t\t\tcur/=3;\n\t\t\t\t\t\t\t\tif(c==d){\n\t\t\t\t\t\t\t\t\tcur/=4;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tif(c==d){\n\t\t\t\t\t\t\t\t\tcur/=2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tif(b==c){\n\t\t\t\t\t\t\t\tcur/=2;\n\t\t\t\t\t\t\t\tif(c==d){\n\t\t\t\t\t\t\t\t\tcur/=3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tif(c==d){\n\t\t\t\t\t\t\t\t\tcur/=2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcur=mod(cur*triple[a][b][c]);\n\t\t\t\t\t\tcur=mod(cur*triple[a][b][d]);\n\t\t\t\t\t\tcur=mod(cur*triple[a][c][d]);\n\t\t\t\t\t\tcur=mod(cur*triple[b][c][d]);\n\t\t\t\t\t\tans = mod(ans+cur);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n",
    "ext": "cpp"
  }
}